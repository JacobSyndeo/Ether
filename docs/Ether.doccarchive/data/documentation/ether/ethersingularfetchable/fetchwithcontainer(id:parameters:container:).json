{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fetchWithContainer"},{"kind":"text","text":"<"},{"text":"Container","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":"? = nil, ","kind":"text"},{"text":"parameters","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Ether","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5EtherAAV10Parametersa","kind":"typeIdentifier","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Parameters","text":"Parameters"},{"kind":"text","text":" = [:], "},{"text":"container","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Ether0A17SingularFetchablePAAE18fetchWithContainer2id10parameters9containerqd__SSSg_SDySSs25LosslessStringConvertible_pGqd__mtYaKSeRd__lFZ0F0L_qd__mfp","text":"Container","kind":"typeIdentifier"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Container","preciseIdentifier":"s:5Ether0A17SingularFetchablePAAE18fetchWithContainer2id10parameters9containerqd__SSSg_SDySSs25LosslessStringConvertible_pGqd__mtYaKSeRd__lFZ0F0L_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Container"},{"text":" : ","kind":"text"},{"text":"Decodable","kind":"typeIdentifier","preciseIdentifier":"s:Se"}],"languages":["swift"],"platforms":["Mac Catalyst"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"The identifier of the instance to fetch from the server.","type":"text"}],"type":"paragraph"}],"name":"id"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The parameters to use in the request. Defaults to empty."}]}],"name":"parameters"},{"name":"container","content":[{"inlineContent":[{"text":"The container type to decode from. You’ll need to create this type based on the server’s API response format.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An instance of the provided container format, based on the server’s response."}]}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Sometimes, servers don’t directly give you the type you want. Sometimes, it’s wrapped up in some kind of “Results” container type."},{"type":"text","text":" "},{"type":"text","text":"Typically, this includes various metadata about the request and\/or response."}]},{"type":"paragraph","inlineContent":[{"text":"However, this conflicts with Fetchable’s ","type":"text"},{"code":"fetch","type":"codeVoice"},{"type":"text","text":" function, which normally needs to give the caller exactly the type it was expecting."}]},{"inlineContent":[{"type":"text","text":"So if the server is giving you a result container (which contains the type you’re after), this function is for you!"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Otherwise, in the case that you ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"don’t"}]},{"type":"text","text":" want that metadata, use "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/fetch(id:parameters:container:keyPath:)","isActive":true},{"type":"text","text":"."}]},{"name":"Throws","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Error"},{"text":", or any error thrown by the ","type":"text"},{"code":"URLSession","type":"codeVoice"},{"type":"text","text":" data task, if the request fails."}]}]}],"kind":"content"}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/fetchWithContainer(id:parameters:container:)"},"abstract":[{"type":"text","text":"Fetch an instance of this type from the server, within a container type."}],"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether","doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"]]},"metadata":{"extendedModule":"Ether","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"fetchWithContainer","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Container"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"text":"parameters","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5EtherAAV","kind":"typeIdentifier","text":"Ether"},{"kind":"text","text":"."},{"text":"Parameters","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV10Parametersa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"container"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A17SingularFetchablePAAE18fetchWithContainer2id10parameters9containerqd__SSSg_SDySSs25LosslessStringConvertible_pGqd__mtYaKSeRd__lFZ0F0L_qd__mfp"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:5Ether0A17SingularFetchablePAAE18fetchWithContainer2id10parameters9containerqd__SSSg_SDySSs25LosslessStringConvertible_pGqd__mtYaKSeRd__lFZ0F0L_qd__mfp","text":"Container","kind":"typeIdentifier"}],"modules":[{"name":"Ether"}],"roleHeading":"Type Method","symbolKind":"method","role":"symbol","title":"fetchWithContainer(id:parameters:container:)","externalID":"s:5Ether0A17SingularFetchablePAAE18fetchWithContainer2id10parameters9containerqd__SSSg_SDySSs25LosslessStringConvertible_pGqd__mtYaKSeRd__lFZ"},"variants":[{"paths":["\/documentation\/ether\/ethersingularfetchable\/fetchwithcontainer(id:parameters:container:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://Ether/documentation/Ether/EtherSingularFetchable/fetch(id:parameters:container:keyPath:)":{"type":"topic","url":"\/documentation\/ether\/ethersingularfetchable\/fetch(id:parameters:container:keypath:)","abstract":[{"type":"text","text":"Fetch an instance of this type from the server, unwrapping from a container type."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/fetch(id:parameters:container:keyPath:)","title":"fetch(id:parameters:container:keyPath:)","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fetch","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"?, ","kind":"text"},{"text":"parameters","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV","text":"Ether"},{"text":".","kind":"text"},{"text":"Parameters","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV10Parametersa"},{"text":", ","kind":"text"},{"text":"container","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A17SingularFetchablePAAE5fetch2id10parameters9container7keyPathxSSSg_SDySSs25LosslessStringConvertible_pGqd__ms03KeyI0Cyqd__xGtYaKSeRd__lFZ9ContainerL_qd__mfp","text":"Container"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"keyPath"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A17SingularFetchablePAAE5fetch2id10parameters9container7keyPathxSSSg_SDySSs25LosslessStringConvertible_pGqd__ms03KeyI0Cyqd__xGtYaKSeRd__lFZ9ContainerL_qd__mfp","text":"Container"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://Ether/documentation/Ether/Ether/Error":{"abstract":[{"type":"text","text":"An error that can occur while using Ether."},{"type":"text","text":" "},{"text":"This can help give insight into what went wrong.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"As long as the issue wasn’t server-side, network-related, or a bug in Ether, this should hopefully help you resolve the issue!"},{"type":"text","text":" "},{"type":"text","text":"If not, or if you suspect a bug in Ether, please "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/JacobSyndeo\/Ether\/issues\/new"},{"text":", and I’ll do my best to help you out!","type":"text"}],"title":"Ether.Error","url":"\/documentation\/ether\/ether\/error","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Error","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Error"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Error"}],"role":"symbol","kind":"symbol"},"doc://Ether/documentation/Ether/Ether/Parameters":{"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Parameters"}],"title":"Ether.Parameters","url":"\/documentation\/ether\/ether\/parameters","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Parameters","navigatorTitle":[{"text":"Parameters","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A dictionary of parameters to apply to a "},{"code":"URLRequest","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol"},"doc://Ether/documentation/Ether/EtherSingularFetchable":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","abstract":[{"text":"Types conforming to ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","type":"reference","isActive":true},{"type":"text","text":" assert that their APIs provide a way to get single instances back, usually by providing an identifier."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EtherSingularFetchable"}],"url":"\/documentation\/ether\/ethersingularfetchable","type":"topic","title":"EtherSingularFetchable","kind":"symbol","navigatorTitle":[{"text":"EtherSingularFetchable","kind":"identifier"}]},"doc://Ether/documentation/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether","abstract":[{"text":"Welcome to easy, clean, Swifty networking!","type":"text"}],"kind":"symbol","url":"\/documentation\/ether","type":"topic","role":"collection","title":"Ether"},"doc://Ether/documentation/Ether/EtherSingularFetchable/fetchWithContainer(id:parameters:container:)":{"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"fetchWithContainer","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"parameters","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5EtherAAV10Parametersa","kind":"typeIdentifier","text":"Parameters"},{"kind":"text","text":", "},{"kind":"externalParam","text":"container"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A17SingularFetchablePAAE18fetchWithContainer2id10parameters9containerqd__SSSg_SDySSs25LosslessStringConvertible_pGqd__mtYaKSeRd__lFZ0F0L_qd__mfp"},{"kind":"text","text":".Type) "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Container","preciseIdentifier":"s:5Ether0A17SingularFetchablePAAE18fetchWithContainer2id10parameters9containerqd__SSSg_SDySSs25LosslessStringConvertible_pGqd__mtYaKSeRd__lFZ0F0L_qd__mfp","kind":"typeIdentifier"}],"title":"fetchWithContainer(id:parameters:container:)","url":"\/documentation\/ether\/ethersingularfetchable\/fetchwithcontainer(id:parameters:container:)","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/fetchWithContainer(id:parameters:container:)","role":"symbol","abstract":[{"text":"Fetch an instance of this type from the server, within a container type.","type":"text"}],"kind":"symbol"},"doc://Ether/documentation/Ether/Ether":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Ether","kind":"identifier"}],"title":"Ether","kind":"symbol","navigatorTitle":[{"text":"Ether","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","url":"\/documentation\/ether\/ether","type":"topic","abstract":[{"text":"The core of Ether. All the core functions and types are namespaced under this.","type":"text"}],"role":"symbol"},"https://github.com/JacobSyndeo/Ether/issues/new":{"titleInlineContent":[{"type":"text","text":"open an issue on GitHub"}],"url":"https:\/\/github.com\/JacobSyndeo\/Ether\/issues\/new","title":"open an issue on GitHub","type":"link","identifier":"https:\/\/github.com\/JacobSyndeo\/Ether\/issues\/new"}}}