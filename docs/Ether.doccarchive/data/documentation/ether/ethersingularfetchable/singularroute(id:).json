{"variants":[{"paths":["\/documentation\/ether\/ethersingularfetchable\/singularroute(id:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:5Ether0A17SingularFetchableP13singularRoute2idAA0aE0_pSSSg_tFZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"singularRoute"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?) -> "},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EtherRoute","kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A5RouteP"}],"modules":[{"name":"Ether"}],"role":"symbol","required":true,"title":"singularRoute(id:)","roleHeading":"Type Method","symbolKind":"method"},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"singularRoute"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?) -> "},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"EtherRoute","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","preciseIdentifier":"s:5Ether0A5RouteP"}],"languages":["swift"],"platforms":["Mac Catalyst"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The identifier of the instance this route will fetch from the server.","type":"text"}]}],"name":"id"}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","type":"reference","isActive":true},{"text":" corresponding to the type and provided identifier.","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"inlineContent":[{"text":"By convention, this involves the route containing an identifier representing the specific item in question.","type":"text"},{"type":"text","text":" "},{"text":"E.g. in the URL ","type":"text"},{"type":"codeVoice","code":"https:\/\/site.com\/users\/1"},{"text":", the ","type":"text"},{"type":"codeVoice","code":"1"},{"text":" represents the identifier.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Some sites also use username strings, such as "},{"type":"codeVoice","code":"https:\/\/github.com\/JacobSyndeo"},{"text":". In this case, ","type":"text"},{"code":"JacobSyndeo","type":"codeVoice"},{"text":" is the identifier.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For these, youâ€™d want to return:"},{"text":" ","type":"text"},{"code":"\"https:\/\/site.com\/users\/\" + id","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"or"},{"text":" ","type":"text"},{"type":"codeVoice","code":"\"https:\/\/github.com\/\" + id"},{"type":"text","text":", respectively."}]}]}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether","doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"]]},"abstract":[{"text":"The route used to request single instances of this type.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Set this up to return proper route endpoints for any provided identifier (or "},{"type":"codeVoice","code":"nil"},{"text":", if appropriate for the API).","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/singularRoute(id:)"},"references":{"doc://Ether/documentation/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether","url":"\/documentation\/ether","abstract":[{"text":"Welcome to easy, clean, Swifty networking!","type":"text"}],"type":"topic","title":"Ether","kind":"symbol","role":"collection"},"doc://Ether/documentation/Ether/EtherSingularFetchable":{"navigatorTitle":[{"text":"EtherSingularFetchable","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"text":"Types conforming to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"},{"text":" assert that their APIs provide a way to get single instances back, usually by providing an identifier.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","title":"EtherSingularFetchable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"EtherSingularFetchable","kind":"identifier"}],"url":"\/documentation\/ether\/ethersingularfetchable"},"doc://Ether/documentation/Ether/EtherRoute":{"abstract":[{"text":"A custom protocol to which host apps can conform.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","title":"EtherRoute","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherRoute"}],"navigatorTitle":[{"text":"EtherRoute","kind":"identifier"}],"url":"\/documentation\/ether\/etherroute","role":"symbol"},"doc://Ether/documentation/Ether/EtherSingularFetchable/singularRoute(id:)":{"kind":"symbol","url":"\/documentation\/ether\/ethersingularfetchable\/singularroute(id:)","required":true,"abstract":[{"type":"text","text":"The route used to request single instances of this type."},{"type":"text","text":" "},{"text":"Set this up to return proper route endpoints for any provided identifier (or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":", if appropriate for the API).","type":"text"}],"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/singularRoute(id:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"singularRoute","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?) -> "},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:5Ether0A5RouteP","kind":"typeIdentifier","text":"EtherRoute"}],"title":"singularRoute(id:)","role":"symbol"}}}