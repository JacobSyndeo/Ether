{"metadata":{"role":"symbol","symbolKind":"struct","title":"Ether","navigatorTitle":[{"text":"Ether","kind":"identifier"}],"externalID":"s:5EtherAAV","modules":[{"name":"Ether"}],"roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Ether","kind":"identifier"}]},"sections":[],"topicSections":[{"identifiers":["doc:\/\/Ether\/documentation\/Ether\/Ether\/Fetchable","doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","doc:\/\/Ether\/documentation\/Ether\/Ether\/PluralFetchable","doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","doc:\/\/Ether\/documentation\/Ether\/Ether\/SingularFetchable","doc:\/\/Ether\/documentation\/Ether\/Ether\/TypedRoute"],"title":"Type Aliases"},{"title":"Type Properties","identifiers":["doc:\/\/Ether\/documentation\/Ether\/Ether\/domainHeaders","doc:\/\/Ether\/documentation\/Ether\/Ether\/logRequestsForDebugBuilds"]},{"identifiers":["doc:\/\/Ether\/documentation\/Ether\/Ether\/get(typedRoute:parameters:decoder:)","doc:\/\/Ether\/documentation\/Ether\/Ether\/post(typedRoute:with:usingEncoding:decoder:)","doc:\/\/Ether\/documentation\/Ether\/Ether\/postMultipartForm(typedRoute:formItems:decoder:)","doc:\/\/Ether\/documentation\/Ether\/Ether\/request(typedRoute:method:headers:parameters:body:usingEncoding:decoder:)"],"title":"Type Methods"},{"title":"Enumerations","identifiers":["doc:\/\/Ether\/documentation\/Ether\/Ether\/Error"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Ether"}],"languages":["swift"],"platforms":["Mac Catalyst"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ether\/ether"]}],"identifier":{"url":"doc:\/\/Ether\/documentation\/Ether\/Ether","interfaceLanguage":"swift"},"abstract":[{"text":"The core of Ether. All the core functions and types are namespaced under this.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Ether/documentation/Ether/Ether/PluralFetchable":{"abstract":[{"type":"text","text":"A typealias for "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","isActive":true,"type":"reference"},{"text":", namespaced under ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","isActive":true},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"PluralFetchable"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/ether\/ether\/pluralfetchable","title":"Ether.PluralFetchable","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PluralFetchable","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/PluralFetchable"},"doc://Ether/documentation/Ether/Ether/get(typedRoute:parameters:decoder:)":{"abstract":[{"type":"text","text":"Fires off a GET request to fetch data."}],"url":"\/documentation\/ether\/ether\/get(typedroute:parameters:decoder:)","title":"get(typedRoute:parameters:decoder:)","role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"typedRoute"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5EtherAAV3get10typedRoute10parameters7decoder11DecodedTypeQzx_SDySSs25LosslessStringConvertible_pG10Foundation11JSONDecoderCtYaKAA0a5TypedD0RzlFZ1TL_xmfp","kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"parameters"},{"text":": ","kind":"text"},{"text":"Parameters","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV10Parametersa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"decoder"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:5EtherAAV3get10typedRoute10parameters7decoder11DecodedTypeQzx_SDySSs25LosslessStringConvertible_pG10Foundation11JSONDecoderCtYaKAA0a5TypedD0RzlFZ1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A10TypedRouteP11DecodedTypeQa","text":"DecodedType"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/get(typedRoute:parameters:decoder:)","kind":"symbol"},"doc://Ether/documentation/Ether/Ether/request(typedRoute:method:headers:parameters:body:usingEncoding:decoder:)":{"role":"symbol","abstract":[{"type":"text","text":"Fires off a custom HTTP request."}],"url":"\/documentation\/ether\/ether\/request(typedroute:method:headers:parameters:body:usingencoding:decoder:)","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/request(typedRoute:method:headers:parameters:body:usingEncoding:decoder:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"request"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"typedRoute"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV7request10typedRoute6method7headers10parameters4body13usingEncoding7decoderAB8ResponseVy_11DecodedTypeQzGx_AB6MethodOSDyS2SGSDySSs25LosslessStringConvertible_pGAB11RequestBodyOSgAB09ParameterJ0O10Foundation11JSONDecoderCtYaKAA0a5TypedD0RzlFZ1TL_xmfp","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5EtherAAV6MethodO","kind":"typeIdentifier","text":"Method"},{"text":", ","kind":"text"},{"text":"headers","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5EtherAAV7Headersa","kind":"typeIdentifier","text":"Headers"},{"kind":"text","text":", "},{"kind":"externalParam","text":"parameters"},{"text":": ","kind":"text"},{"text":"Parameters","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV10Parametersa"},{"text":", ","kind":"text"},{"text":"body","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV11RequestBodyO","text":"RequestBody"},{"text":"?, ","kind":"text"},{"text":"usingEncoding","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5EtherAAV17ParameterEncodingO","text":"ParameterEncoding","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"decoder"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV8ResponseV","text":"Response"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:5EtherAAV7request10typedRoute6method7headers10parameters4body13usingEncoding7decoderAB8ResponseVy_11DecodedTypeQzGx_AB6MethodOSDyS2SGSDySSs25LosslessStringConvertible_pGAB11RequestBodyOSgAB09ParameterJ0O10Foundation11JSONDecoderCtYaKAA0a5TypedD0RzlFZ1TL_xmfp","kind":"typeIdentifier","text":"T"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"DecodedType","preciseIdentifier":"s:5Ether0A10TypedRouteP11DecodedTypeQa"},{"text":">","kind":"text"}],"title":"request(typedRoute:method:headers:parameters:body:usingEncoding:decoder:)","type":"topic","kind":"symbol"},"https://github.com/JacobSyndeo/Ether/issues/new":{"type":"link","identifier":"https:\/\/github.com\/JacobSyndeo\/Ether\/issues\/new","title":"open an issue on GitHub","url":"https:\/\/github.com\/JacobSyndeo\/Ether\/issues\/new","titleInlineContent":[{"text":"open an issue on GitHub","type":"text"}]},"doc://Ether/documentation/Ether/Ether/logRequestsForDebugBuilds":{"abstract":[{"text":"If true, Ether will log all requests to the console,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"NOTE: This will log sensitive data, such as auth tokens, to the console, and therefore, this option is ignored in non-debug builds."}],"url":"\/documentation\/ether\/ether\/logrequestsfordebugbuilds","title":"logRequestsForDebugBuilds","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"logRequestsForDebugBuilds"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/logRequestsForDebugBuilds","kind":"symbol"},"doc://Ether/documentation/Ether/Ether":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Ether","kind":"identifier"}],"title":"Ether","kind":"symbol","navigatorTitle":[{"text":"Ether","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","url":"\/documentation\/ether\/ether","type":"topic","abstract":[{"text":"The core of Ether. All the core functions and types are namespaced under this.","type":"text"}],"role":"symbol"},"doc://Ether/documentation/Ether/Ether/Route":{"url":"\/documentation\/ether\/ether\/route","role":"symbol","abstract":[{"text":"A typealias for ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true},{"text":", namespaced under ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","isActive":true,"type":"reference"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Route"}],"navigatorTitle":[{"text":"Route","kind":"identifier"}],"title":"Ether.Route"},"doc://Ether/documentation/Ether/EtherSingularFetchable":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","abstract":[{"text":"Types conforming to ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","type":"reference","isActive":true},{"type":"text","text":" assert that their APIs provide a way to get single instances back, usually by providing an identifier."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EtherSingularFetchable"}],"url":"\/documentation\/ether\/ethersingularfetchable","type":"topic","title":"EtherSingularFetchable","kind":"symbol","navigatorTitle":[{"text":"EtherSingularFetchable","kind":"identifier"}]},"doc://Ether/documentation/Ether/EtherFetchable":{"abstract":[{"type":"text","text":"A typealias representing conformance to both "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","isActive":true},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","isActive":true},{"type":"text","text":"."}],"type":"topic","title":"EtherFetchable","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EtherFetchable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"EtherFetchable"}],"role":"symbol","url":"\/documentation\/ether\/etherfetchable","kind":"symbol"},"doc://Ether/documentation/Ether/EtherRoute":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","abstract":[{"type":"text","text":"A custom protocol to which host apps can conform."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"EtherRoute","kind":"identifier"}],"url":"\/documentation\/ether\/etherroute","type":"topic","title":"EtherRoute","kind":"symbol","navigatorTitle":[{"text":"EtherRoute","kind":"identifier"}]},"doc://Ether/documentation/Ether/Ether/domainHeaders":{"abstract":[{"type":"text","text":"Here, you can set custom headers for specific domains."},{"type":"text","text":" "},{"type":"text","text":"That way, you can stay authenticated by passing a session token, specific to a domain, so that it’s not leaked out to other domains you may access."}],"title":"domainHeaders","url":"\/documentation\/ether\/ether\/domainheaders","role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"domainHeaders","kind":"identifier"},{"kind":"text","text":": ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV7Headersa","text":"Headers"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/domainHeaders","kind":"symbol"},"doc://Ether/documentation/Ether/Ether/post(typedRoute:with:usingEncoding:decoder:)":{"type":"topic","url":"\/documentation\/ether\/ether\/post(typedroute:with:usingencoding:decoder:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"post"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"typedRoute"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5EtherAAV4post10typedRoute4with13usingEncoding7decoderAB8ResponseVy_11DecodedTypeQzGx_AB11RequestBodyOAB09ParameterG0O10Foundation11JSONDecoderCtYaKAA0a5TypedD0RzlFZ1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"RequestBody","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV11RequestBodyO"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"usingEncoding"},{"text":": ","kind":"text"},{"text":"ParameterEncoding","preciseIdentifier":"s:5EtherAAV17ParameterEncodingO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"decoder","kind":"externalParam"},{"kind":"text","text":": "},{"text":"JSONDecoder","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV8ResponseV"},{"text":"<","kind":"text"},{"text":"T","preciseIdentifier":"s:5EtherAAV4post10typedRoute4with13usingEncoding7decoderAB8ResponseVy_11DecodedTypeQzGx_AB11RequestBodyOAB09ParameterG0O10Foundation11JSONDecoderCtYaKAA0a5TypedD0RzlFZ1TL_xmfp","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5Ether0A10TypedRouteP11DecodedTypeQa","text":"DecodedType","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"post(typedRoute:with:usingEncoding:decoder:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/post(typedRoute:with:usingEncoding:decoder:)","abstract":[{"text":"Fires off a POST request to send data.","type":"text"}]},"doc://Ether/documentation/Ether/Ether/postMultipartForm(typedRoute:formItems:decoder:)":{"abstract":[{"text":"Fires off a multipart POST request to the given URL.","type":"text"}],"url":"\/documentation\/ether\/ether\/postmultipartform(typedroute:formitems:decoder:)","title":"postMultipartForm(typedRoute:formItems:decoder:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"postMultipartForm","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"typedRoute","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:5EtherAAV17postMultipartForm10typedRoute9formItems7decoderAB8ResponseVy_11DecodedTypeQzGx_SDySSAB0D5ValueOG10Foundation11JSONDecoderCtYaKAA0a5TypedF0RzlFZ1TL_xmfp"},{"text":", ","kind":"text"},{"text":"formItems","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:5EtherAAV9FormValueO","text":"FormValue","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"decoder"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:5EtherAAV8ResponseV","kind":"typeIdentifier","text":"Response"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:5EtherAAV17postMultipartForm10typedRoute9formItems7decoderAB8ResponseVy_11DecodedTypeQzGx_SDySSAB0D5ValueOG10Foundation11JSONDecoderCtYaKAA0a5TypedF0RzlFZ1TL_xmfp","text":"T","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"DecodedType","kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A10TypedRouteP11DecodedTypeQa"},{"kind":"text","text":">"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/postMultipartForm(typedRoute:formItems:decoder:)","kind":"symbol"},"doc://Ether/documentation/Ether/Ether/SingularFetchable":{"abstract":[{"type":"text","text":"A typealias for "},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","type":"reference"},{"type":"text","text":", namespaced under "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","type":"reference","isActive":true},{"type":"text","text":"."}],"title":"Ether.SingularFetchable","url":"\/documentation\/ether\/ether\/singularfetchable","role":"symbol","navigatorTitle":[{"text":"SingularFetchable","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"SingularFetchable","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/SingularFetchable","kind":"symbol"},"doc://Ether/documentation/Ether/Ether/FetchableFilters":{"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FetchableFilters"}],"title":"Ether.FetchableFilters","kind":"symbol","navigatorTitle":[{"text":"FetchableFilters","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","url":"\/documentation\/ether\/ether\/fetchablefilters","type":"topic","abstract":[{"type":"text","text":"A set of filters that can be used to narrow down results of queries. May or may not be supported by the API endpoint you’re calling."}],"role":"symbol"},"doc://Ether/documentation/Ether/EtherPluralFetchable":{"abstract":[{"text":"Types conforming to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"},{"text":" assert that their APIs provide a way to get multiple instances back, optionally filtered by fields specified in ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","isActive":true}],"title":"EtherPluralFetchable","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","url":"\/documentation\/ether\/etherpluralfetchable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"EtherPluralFetchable","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"EtherPluralFetchable","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://Ether/documentation/Ether/Ether/Error":{"abstract":[{"type":"text","text":"An error that can occur while using Ether."},{"type":"text","text":" "},{"text":"This can help give insight into what went wrong.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"As long as the issue wasn’t server-side, network-related, or a bug in Ether, this should hopefully help you resolve the issue!"},{"type":"text","text":" "},{"type":"text","text":"If not, or if you suspect a bug in Ether, please "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/JacobSyndeo\/Ether\/issues\/new"},{"text":", and I’ll do my best to help you out!","type":"text"}],"title":"Ether.Error","url":"\/documentation\/ether\/ether\/error","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Error","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Error"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Error"}],"role":"symbol","kind":"symbol"},"doc://Ether/documentation/Ether/EtherTypedRoute":{"type":"topic","url":"\/documentation\/ether\/ethertypedroute","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherTypedRoute"}],"title":"EtherTypedRoute","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EtherTypedRoute"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","abstract":[{"type":"text","text":"An extension of "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true,"type":"reference"},{"text":" that allows routes to declare associated types, corresponding to the type to which the route’s contents decode.","type":"text"}]},"doc://Ether/documentation/Ether/Ether/TypedRoute":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/TypedRoute","navigatorTitle":[{"kind":"identifier","text":"TypedRoute"}],"kind":"symbol","url":"\/documentation\/ether\/ether\/typedroute","type":"topic","role":"symbol","abstract":[{"text":"A typealias for ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","type":"reference"},{"type":"text","text":", namespaced under "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether"},{"type":"text","text":"."}],"title":"Ether.TypedRoute","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TypedRoute"}]},"doc://Ether/documentation/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether","abstract":[{"text":"Welcome to easy, clean, Swifty networking!","type":"text"}],"kind":"symbol","url":"\/documentation\/ether","type":"topic","role":"collection","title":"Ether"},"doc://Ether/documentation/Ether/Ether/Fetchable":{"abstract":[{"type":"text","text":"A typealias for "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","type":"reference","isActive":true},{"text":", namespaced under ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Fetchable","title":"Ether.Fetchable","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Fetchable"}],"navigatorTitle":[{"text":"Fetchable","kind":"identifier"}],"role":"symbol","url":"\/documentation\/ether\/ether\/fetchable","kind":"symbol"}}}