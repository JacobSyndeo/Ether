{"sections":[],"kind":"symbol","variants":[{"paths":["\/documentation\/ether\/ethersingularfetchable"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Ether"}],"roleHeading":"Protocol","title":"EtherSingularFetchable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"EtherSingularFetchable","kind":"identifier"}],"symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"EtherSingularFetchable"}],"externalID":"s:5Ether0A17SingularFetchableP","role":"symbol"},"relationshipsSections":[{"kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/Ether\/Se"],"type":"inheritsFrom"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EtherSingularFetchable","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Se","kind":"typeIdentifier","text":"Decodable"}],"platforms":["Mac Catalyst"],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether"]]},"abstract":[{"type":"text","text":"Types conforming to "},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","type":"reference"},{"type":"text","text":" assert that their APIs provide a way to get single instances back, usually by providing an identifier."}],"topicSections":[{"identifiers":["doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/fetch(id:parameters:)","doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/fetch(id:parameters:container:keyPath:)","doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/fetchWithContainer(id:parameters:container:)","doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/singularRoute(id:)"],"title":"Type Methods"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"},"seeAlsoSections":[{"generated":true,"title":"Fetchable","identifiers":["doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://Ether/Se":{"type":"unresolvable","identifier":"doc:\/\/Ether\/Se","title":"Swift.Decodable"},"doc://Ether/documentation/Ether/EtherSingularFetchable/fetch(id:parameters:)":{"url":"\/documentation\/ether\/ethersingularfetchable\/fetch(id:parameters:)","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/fetch(id:parameters:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"fetch","kind":"identifier"},{"kind":"text","text":"("},{"text":"id","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"parameters"},{"text":": ","kind":"text"},{"text":"Ether","preciseIdentifier":"s:5EtherAAV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Parameters","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV10Parametersa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"fetch(id:parameters:)","abstract":[{"text":"Fetch an instance of this type from the server.","type":"text"}],"type":"topic"},"doc://Ether/documentation/Ether/EtherSingularFetchable/singularRoute(id:)":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/singularRoute(id:)","abstract":[{"type":"text","text":"The route used to request single instances of this type."},{"type":"text","text":" "},{"type":"text","text":"Set this up to return proper route endpoints for any provided identifier (or "},{"code":"nil","type":"codeVoice"},{"text":", if appropriate for the API).","type":"text"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"singularRoute","kind":"identifier"},{"kind":"text","text":"("},{"text":"id","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"kind":"keyword","text":"any"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A5RouteP","text":"EtherRoute"}],"url":"\/documentation\/ether\/ethersingularfetchable\/singularroute(id:)","type":"topic","title":"singularRoute(id:)","kind":"symbol","required":true},"doc://Ether/documentation/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether","abstract":[{"text":"Welcome to easy, clean, Swifty networking!","type":"text"}],"kind":"symbol","url":"\/documentation\/ether","type":"topic","role":"collection","title":"Ether"},"doc://Ether/documentation/Ether/EtherSingularFetchable":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","abstract":[{"text":"Types conforming to ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","type":"reference","isActive":true},{"type":"text","text":" assert that their APIs provide a way to get single instances back, usually by providing an identifier."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EtherSingularFetchable"}],"url":"\/documentation\/ether\/ethersingularfetchable","type":"topic","title":"EtherSingularFetchable","kind":"symbol","navigatorTitle":[{"text":"EtherSingularFetchable","kind":"identifier"}]},"doc://Ether/documentation/Ether/EtherSingularFetchable/fetch(id:parameters:container:keyPath:)":{"type":"topic","url":"\/documentation\/ether\/ethersingularfetchable\/fetch(id:parameters:container:keypath:)","abstract":[{"type":"text","text":"Fetch an instance of this type from the server, unwrapping from a container type."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/fetch(id:parameters:container:keyPath:)","title":"fetch(id:parameters:container:keyPath:)","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fetch","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"?, ","kind":"text"},{"text":"parameters","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV","text":"Ether"},{"text":".","kind":"text"},{"text":"Parameters","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV10Parametersa"},{"text":", ","kind":"text"},{"text":"container","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A17SingularFetchablePAAE5fetch2id10parameters9container7keyPathxSSSg_SDySSs25LosslessStringConvertible_pGqd__ms03KeyI0Cyqd__xGtYaKSeRd__lFZ9ContainerL_qd__mfp","text":"Container"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"keyPath"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A17SingularFetchablePAAE5fetch2id10parameters9container7keyPathxSSSg_SDySSs25LosslessStringConvertible_pGqd__ms03KeyI0Cyqd__xGtYaKSeRd__lFZ9ContainerL_qd__mfp","text":"Container"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://Ether/documentation/Ether/EtherSingularFetchable/fetchWithContainer(id:parameters:container:)":{"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"fetchWithContainer","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"parameters","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5EtherAAV10Parametersa","kind":"typeIdentifier","text":"Parameters"},{"kind":"text","text":", "},{"kind":"externalParam","text":"container"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A17SingularFetchablePAAE18fetchWithContainer2id10parameters9containerqd__SSSg_SDySSs25LosslessStringConvertible_pGqd__mtYaKSeRd__lFZ0F0L_qd__mfp"},{"kind":"text","text":".Type) "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Container","preciseIdentifier":"s:5Ether0A17SingularFetchablePAAE18fetchWithContainer2id10parameters9containerqd__SSSg_SDySSs25LosslessStringConvertible_pGqd__mtYaKSeRd__lFZ0F0L_qd__mfp","kind":"typeIdentifier"}],"title":"fetchWithContainer(id:parameters:container:)","url":"\/documentation\/ether\/ethersingularfetchable\/fetchwithcontainer(id:parameters:container:)","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/fetchWithContainer(id:parameters:container:)","role":"symbol","abstract":[{"text":"Fetch an instance of this type from the server, within a container type.","type":"text"}],"kind":"symbol"},"doc://Ether/documentation/Ether/EtherPluralFetchable":{"abstract":[{"text":"Types conforming to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"},{"text":" assert that their APIs provide a way to get multiple instances back, optionally filtered by fields specified in ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","isActive":true}],"title":"EtherPluralFetchable","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","url":"\/documentation\/ether\/etherpluralfetchable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"EtherPluralFetchable","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"EtherPluralFetchable","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://Ether/documentation/Ether/EtherFetchable":{"abstract":[{"type":"text","text":"A typealias representing conformance to both "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","isActive":true},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","isActive":true},{"type":"text","text":"."}],"type":"topic","title":"EtherFetchable","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EtherFetchable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"EtherFetchable"}],"role":"symbol","url":"\/documentation\/ether\/etherfetchable","kind":"symbol"},"doc://Ether/documentation/Ether/Ether/FetchableFilters":{"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FetchableFilters"}],"title":"Ether.FetchableFilters","kind":"symbol","navigatorTitle":[{"text":"FetchableFilters","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","url":"\/documentation\/ether\/ether\/fetchablefilters","type":"topic","abstract":[{"type":"text","text":"A set of filters that can be used to narrow down results of queries. May or may not be supported by the API endpoint you’re calling."}],"role":"symbol"}}}