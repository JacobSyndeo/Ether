{"identifier":{"url":"doc:\/\/Ether\/documentation\/Ether\/Ether\/PluralFetchable","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Mac Catalyst"],"tokens":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PluralFetchable"},{"kind":"text","text":" = "},{"kind":"typeIdentifier","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","text":"EtherPluralFetchable","preciseIdentifier":"s:5Ether0A15PluralFetchableP"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Since it’s a protocol, it requires a global namespace, but typealiases can be namespaced within other types.","type":"text"},{"text":" ","type":"text"},{"text":"This lets it be accessed as ","type":"text"},{"type":"codeVoice","code":"Ether.PluralFetchable"},{"type":"text","text":", much like how "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Method"},{"text":" is accessible as a type namespaced under ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","isActive":true},{"type":"text","text":", as well as other subtypes."}]},{"style":"note","name":"See Also","type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","isActive":true}],"type":"paragraph"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether","doc:\/\/Ether\/documentation\/Ether\/Ether"]]},"metadata":{"extendedModule":"Ether","roleHeading":"Type Alias","symbolKind":"typealias","externalID":"s:5EtherAAV15PluralFetchablea","navigatorTitle":[{"text":"PluralFetchable","kind":"identifier"}],"title":"Ether.PluralFetchable","modules":[{"name":"Ether"}],"role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"PluralFetchable","kind":"identifier"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ether\/ether\/pluralfetchable"]}],"abstract":[{"text":"A typealias for ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","isActive":true},{"type":"text","text":", namespaced under "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","type":"reference","isActive":true},{"text":".","type":"text"}],"references":{"doc://Ether/documentation/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether","url":"\/documentation\/ether","abstract":[{"text":"Welcome to easy, clean, Swifty networking!","type":"text"}],"type":"topic","title":"Ether","kind":"symbol","role":"collection"},"doc://Ether/documentation/Ether/Ether/Method":{"role":"symbol","abstract":[{"text":"An enum of HTTP methods.","type":"text"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Method","url":"\/documentation\/ether\/ether\/method","navigatorTitle":[{"kind":"identifier","text":"Method"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Method","kind":"identifier"}],"title":"Ether.Method","type":"topic"},"doc://Ether/documentation/Ether/Ether":{"abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","type":"topic","kind":"symbol","title":"Ether","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Ether"}],"navigatorTitle":[{"text":"Ether","kind":"identifier"}],"url":"\/documentation\/ether\/ether","role":"symbol"},"doc://Ether/documentation/Ether/EtherPluralFetchable":{"abstract":[{"type":"text","text":"Types conforming to "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","isActive":true},{"text":" assert that their APIs provide a way to get multiple instances back, optionally filtered by fields specified in ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","type":"reference","isActive":true}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","kind":"symbol","type":"topic","title":"EtherPluralFetchable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"EtherPluralFetchable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"EtherPluralFetchable"}],"url":"\/documentation\/ether\/etherpluralfetchable","role":"symbol"},"doc://Ether/documentation/Ether/Ether/FetchableFilters":{"abstract":[{"text":"A set of filters that can be used to narrow down results of queries. May or may not be supported by the API endpoint you’re calling.","type":"text"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","type":"topic","kind":"symbol","title":"Ether.FetchableFilters","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"FetchableFilters","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"FetchableFilters"}],"url":"\/documentation\/ether\/ether\/fetchablefilters","role":"symbol"},"doc://Ether/documentation/Ether/Ether/PluralFetchable":{"abstract":[{"type":"text","text":"A typealias for "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"},{"type":"text","text":", namespaced under "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/PluralFetchable","navigatorTitle":[{"text":"PluralFetchable","kind":"identifier"}],"url":"\/documentation\/ether\/ether\/pluralfetchable","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"PluralFetchable"}],"type":"topic","title":"Ether.PluralFetchable"}}}