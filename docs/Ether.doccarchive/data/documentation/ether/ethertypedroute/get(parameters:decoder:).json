{"kind":"symbol","variants":[{"paths":["\/documentation\/ether\/ethertypedroute\/get(parameters:decoder:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:5Ether0A10TypedRoutePAAE3get10parameters7decoder11DecodedTypeQzSDySSs25LosslessStringConvertible_pG_10Foundation11JSONDecoderCtYaKF","extendedModule":"Ether","title":"get(parameters:decoder:)","role":"symbol","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"text":"(","kind":"text"},{"text":"parameters","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5EtherAAV","text":"Ether","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Parameters","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV10Parametersa"},{"text":", ","kind":"text"},{"text":"decoder","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:5Ether0A10TypedRouteP11DecodedTypeQa","text":"DecodedType","kind":"typeIdentifier"}],"modules":[{"name":"Ether"}]},"abstract":[{"text":"Fires off a GET request to fetch data, using the current ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/TypedRoute","isActive":true,"type":"reference"},{"type":"text","text":" instance."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"parameters"},{"kind":"text","text":": "},{"text":"Ether","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV"},{"text":".","kind":"text"},{"text":"Parameters","preciseIdentifier":"s:5EtherAAV10Parametersa","kind":"typeIdentifier","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Parameters"},{"kind":"text","text":" = [:], "},{"kind":"externalParam","text":"decoder"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder","kind":"typeIdentifier"},{"text":" = JSONDecoder()) ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"DecodedType","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute\/DecodedType","preciseIdentifier":"s:5Ether0A10TypedRouteP11DecodedTypeQa","kind":"typeIdentifier"}],"platforms":["Mac Catalyst"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"parameters","content":[{"type":"paragraph","inlineContent":[{"text":"A collection of key-value pairs to use as parameters. Defaults to empty.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"JSONDecoder","type":"codeVoice"},{"text":" to use. You can create your own instance to customize its behavior before passing it in, if you’d like.","type":"text"}]}],"name":"decoder"}]},{"content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"An instance of the "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" type, decoded from the response recevied from the server."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"aside","name":"Throws","style":"note","content":[{"inlineContent":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Error"},{"type":"text","text":", or any error thrown by the "},{"type":"codeVoice","code":"URLSession"},{"type":"text","text":" data task, if the request fails."}],"type":"paragraph"}]},{"type":"paragraph","inlineContent":[{"text":"Compare with ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/get(route:type:parameters:decoder:)","isActive":true,"type":"reference"},{"text":", the main version of this method.","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether","doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute\/get(parameters:decoder:)","interfaceLanguage":"swift"},"sections":[],"references":{"doc://Ether/documentation/Ether/EtherTypedRoute":{"type":"topic","url":"\/documentation\/ether\/ethertypedroute","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherTypedRoute"}],"title":"EtherTypedRoute","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EtherTypedRoute"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","abstract":[{"type":"text","text":"An extension of "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true,"type":"reference"},{"text":" that allows routes to declare associated types, corresponding to the type to which the route’s contents decode.","type":"text"}]},"doc://Ether/documentation/Ether/EtherRoute":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","abstract":[{"type":"text","text":"A custom protocol to which host apps can conform."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"EtherRoute","kind":"identifier"}],"url":"\/documentation\/ether\/etherroute","type":"topic","title":"EtherRoute","kind":"symbol","navigatorTitle":[{"text":"EtherRoute","kind":"identifier"}]},"doc://Ether/documentation/Ether/Ether/Parameters":{"title":"Ether.Parameters","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Parameters","navigatorTitle":[{"kind":"identifier","text":"Parameters"}],"role":"symbol","url":"\/documentation\/ether\/ether\/parameters","abstract":[{"type":"text","text":"A dictionary of parameters to apply to a "},{"type":"codeVoice","code":"URLRequest"},{"type":"text","text":"."}],"type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Parameters","kind":"identifier"}],"kind":"symbol"},"doc://Ether/documentation/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether","abstract":[{"text":"Welcome to easy, clean, Swifty networking!","type":"text"}],"kind":"symbol","url":"\/documentation\/ether","type":"topic","role":"collection","title":"Ether"},"doc://Ether/documentation/Ether/EtherTypedRoute/DecodedType":{"role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DecodedType","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Se","text":"Decodable","kind":"typeIdentifier"}],"url":"\/documentation\/ether\/ethertypedroute\/decodedtype","kind":"symbol","title":"DecodedType","abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" type that the route’s result is expected to decode to.","type":"text"}],"required":true,"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute\/DecodedType"},"doc://Ether/documentation/Ether/Ether/Error":{"abstract":[{"type":"text","text":"An error that can occur while using Ether."},{"type":"text","text":" "},{"text":"This can help give insight into what went wrong.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"As long as the issue wasn’t server-side, network-related, or a bug in Ether, this should hopefully help you resolve the issue!"},{"type":"text","text":" "},{"type":"text","text":"If not, or if you suspect a bug in Ether, please "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/JacobSyndeo\/Ether\/issues\/new"},{"text":", and I’ll do my best to help you out!","type":"text"}],"title":"Ether.Error","url":"\/documentation\/ether\/ether\/error","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Error","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Error"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Error"}],"role":"symbol","kind":"symbol"},"doc://Ether/documentation/Ether/Ether/TypedRoute":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/TypedRoute","navigatorTitle":[{"kind":"identifier","text":"TypedRoute"}],"kind":"symbol","url":"\/documentation\/ether\/ether\/typedroute","type":"topic","role":"symbol","abstract":[{"text":"A typealias for ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","type":"reference"},{"type":"text","text":", namespaced under "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether"},{"type":"text","text":"."}],"title":"Ether.TypedRoute","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TypedRoute"}]},"doc://Ether/documentation/Ether/EtherTypedRoute/get(parameters:decoder:)":{"abstract":[{"text":"Fires off a GET request to fetch data, using the current ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/TypedRoute"},{"text":" instance.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/ether\/ethertypedroute\/get(parameters:decoder:)","title":"get(parameters:decoder:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"parameters"},{"kind":"text","text":": "},{"text":"Ether","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV"},{"text":".","kind":"text"},{"text":"Parameters","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV10Parametersa"},{"text":", ","kind":"text"},{"text":"decoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:5Ether0A10TypedRouteP11DecodedTypeQa","kind":"typeIdentifier","text":"DecodedType"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute\/get(parameters:decoder:)"},"doc://Ether/documentation/Ether/Ether":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Ether","kind":"identifier"}],"title":"Ether","kind":"symbol","navigatorTitle":[{"text":"Ether","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","url":"\/documentation\/ether\/ether","type":"topic","abstract":[{"text":"The core of Ether. All the core functions and types are namespaced under this.","type":"text"}],"role":"symbol"},"doc://Ether/documentation/Ether/Ether/get(route:type:parameters:decoder:)":{"url":"\/documentation\/ether\/ether\/get(route:type:parameters:decoder:)","role":"symbol","abstract":[{"type":"text","text":"Fires off a GET request to fetch data."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/get(route:type:parameters:decoder:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"route","kind":"externalParam"},{"kind":"text","text":": "},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Route","preciseIdentifier":"s:5EtherAAV5Routea","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:5EtherAAV3get5route4type10parameters7decoderxAA0A5Route_p_xmSDySSs25LosslessStringConvertible_pG10Foundation11JSONDecoderCtYaKSeRzlFZ1TL_xmfp"},{"text":".Type, ","kind":"text"},{"text":"parameters","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Parameters","preciseIdentifier":"s:5EtherAAV10Parametersa"},{"text":", ","kind":"text"},{"text":"decoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"JSONDecoder","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV3get5route4type10parameters7decoderxAA0A5Route_p_xmSDySSs25LosslessStringConvertible_pG10Foundation11JSONDecoderCtYaKSeRzlFZ1TL_xmfp"}],"title":"get(route:type:parameters:decoder:)"},"https://github.com/JacobSyndeo/Ether/issues/new":{"identifier":"https:\/\/github.com\/JacobSyndeo\/Ether\/issues\/new","titleInlineContent":[{"type":"text","text":"open an issue on GitHub"}],"url":"https:\/\/github.com\/JacobSyndeo\/Ether\/issues\/new","title":"open an issue on GitHub","type":"link"}}}