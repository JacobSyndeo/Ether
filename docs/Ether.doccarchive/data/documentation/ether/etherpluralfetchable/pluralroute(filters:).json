{"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/ether\/etherpluralfetchable\/pluralroute(filters:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether","doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"]]},"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"pluralRoute","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"filters"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5EtherAAV","text":"Ether","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV16FetchableFiltersa","text":"FetchableFilters"},{"kind":"text","text":"?) -> "},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"text":"EtherRoute","kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A5RouteP"}],"roleHeading":"Type Method","symbolKind":"method","role":"symbol","modules":[{"name":"Ether"}],"externalID":"s:5Ether0A15PluralFetchableP11pluralRoute7filtersAA0aE0_pSSSg11searchQuery_SNy10Foundation4DateVGSg9dateRangetSg_tFZ","required":true,"title":"pluralRoute(filters:)"},"abstract":[{"text":"The route used to request multiple instances of this type.","type":"text"},{"text":" ","type":"text"},{"text":"This is commonly used in index pages, search results, etc.","type":"text"},{"type":"text","text":" "},{"text":"Set this up to return the proper route endpoints, along with supporting filters (if desired and appropriate for the API).","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable\/pluralRoute(filters:)"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"pluralRoute"},{"kind":"text","text":"("},{"text":"filters","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","preciseIdentifier":"s:5EtherAAV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5EtherAAV16FetchableFiltersa","text":"FetchableFilters","kind":"typeIdentifier","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters"},{"kind":"text","text":"?) -> "},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EtherRoute","kind":"typeIdentifier","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","preciseIdentifier":"s:5Ether0A5RouteP"}],"platforms":["Mac Catalyst"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"filters","content":[{"type":"paragraph","inlineContent":[{"text":"An optional set of filters. See ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","isActive":true},{"type":"text","text":" for more information."}]}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true,"type":"reference"},{"type":"text","text":" corresponding to the type and (optionally) any provided filters."}]}]},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"For instance, suppose your API is for a list of all the user’s friends.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"It may look something like this:"}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"\"https:\/\/site.com\/friends\""}]},{"type":"paragraph","inlineContent":[{"text":"In that case, this function should simply return that exact string.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"However, if the API has a search friends feature that you’d like to support with Ether, you’d want to look at the filters.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Suppose that API’s search feature is represented as a URL query:"},{"type":"text","text":" "},{"type":"codeVoice","code":"\"https:\/\/site.com\/friends?search=query\""}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"You’d then change your return to look like this:","type":"text"}]},{"syntax":null,"code":["var query = \"\"","","if let searchQuery = filters?.searchQuery {","    query = \"search=\" + searchQuery","}","","return \"https:\/\/site.com\/friends\" + query"],"type":"codeListing"}],"kind":"content"}],"references":{"doc://Ether/documentation/Ether/Ether":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Ether","kind":"identifier"}],"title":"Ether","kind":"symbol","navigatorTitle":[{"text":"Ether","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","url":"\/documentation\/ether\/ether","type":"topic","abstract":[{"text":"The core of Ether. All the core functions and types are namespaced under this.","type":"text"}],"role":"symbol"},"doc://Ether/documentation/Ether/EtherPluralFetchable":{"abstract":[{"text":"Types conforming to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"},{"text":" assert that their APIs provide a way to get multiple instances back, optionally filtered by fields specified in ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","isActive":true}],"title":"EtherPluralFetchable","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","url":"\/documentation\/ether\/etherpluralfetchable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"EtherPluralFetchable","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"EtherPluralFetchable","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://Ether/documentation/Ether/EtherRoute":{"abstract":[{"type":"text","text":"A custom protocol to which host apps can conform."}],"title":"EtherRoute","url":"\/documentation\/ether\/etherroute","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherRoute"}],"type":"topic","navigatorTitle":[{"text":"EtherRoute","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://Ether/documentation/Ether/EtherPluralFetchable/pluralRoute(filters:)":{"required":true,"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pluralRoute","kind":"identifier"},{"text":"(","kind":"text"},{"text":"filters","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FetchableFilters","preciseIdentifier":"s:5EtherAAV16FetchableFiltersa"},{"text":"?) -> ","kind":"text"},{"text":"any","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:5Ether0A5RouteP","kind":"typeIdentifier","text":"EtherRoute"}],"url":"\/documentation\/ether\/etherpluralfetchable\/pluralroute(filters:)","title":"pluralRoute(filters:)","kind":"symbol","abstract":[{"type":"text","text":"The route used to request multiple instances of this type."},{"text":" ","type":"text"},{"type":"text","text":"This is commonly used in index pages, search results, etc."},{"type":"text","text":" "},{"type":"text","text":"Set this up to return the proper route endpoints, along with supporting filters (if desired and appropriate for the API)."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable\/pluralRoute(filters:)","type":"topic"},"doc://Ether/documentation/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether","abstract":[{"text":"Welcome to easy, clean, Swifty networking!","type":"text"}],"kind":"symbol","url":"\/documentation\/ether","type":"topic","role":"collection","title":"Ether"},"doc://Ether/documentation/Ether/Ether/FetchableFilters":{"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FetchableFilters"}],"title":"Ether.FetchableFilters","kind":"symbol","navigatorTitle":[{"text":"FetchableFilters","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","url":"\/documentation\/ether\/ether\/fetchablefilters","type":"topic","abstract":[{"type":"text","text":"A set of filters that can be used to narrow down results of queries. May or may not be supported by the API endpoint you’re calling."}],"role":"symbol"}}}