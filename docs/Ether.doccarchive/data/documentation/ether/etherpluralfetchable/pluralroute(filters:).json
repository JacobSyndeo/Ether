{"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether","doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ether\/etherpluralfetchable\/pluralroute(filters:)"]}],"abstract":[{"text":"The route used to request multiple instances of this type.","type":"text"},{"type":"text","text":" "},{"text":"This is commonly used in index pages, search results, etc.","type":"text"},{"type":"text","text":" "},{"text":"Set this up to return the proper route endpoints, along with supporting filters (if desired and appropriate for the API).","type":"text"}],"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"pluralRoute","kind":"identifier"},{"text":"(","kind":"text"},{"text":"filters","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5EtherAAV","text":"Ether","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5EtherAAV16FetchableFiltersa","kind":"typeIdentifier","text":"FetchableFilters"},{"text":"?) -> ","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A5RouteP","text":"EtherRoute"}],"title":"pluralRoute(filters:)","role":"symbol","required":true,"externalID":"s:5Ether0A15PluralFetchableP11pluralRoute7filtersAA0aE0_pSSSg11searchQuery_SNy10Foundation4DateVGSg9dateRangetSg_tFZ","roleHeading":"Type Method","modules":[{"name":"Ether"}],"symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"pluralRoute"},{"text":"(","kind":"text"},{"text":"filters","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","preciseIdentifier":"s:5EtherAAV","text":"Ether","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","text":"FetchableFilters","preciseIdentifier":"s:5EtherAAV16FetchableFiltersa","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","preciseIdentifier":"s:5Ether0A5RouteP","kind":"typeIdentifier","text":"EtherRoute"}],"platforms":["Mac Catalyst"]}]},{"parameters":[{"name":"filters","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An optional set of filters. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters"},{"type":"text","text":" for more information."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true},{"text":" corresponding to the type and (optionally) any provided filters.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"For instance, suppose your API is for a list of all the user’s friends.","type":"text"},{"type":"text","text":" "},{"text":"It may look something like this:","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"\"https:\/\/site.com\/friends\""}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In that case, this function should simply return that exact string."}]},{"inlineContent":[{"text":"However, if the API has a search friends feature that you’d like to support with Ether, you’d want to look at the filters.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Suppose that API’s search feature is represented as a URL query:","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"\"https:\/\/site.com\/friends?search=query\""}]},{"type":"paragraph","inlineContent":[{"text":"You’d then change your return to look like this:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["var query = \"\"","","if let searchQuery = filters?.searchQuery {","    query = \"search=\" + searchQuery","}","","return \"https:\/\/site.com\/friends\" + query"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable\/pluralRoute(filters:)"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","references":{"doc://Ether/documentation/Ether/EtherPluralFetchable":{"abstract":[{"type":"text","text":"Types conforming to "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","isActive":true},{"text":" assert that their APIs provide a way to get multiple instances back, optionally filtered by fields specified in ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","type":"reference","isActive":true}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","kind":"symbol","type":"topic","title":"EtherPluralFetchable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"EtherPluralFetchable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"EtherPluralFetchable"}],"url":"\/documentation\/ether\/etherpluralfetchable","role":"symbol"},"doc://Ether/documentation/Ether/EtherPluralFetchable/pluralRoute(filters:)":{"type":"topic","title":"pluralRoute(filters:)","kind":"symbol","required":true,"role":"symbol","url":"\/documentation\/ether\/etherpluralfetchable\/pluralroute(filters:)","abstract":[{"type":"text","text":"The route used to request multiple instances of this type."},{"type":"text","text":" "},{"type":"text","text":"This is commonly used in index pages, search results, etc."},{"text":" ","type":"text"},{"type":"text","text":"Set this up to return the proper route endpoints, along with supporting filters (if desired and appropriate for the API)."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"pluralRoute","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"filters"},{"kind":"text","text":": "},{"text":"Ether","preciseIdentifier":"s:5EtherAAV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5EtherAAV16FetchableFiltersa","text":"FetchableFilters","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"text":"any","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:5Ether0A5RouteP","kind":"typeIdentifier","text":"EtherRoute"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable\/pluralRoute(filters:)"},"doc://Ether/documentation/Ether/Ether/FetchableFilters":{"abstract":[{"text":"A set of filters that can be used to narrow down results of queries. May or may not be supported by the API endpoint you’re calling.","type":"text"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","type":"topic","kind":"symbol","title":"Ether.FetchableFilters","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"FetchableFilters","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"FetchableFilters"}],"url":"\/documentation\/ether\/ether\/fetchablefilters","role":"symbol"},"doc://Ether/documentation/Ether/EtherRoute":{"abstract":[{"text":"A custom protocol to which host apps can conform.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","title":"EtherRoute","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherRoute"}],"navigatorTitle":[{"text":"EtherRoute","kind":"identifier"}],"url":"\/documentation\/ether\/etherroute","role":"symbol"},"doc://Ether/documentation/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether","url":"\/documentation\/ether","abstract":[{"text":"Welcome to easy, clean, Swifty networking!","type":"text"}],"type":"topic","title":"Ether","kind":"symbol","role":"collection"},"doc://Ether/documentation/Ether/Ether":{"abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","type":"topic","kind":"symbol","title":"Ether","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Ether"}],"navigatorTitle":[{"text":"Ether","kind":"identifier"}],"url":"\/documentation\/ether\/ether","role":"symbol"}}}