{"kind":"article","primaryContentSections":[{"content":[{"text":"Overview","type":"heading","anchor":"Overview","level":2},{"inlineContent":[{"type":"text","text":"When using Ether, you may have your own coding style and\/or preferences. You may prefer calling "},{"type":"codeVoice","code":"Ether"},{"text":" directly. You may instead prefer to call from a ","type":"text"},{"type":"codeVoice","code":"Route"},{"type":"text","text":" or a "},{"type":"codeVoice","code":"TypedRoute"},{"text":". In other cases, you may prefer to use the ","type":"text"},{"code":"Fetchable","type":"codeVoice"},{"text":" protocol. Ether supports all of these styles.","type":"text"}],"type":"paragraph"},{"type":"heading","level":2,"anchor":"Usage-Styles","text":"Usage Styles"},{"type":"paragraph","inlineContent":[{"text":"There are four main ways to use Ether:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Directly, calling the functions on ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"text":"Through ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Through ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Through ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","type":"reference","isActive":true},{"type":"text","text":"."}]}]}]},{"anchor":"Direct","text":"Direct","level":3,"type":"heading"},{"inlineContent":[{"type":"text","text":"In the most straightforward (but longform) way, you can call functions on "},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","type":"reference"},{"type":"text","text":" directly."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let user = try await Ether.get(route: Routes.user(id: 1),","                               type: User.self)"]},{"level":3,"type":"heading","anchor":"Through-a-Route","text":"Through a Route"},{"inlineContent":[{"type":"text","text":"If you want to use a "},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","type":"reference"},{"type":"text","text":", you can use the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/get(type:parameters:decoder:)"},{"text":" method on the ","type":"text"},{"type":"codeVoice","code":"Route"},{"type":"text","text":" itself."}],"type":"paragraph"},{"code":["let user = try await Routes.user(id: 1).get(type: User.self)"],"syntax":"swift","type":"codeListing"},{"level":3,"anchor":"Through-a-TypedRoute","type":"heading","text":"Through a TypedRoute"},{"type":"paragraph","inlineContent":[{"text":"If you want to use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute"},{"text":", you can use the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute\/get(parameters:decoder:)","type":"reference"},{"text":" method on the ","type":"text"},{"code":"TypedRoute","type":"codeVoice"},{"text":" itself.","type":"text"}]},{"syntax":"swift","code":["\/\/ Requires Routes to conform to `EtherTypedRoute`.","let user = try await Routes.user(id: 1).get()"],"type":"codeListing"},{"type":"heading","text":"Through a Fetchable","anchor":"Through-a-Fetchable","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to use "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable"},{"type":"text","text":", you can use the "},{"code":"Ether\/EtherFetchable\/fetch(id:parameters:)","type":"codeVoice"},{"type":"text","text":" method on the "},{"type":"codeVoice","code":"Fetchable"},{"text":" type itself.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Requires User to conform to `EtherFetchable`.","let user = try await User.fetch(id: 1)"]},{"text":"Comparison","type":"heading","anchor":"Comparison","level":2},{"inlineContent":[{"type":"text","text":"Here is a table comparing the different methods of using Ether."}],"type":"paragraph"},{"rows":[[[{"type":"paragraph","inlineContent":[{"text":"Mode","type":"text"}]}],[{"inlineContent":[{"text":"How it works","type":"text"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"text":"Pros","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"Cons","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Direct ("},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","type":"reference","isActive":true},{"text":")","type":"text"}]}],[{"inlineContent":[{"code":"Ether.get(route: _, type: _, …)","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"text":"The most straightforward; no need to set anything else up","type":"text"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"text":"The longest","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Direct ("},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","isActive":true,"type":"reference"},{"type":"text","text":")"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Ether.get(typedRoute: _, …)"}]}],[{"type":"paragraph","inlineContent":[{"text":"Shorter; omits ","type":"text"},{"type":"codeVoice","code":"type"}]}],[{"type":"paragraph","inlineContent":[{"text":"Need to set up ","type":"text"},{"code":"TypedRoute","type":"codeVoice"},{"type":"text","text":"s"}]}]],[[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true}],"type":"paragraph"}],[{"inlineContent":[{"type":"codeVoice","code":"route.get(type: _, …)"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Shorter; omits "},{"code":"Ether","type":"codeVoice"},{"text":"; no need to set anything else up","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"A bit longer than others","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","isActive":true,"type":"reference"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"typedRoute.get(_, …)"}]}],[{"inlineContent":[{"type":"text","text":"Even shorter; omits both "},{"code":"Ether","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"type"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Need to set up "},{"type":"codeVoice","code":"TypedRoute"},{"text":"s","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","isActive":true,"type":"reference"}],"type":"paragraph"}],[{"inlineContent":[{"type":"codeVoice","code":"Type.fetch(id: _)"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"text":"The clearest","type":"text"}]}],[{"inlineContent":[{"text":"Need to set up your types as ","type":"text"},{"code":"Fetchable","type":"codeVoice"},{"text":"; doesn’t support as much customization at call time","type":"text"}],"type":"paragraph"}]]],"header":"row","type":"table"},{"level":2,"text":"Recommendations","type":"heading","anchor":"Recommendations"},{"level":3,"anchor":"Use-EtherFetchable-when-possible","type":"heading","text":"Use EtherFetchable when possible"},{"type":"paragraph","inlineContent":[{"type":"text","text":"We recommend using "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","isActive":true},{"type":"text","text":" most of the time, as it provides a clean, concise, and easy-to-use interface. It also allows you to use the same interface for all of your types, which can be useful if you have a lot of types that you want to fetch."}]},{"text":"Use EtherRoute when you need to customize the call","level":3,"anchor":"Use-EtherRoute-when-you-need-to-customize-the-call","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to customize the call, you can use "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true,"type":"reference"},{"text":". This allows you to customize the call, such as adding headers or changing the method. This lets you use ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true},{"text":", which is a convenient typealias for both ","type":"text"},{"code":"URL","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}]},{"level":3,"text":"Use EtherTypedRoute when you need to customize the call and don’t want to specify the type each time","anchor":"Use-EtherTypedRoute-when-you-need-to-customize-the-call-and-dont-want-to-specify-the-type-each-time","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to customize the call, but don’t want to specify the type each time, you can use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute"},{"type":"text","text":". This offers the same customization as EtherRoute, but also allows you to omit the type for each call. This does require you to set up "},{"type":"codeVoice","code":"TypedRoute"},{"text":"s, however, which can be a bit more work.","type":"text"}]}],"kind":"content"}],"metadata":{"role":"collectionGroup","title":"Usage","roleHeading":"Article","modules":[{"name":"Ether"}]},"identifier":{"url":"doc:\/\/Ether\/documentation\/Ether\/Usage","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ether\/usage"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"There are several ways to use Ether. This article will help you decide which way to use, and in which cases."}],"seeAlsoSections":[{"identifiers":["doc:\/\/Ether\/documentation\/Ether\/Introduction","doc:\/\/Ether\/documentation\/Ether\/Quick-Overview"],"title":"Essentials","generated":true}],"references":{"doc://Ether/documentation/Ether/Quick-Overview":{"role":"collectionGroup","type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/Quick-Overview","kind":"article","url":"\/documentation\/ether\/quick-overview","title":"Quick Overview","abstract":[{"type":"text","text":"A quick glance at Ether"}]},"doc://Ether/documentation/Ether/EtherTypedRoute/get(parameters:decoder:)":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute\/get(parameters:decoder:)","kind":"symbol","title":"get(parameters:decoder:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"(","kind":"text"},{"text":"parameters","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Ether","preciseIdentifier":"s:5EtherAAV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5EtherAAV10Parametersa","text":"Parameters","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"decoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"JSONDecoder","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A10TypedRouteP11DecodedTypeQa","text":"DecodedType"}],"type":"topic","abstract":[{"type":"text","text":"Fires off a GET request to fetch data, using the current "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/TypedRoute","isActive":true},{"type":"text","text":" instance."}],"role":"symbol","url":"\/documentation\/ether\/ethertypedroute\/get(parameters:decoder:)"},"doc://Ether/documentation/Ether/Ether":{"abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","type":"topic","kind":"symbol","title":"Ether","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Ether"}],"navigatorTitle":[{"text":"Ether","kind":"identifier"}],"url":"\/documentation\/ether\/ether","role":"symbol"},"doc://Ether/documentation/Ether/EtherRoute/get(type:parameters:decoder:)":{"abstract":[{"text":"Fires off a GET request to fetch data, using the current ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","isActive":true,"type":"reference"},{"type":"text","text":" instance."}],"type":"topic","title":"get(type:parameters:decoder:)","role":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/get(type:parameters:decoder:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"get"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"type","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A5RoutePAAE3get4type10parameters7decoderqd__qd__m_SDySSs25LosslessStringConvertible_pG10Foundation11JSONDecoderCtYaKSeRd__lF1TL_qd__mfp"},{"text":".Type, ","kind":"text"},{"text":"parameters","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5EtherAAV","kind":"typeIdentifier","text":"Ether"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Parameters","preciseIdentifier":"s:5EtherAAV10Parametersa"},{"kind":"text","text":", "},{"text":"decoder","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier","text":"JSONDecoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A5RoutePAAE3get4type10parameters7decoderqd__qd__m_SDySSs25LosslessStringConvertible_pG10Foundation11JSONDecoderCtYaKSeRd__lF1TL_qd__mfp"}],"url":"\/documentation\/ether\/etherroute\/get(type:parameters:decoder:)"},"doc://Ether/documentation/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether","url":"\/documentation\/ether","abstract":[{"text":"Welcome to easy, clean, Swifty networking!","type":"text"}],"type":"topic","title":"Ether","kind":"symbol","role":"collection"},"doc://Ether/documentation/Ether/EtherRoute":{"abstract":[{"text":"A custom protocol to which host apps can conform.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","title":"EtherRoute","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherRoute"}],"navigatorTitle":[{"text":"EtherRoute","kind":"identifier"}],"url":"\/documentation\/ether\/etherroute","role":"symbol"},"doc://Ether/documentation/Ether/EtherSingularFetchable":{"navigatorTitle":[{"text":"EtherSingularFetchable","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"text":"Types conforming to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"},{"text":" assert that their APIs provide a way to get single instances back, usually by providing an identifier.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","title":"EtherSingularFetchable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"EtherSingularFetchable","kind":"identifier"}],"url":"\/documentation\/ether\/ethersingularfetchable"},"doc://Ether/documentation/Ether/EtherFetchable":{"navigatorTitle":[{"text":"EtherFetchable","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"A typealias representing conformance to both "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","type":"reference","isActive":true},{"text":" and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","title":"EtherFetchable","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherFetchable"}],"url":"\/documentation\/ether\/etherfetchable"},"doc://Ether/documentation/Ether/Ether/Route":{"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","kind":"symbol","title":"Ether.Route","role":"symbol","abstract":[{"text":"A typealias for ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"text":", namespaced under ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","isActive":true,"type":"reference"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"Route"}],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Route","kind":"identifier"}],"url":"\/documentation\/ether\/ether\/route"},"doc://Ether/documentation/Ether/Ether/TypedRoute":{"navigatorTitle":[{"kind":"identifier","text":"TypedRoute"}],"title":"Ether.TypedRoute","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TypedRoute","kind":"identifier"}],"abstract":[{"type":"text","text":"A typealias for "},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","type":"reference"},{"text":", namespaced under ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","isActive":true},{"text":".","type":"text"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/TypedRoute","url":"\/documentation\/ether\/ether\/typedroute","type":"topic","kind":"symbol","role":"symbol"},"doc://Ether/documentation/Ether/EtherTypedRoute":{"navigatorTitle":[{"kind":"identifier","text":"EtherTypedRoute"}],"abstract":[{"type":"text","text":"An extension of "},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","type":"reference"},{"type":"text","text":" that allows routes to declare associated types, corresponding to the type to which the route’s contents decode."}],"type":"topic","title":"EtherTypedRoute","role":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherTypedRoute"}],"url":"\/documentation\/ether\/ethertypedroute"},"doc://Ether/documentation/Ether/EtherPluralFetchable":{"abstract":[{"type":"text","text":"Types conforming to "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","isActive":true},{"text":" assert that their APIs provide a way to get multiple instances back, optionally filtered by fields specified in ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","type":"reference","isActive":true}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","kind":"symbol","type":"topic","title":"EtherPluralFetchable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"EtherPluralFetchable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"EtherPluralFetchable"}],"url":"\/documentation\/ether\/etherpluralfetchable","role":"symbol"},"doc://Ether/documentation/Ether/Introduction":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Introduction","title":"Introduction","url":"\/documentation\/ether\/introduction","kind":"article","role":"collectionGroup","type":"topic","abstract":[{"text":"What is Ether, and why should you use it?","type":"text"}]}}}