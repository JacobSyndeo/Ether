{"metadata":{"category":"Ether","categoryPathComponent":"Request-Tutorial-ToC","role":"project","title":"Setting Up Your Routes"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/ether\/tutorialroutes"]}],"kind":"project","sections":[{"kind":"hero","estimatedTimeInMinutes":10,"content":[{"inlineContent":[{"type":"text","text":"In this tutorial, you’ll learn how to set up your "},{"code":"Routes","type":"codeVoice"},{"text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If you’re reading this, we’ll assume you have already created a project and successfully imported "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"We’ll be using the ","type":"text"},{"type":"reference","identifier":"https:\/\/swapi.dev\/","isActive":true},{"type":"text","text":" for this tutorial."}]},{"type":"paragraph","inlineContent":[{"text":"s@Image(source: xwing.jpeg, alt: “A photo of X-wing Starfighters from Star Wars.”)","type":"text"}]}],"chapter":"Setting Up Routes","title":"Setting Up Your Routes"},{"kind":"tasks","tasks":[{"stepsSection":[{"code":"TutorialNewFile.swift","runtimePreview":null,"media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new Swift file in your project, naming it "},{"type":"codeVoice","code":"SWRoutes.swift"},{"text":".","type":"text"}]}],"caption":[{"inlineContent":[{"text":"A good habit is to name this file and enum in a way that makes it clear ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"which","type":"text"}]},{"type":"text","text":" API you’re building routes for. Since this is the Star Wars API, we use the “SW” prefix."}],"type":"paragraph"}],"type":"step"},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"In your new file, import ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether","isActive":true},{"text":", and declare an ","type":"text"},{"code":"enum","type":"codeVoice"},{"text":" called ","type":"text"},{"type":"codeVoice","code":"SWRoutes"},{"type":"text","text":", conforming to the "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","type":"reference","isActive":true},{"type":"text","text":" protocol."}]}],"media":null,"caption":[],"code":"TutorialRoutes-1-1-Import.swift","runtimePreview":null},{"runtimePreview":null,"code":"TutorialRoutes-1-2-Building.swift","type":"step","media":null,"caption":[{"inlineContent":[{"text":"We do this because the URL ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/swapi.dev\/people\/1"},{"type":"text","text":" has an integer at the end, which is the ID of the person. We therefore model our route as a case that accepts an integer."}],"type":"paragraph"}],"content":[{"inlineContent":[{"text":"Add a case for the ","type":"text"},{"code":"people","type":"codeVoice"},{"type":"text","text":" endpoint, accepting an integer value."}],"type":"paragraph"}]},{"type":"step","caption":[],"media":null,"code":"TutorialRoutes-1-3-Protocol.swift","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Now, let’s add conformance to the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route"},{"type":"text","text":" protocol by adding "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/asURL"},{"text":" as a computed URL property.","type":"text"}]}]},{"type":"step","media":null,"content":[{"inlineContent":[{"text":"Add a string variable for the hostname, setting it to https:\/\/swapi.dev\/","type":"text"}],"type":"paragraph"}],"runtimePreview":null,"caption":[{"inlineContent":[{"text":"This will help build URLs, as it’ll be common to every URL this route collection generates.","type":"text"}],"type":"paragraph"}],"code":"TutorialRoutes-1-4-Host.swift"},{"caption":[{"type":"paragraph","inlineContent":[{"text":"This is convenient, as it means we only have to do the conversion to the ","type":"text"},{"code":"URL","type":"codeVoice"},{"text":" type in one place.","type":"text"}]}],"content":[{"inlineContent":[{"text":"Add a variable to hold a URL string.","type":"text"}],"type":"paragraph"}],"type":"step","media":null,"code":"TutorialRoutes-1-5-URLString.swift","runtimePreview":null},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Add a ","type":"text"},{"type":"codeVoice","code":"switch"},{"type":"text","text":" statement, which we’ll use to cover each possible enum case."}]}],"media":null,"caption":[],"code":"TutorialRoutes-1-6-Switch.swift","runtimePreview":null},{"code":"TutorialRoutes-1-7-Case.swift","media":null,"runtimePreview":null,"caption":[{"type":"paragraph","inlineContent":[{"text":"We use “personID” here because in this case, the integer represents the person ID. If it represented something else, we would give this variable a different name, more appropriate to what it represents in the API.","type":"text"}]}],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a case for "},{"type":"codeVoice","code":"people"},{"text":", capturing the associated ","type":"text"},{"type":"codeVoice","code":"Int"},{"text":" as “personID”.","type":"text"}]}],"type":"step"},{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build the URL string by combining "},{"code":"host","type":"codeVoice"},{"type":"text","text":" with "},{"type":"codeVoice","code":"\"\/api\/people\/\""},{"text":" and ","type":"text"},{"type":"codeVoice","code":"personID"},{"type":"text","text":"."}]}],"caption":[{"type":"paragraph","inlineContent":[{"text":"This, of course, results in “https:\/\/swapi.dev\/people\/_” (where _ represents the Int provided).","type":"text"}]}],"type":"step","code":"TutorialRoutes-1-8-Body.swift","media":null},{"code":"TutorialRoutes-1-9-Return.swift","type":"step","caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Finally, let’s return the URL, satisfying the protocol.","type":"text"}]}],"media":null,"runtimePreview":null}],"title":"Creating your Routes enum","anchor":"Creating-your-Routes-enum","contentSection":[{"media":"web.png","kind":"contentAndMedia","mediaPosition":"trailing","content":[{"inlineContent":[{"type":"text","text":"We’ll start by creating an enum to hold and manage our routes."}],"type":"paragraph"}]}]}]},{"anchor":"Check-Your-Understanding","kind":"assessments","assessments":[{"title":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Suppose you had to model the URL https:\/\/swapi.dev\/api\/planets\/1 . Suppose also that the endpoint worked without a planet ID, like https:\/\/swapi.dev\/api\/planets\/ . How would you model this?"}]}],"type":"multiple-choice","choices":[{"justification":[{"type":"paragraph","inlineContent":[{"text":"Remember, this endpoint can accept parameters.","type":"text"}]}],"isCorrect":false,"content":[{"inlineContent":[{"type":"text","text":"case planets()"}],"type":"paragraph"}]},{"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Remember, this endpoint doesn’t require parameters."}]}],"isCorrect":false,"content":[{"inlineContent":[{"text":"case planets(Int)","type":"text"}],"type":"paragraph"}]},{"isCorrect":true,"justification":[{"inlineContent":[{"text":"This endpoint can optionally accept an integer parameter, so this is the correct way to model it!","type":"text"}],"type":"paragraph"}],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"case planets(Int?)"}]}]}],"content":[]},{"choices":[{"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The endpoint doesn’t accept any parameters, so none should be accepted by the enum, either."}]}],"isCorrect":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"case api"}]}]},{"justification":[{"inlineContent":[{"type":"text","text":"Remember, this endpoint doesn’t accept any parameters."}],"type":"paragraph"}],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"case api(Int)"}]}],"isCorrect":false},{"content":[{"type":"paragraph","inlineContent":[{"text":"case api(Int?)","type":"text"}]}],"isCorrect":false,"justification":[{"type":"paragraph","inlineContent":[{"text":"Remember, this endpoint doesn’t accept any parameters, even optionally.","type":"text"}]}]}],"title":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Suppose you had to model the URL https:\/\/swapi.dev\/api\/ , an API endpoint that doesn’t accept any parameters. How would you model this?"}]}],"type":"multiple-choice","content":[]}]}],"hierarchy":{"paths":[["doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC","doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/$volume","doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes"]],"modules":[{"projects":[],"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Introduction"},{"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes","projects":[{"reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes","sections":[{"kind":"task","reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Creating-your-Routes-enum"},{"kind":"assessment","reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Check-Your-Understanding"}]}]}],"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes"},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"TutorialRoutes-1-1-Import.swift":{"type":"file","identifier":"TutorialRoutes-1-1-Import.swift","fileName":"SWRoutes.swift","syntax":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    ","}"],"fileType":"swift","highlights":[{"line":2},{"line":4},{"line":5},{"line":6}]},"TutorialRoutes-1-9-Return.swift":{"syntax":"swift","fileName":"SWRoutes.swift","fileType":"swift","type":"file","identifier":"TutorialRoutes-1-9-Return.swift","highlights":[{"line":16},{"line":17}],"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            urlString = host + \"\/api\/people\/\\(personID)\"","        }","        ","        return URL(string: urlString)!","    }","}"]},"https://swapi.dev/people/1":{"url":"https:\/\/swapi.dev\/people\/1","type":"link","identifier":"https:\/\/swapi.dev\/people\/1","title":"https:\/\/swapi.dev\/people\/1","titleInlineContent":[{"type":"text","text":"https:\/\/swapi.dev\/people\/1"}]},"doc://Ether/tutorials/Ether/TutorialRoutes#Check-Your-Understanding":{"titleInlineContent":[{"text":"Check Your Understanding","type":"text"}],"type":"link","title":"Check Your Understanding","identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Check-Your-Understanding","url":"\/tutorials\/ether\/tutorialroutes#Check-Your-Understanding"},"doc://Ether/documentation/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether","url":"\/documentation\/ether","abstract":[{"text":"Welcome to easy, clean, Swifty networking!","type":"text"}],"type":"topic","title":"Ether","kind":"symbol","role":"collection"},"TutorialRoutes-1-4-Host.swift":{"fileName":"SWRoutes.swift","type":"file","identifier":"TutorialRoutes-1-4-Host.swift","highlights":[{"line":8}],"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","    }","}"],"syntax":"swift","fileType":"swift"},"doc://Ether/documentation/Ether/EtherRoute":{"abstract":[{"text":"A custom protocol to which host apps can conform.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","title":"EtherRoute","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherRoute"}],"navigatorTitle":[{"text":"EtherRoute","kind":"identifier"}],"url":"\/documentation\/ether\/etherroute","role":"symbol"},"TutorialRoutes-1-5-URLString.swift":{"fileName":"SWRoutes.swift","identifier":"TutorialRoutes-1-5-URLString.swift","type":"file","highlights":[{"line":9},{"line":10}],"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","    }","}"],"syntax":"swift","fileType":"swift"},"TutorialRoutes-1-2-Building.swift":{"type":"file","identifier":"TutorialRoutes-1-2-Building.swift","fileName":"SWRoutes.swift","syntax":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","}"],"fileType":"swift","highlights":[{"line":5}]},"doc://Ether/documentation/Ether/Ether/Route":{"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","kind":"symbol","title":"Ether.Route","role":"symbol","abstract":[{"text":"A typealias for ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"text":", namespaced under ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","isActive":true,"type":"reference"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"Route"}],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Route","kind":"identifier"}],"url":"\/documentation\/ether\/ether\/route"},"doc://Ether/documentation/Ether/EtherRoute/asURL":{"url":"\/documentation\/ether\/etherroute\/asurl","title":"asURL","kind":"symbol","required":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/asURL","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns a URL that conforms to "},{"type":"reference","identifier":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt","isActive":true},{"type":"text","text":" or throws an "},{"code":"Error","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asURL"},{"text":": ","kind":"text"},{"text":"URL","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV"}]},"web.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/web.png"}],"type":"image","identifier":"web.png","alt":"A spiderweb"},"https://www.ietf.org/rfc/rfc2396.txt":{"url":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt","type":"link","identifier":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt","title":"RFC 2396","titleInlineContent":[{"type":"text","text":"RFC 2396"}]},"doc://Ether/tutorials/Request-Tutorial-ToC":{"identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC","kind":"overview","url":"\/tutorials\/request-tutorial-toc","type":"topic","title":"Welcome to Ether!","abstract":[{"text":"Welcome to Ether, the framework that makes working with network calls—and the data they return—not just bearable, but easy.","type":"text"},{"text":" ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"Dare I say fun, even?"}]},{"text":" Let’s explore together and see!","type":"text"}],"role":"overview"},"TutorialRoutes-1-6-Switch.swift":{"syntax":"swift","fileName":"SWRoutes.swift","fileType":"swift","type":"file","identifier":"TutorialRoutes-1-6-Switch.swift","highlights":[{"line":11},{"line":12},{"line":13},{"line":14}],"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","            ","        }","    }","}"]},"doc://Ether/tutorials/Request-Tutorial-ToC/Setting-Up-Routes":{"type":"topic","role":"article","identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes","url":"\/tutorials\/request-tutorial-toc\/setting-up-routes","title":"Setting Up Routes","abstract":[],"kind":"article"},"doc://Ether/documentation/Ether/Ether":{"abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","type":"topic","kind":"symbol","title":"Ether","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Ether"}],"navigatorTitle":[{"text":"Ether","kind":"identifier"}],"url":"\/documentation\/ether\/ether","role":"symbol"},"TutorialRoutes-1-8-Body.swift":{"fileType":"swift","fileName":"SWRoutes.swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            urlString = host + \"\/api\/people\/\\(personID)\"","        }","    }","}"],"syntax":"swift","highlights":[{"line":14}],"type":"file","identifier":"TutorialRoutes-1-8-Body.swift"},"TutorialNewFile.swift":{"fileType":"swift","fileName":"SWRoutes.swift","content":["import Foundation",""],"syntax":"swift","highlights":[],"identifier":"TutorialNewFile.swift","type":"file"},"TutorialRoutes-1-3-Protocol.swift":{"fileType":"swift","fileName":"SWRoutes.swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        ","    }","}"],"syntax":"swift","highlights":[{"line":6},{"line":7},{"line":8},{"line":9}],"identifier":"TutorialRoutes-1-3-Protocol.swift","type":"file"},"https://swapi.dev/":{"identifier":"https:\/\/swapi.dev\/","title":"Star Wars API","type":"link","url":"https:\/\/swapi.dev\/","titleInlineContent":[{"text":"Star Wars API","type":"text"}]},"doc://Ether/tutorials/Ether/TutorialRoutes":{"type":"topic","identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes","estimatedTime":"10min","kind":"project","abstract":[{"text":"In this tutorial, you’ll learn how to set up your ","type":"text"},{"type":"codeVoice","code":"Routes"},{"type":"text","text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access."}],"role":"project","title":"Setting Up Your Routes","url":"\/tutorials\/ether\/tutorialroutes"},"doc://Ether/tutorials/Request-Tutorial-ToC/Introduction":{"abstract":[],"kind":"article","role":"article","title":"Introduction","identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Introduction","url":"\/tutorials\/request-tutorial-toc\/introduction","type":"topic"},"TutorialRoutes-1-7-Case.swift":{"fileType":"swift","identifier":"TutorialRoutes-1-7-Case.swift","fileName":"SWRoutes.swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            ","        }","    }","}"],"type":"file","highlights":[{"line":13}],"syntax":"swift"},"doc://Ether/tutorials/Ether/TutorialRoutes#Creating-your-Routes-enum":{"abstract":[{"text":"In this tutorial, you’ll learn how to set up your ","type":"text"},{"code":"Routes","type":"codeVoice"},{"type":"text","text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access."}],"kind":"section","role":"pseudoSymbol","title":"Creating your Routes enum","identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Creating-your-Routes-enum","url":"\/tutorials\/ether\/tutorialroutes#Creating-your-Routes-enum","type":"section"}}}