{"metadata":{"category":"Ether","categoryPathComponent":"Request-Tutorial-ToC","title":"Setting Up Your Routes","role":"project"},"hierarchy":{"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC","modules":[{"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Introduction","projects":[]},{"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes","projects":[{"reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes","sections":[{"reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Creating-your-Routes-enum","kind":"task"},{"kind":"assessment","reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Check-Your-Understanding"}]}]}],"paths":[["doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC","doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/$volume","doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/ether\/tutorialroutes"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"project","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes"},"sections":[{"kind":"hero","content":[{"type":"paragraph","inlineContent":[{"text":"In this tutorial, you’ll learn how to set up your ","type":"text"},{"code":"Routes","type":"codeVoice"},{"text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access.","type":"text"}]},{"inlineContent":[{"text":"If you’re reading this, we’ll assume you have already created a project and successfully imported ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"We’ll be using the ","type":"text"},{"identifier":"https:\/\/swapi.dev\/","isActive":true,"type":"reference"},{"text":" for this tutorial.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"s@Image(source: xwing.jpeg, alt: “A photo of X-wing Starfighters from Star Wars.”)","type":"text"}]}],"estimatedTimeInMinutes":10,"title":"Setting Up Your Routes","chapter":"Setting Up Routes"},{"tasks":[{"anchor":"Creating-your-Routes-enum","stepsSection":[{"content":[{"inlineContent":[{"type":"text","text":"Create a new Swift file in your project, naming it "},{"code":"SWRoutes.swift","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"media":null,"runtimePreview":null,"code":"TutorialNewFile.swift","type":"step","caption":[{"inlineContent":[{"text":"A good habit is to name this file and enum in a way that makes it clear ","type":"text"},{"inlineContent":[{"type":"text","text":"which"}],"type":"emphasis"},{"type":"text","text":" API you’re building routes for. Since this is the Star Wars API, we use the “SW” prefix."}],"type":"paragraph"}]},{"type":"step","media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"In your new file, import ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether","isActive":true,"type":"reference"},{"type":"text","text":", and declare an "},{"type":"codeVoice","code":"enum"},{"type":"text","text":" called "},{"code":"SWRoutes","type":"codeVoice"},{"text":", conforming to the ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","type":"reference","isActive":true},{"text":" protocol.","type":"text"}]}],"runtimePreview":null,"code":"TutorialRoutes-1-1-Import.swift","caption":[]},{"caption":[{"inlineContent":[{"type":"text","text":"We do this because the URL "},{"isActive":true,"type":"reference","identifier":"https:\/\/swapi.dev\/people\/1"},{"type":"text","text":" has an integer at the end, which is the ID of the person. We therefore model our route as a case that accepts an integer."}],"type":"paragraph"}],"content":[{"inlineContent":[{"type":"text","text":"Add a case for the "},{"type":"codeVoice","code":"people"},{"text":" endpoint, accepting an integer value.","type":"text"}],"type":"paragraph"}],"media":null,"code":"TutorialRoutes-1-2-Building.swift","runtimePreview":null,"type":"step"},{"media":null,"code":"TutorialRoutes-1-3-Protocol.swift","runtimePreview":null,"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now, let’s add conformance to the "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","isActive":true},{"type":"text","text":" protocol by adding "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/asURL"},{"type":"text","text":" as a computed URL property."}]}]},{"media":null,"content":[{"inlineContent":[{"type":"text","text":"Add a string variable for the hostname, setting it to https:\/\/swapi.dev\/"}],"type":"paragraph"}],"caption":[{"inlineContent":[{"type":"text","text":"This will help build URLs, as it’ll be common to every URL this route collection generates."}],"type":"paragraph"}],"runtimePreview":null,"code":"TutorialRoutes-1-4-Host.swift","type":"step"},{"code":"TutorialRoutes-1-5-URLString.swift","media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a variable to hold a URL string."}]}],"caption":[{"inlineContent":[{"type":"text","text":"This is convenient, as it means we only have to do the conversion to the "},{"code":"URL","type":"codeVoice"},{"text":" type in one place.","type":"text"}],"type":"paragraph"}],"type":"step","runtimePreview":null},{"code":"TutorialRoutes-1-6-Switch.swift","type":"step","caption":[],"media":null,"runtimePreview":null,"content":[{"inlineContent":[{"text":"Add a ","type":"text"},{"type":"codeVoice","code":"switch"},{"type":"text","text":" statement, which we’ll use to cover each possible enum case."}],"type":"paragraph"}]},{"type":"step","code":"TutorialRoutes-1-7-Case.swift","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We use “personID” here because in this case, the integer represents the person ID. If it represented something else, we would give this variable a different name, more appropriate to what it represents in the API."}]}],"content":[{"inlineContent":[{"text":"Add a case for ","type":"text"},{"code":"people","type":"codeVoice"},{"type":"text","text":", capturing the associated "},{"code":"Int","type":"codeVoice"},{"text":" as “personID”.","type":"text"}],"type":"paragraph"}],"media":null,"runtimePreview":null},{"type":"step","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build the URL string by combining "},{"type":"codeVoice","code":"host"},{"type":"text","text":" with "},{"type":"codeVoice","code":"\"\/api\/people\/\""},{"type":"text","text":" and "},{"type":"codeVoice","code":"personID"},{"type":"text","text":"."}]}],"media":null,"code":"TutorialRoutes-1-8-Body.swift","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This, of course, results in “https:\/\/swapi.dev\/people\/_” (where _ represents the Int provided)."}]}]},{"caption":[],"media":null,"content":[{"inlineContent":[{"type":"text","text":"Finally, let’s return the URL, satisfying the protocol."}],"type":"paragraph"}],"code":"TutorialRoutes-1-9-Return.swift","type":"step","runtimePreview":null}],"title":"Creating your Routes enum","contentSection":[{"kind":"contentAndMedia","content":[{"inlineContent":[{"type":"text","text":"We’ll start by creating an enum to hold and manage our routes."}],"type":"paragraph"}],"mediaPosition":"trailing","media":"web.png"}]}],"kind":"tasks"},{"anchor":"Check-Your-Understanding","kind":"assessments","assessments":[{"content":[],"type":"multiple-choice","title":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Suppose you had to model the URL https:\/\/swapi.dev\/api\/planets\/1 . Suppose also that the endpoint worked without a planet ID, like https:\/\/swapi.dev\/api\/planets\/ . How would you model this?"}]}],"choices":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"case planets()"}]}],"isCorrect":false,"justification":[{"type":"paragraph","inlineContent":[{"text":"Remember, this endpoint can accept parameters.","type":"text"}]}]},{"justification":[{"inlineContent":[{"type":"text","text":"Remember, this endpoint doesn’t require parameters."}],"type":"paragraph"}],"isCorrect":false,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"case planets(Int)"}]}]},{"isCorrect":true,"content":[{"inlineContent":[{"type":"text","text":"case planets(Int?)"}],"type":"paragraph"}],"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This endpoint can optionally accept an integer parameter, so this is the correct way to model it!"}]}]}]},{"choices":[{"justification":[{"inlineContent":[{"type":"text","text":"The endpoint doesn’t accept any parameters, so none should be accepted by the enum, either."}],"type":"paragraph"}],"isCorrect":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"case api"}]}]},{"isCorrect":false,"justification":[{"inlineContent":[{"text":"Remember, this endpoint doesn’t accept any parameters.","type":"text"}],"type":"paragraph"}],"content":[{"inlineContent":[{"text":"case api(Int)","type":"text"}],"type":"paragraph"}]},{"isCorrect":false,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"case api(Int?)"}]}],"justification":[{"inlineContent":[{"text":"Remember, this endpoint doesn’t accept any parameters, even optionally.","type":"text"}],"type":"paragraph"}]}],"content":[],"title":[{"inlineContent":[{"type":"text","text":"Suppose you had to model the URL https:\/\/swapi.dev\/api\/ , an API endpoint that doesn’t accept any parameters. How would you model this?"}],"type":"paragraph"}],"type":"multiple-choice"}]}],"references":{"https://www.ietf.org/rfc/rfc2396.txt":{"type":"link","title":"RFC 2396","identifier":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt","titleInlineContent":[{"type":"text","text":"RFC 2396"}],"url":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt"},"TutorialRoutes-1-6-Switch.swift":{"syntax":"swift","fileType":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","            ","        }","    }","}"],"identifier":"TutorialRoutes-1-6-Switch.swift","type":"file","highlights":[{"line":11},{"line":12},{"line":13},{"line":14}],"fileName":"SWRoutes.swift"},"web.png":{"alt":"A spiderweb","identifier":"web.png","variants":[{"traits":["1x","light"],"url":"\/images\/web.png"}],"type":"image"},"doc://Ether/tutorials/Request-Tutorial-ToC":{"url":"\/tutorials\/request-tutorial-toc","type":"topic","abstract":[{"text":"Welcome to Ether, the framework that makes working with network calls—and the data they return—not just bearable, but easy.","type":"text"},{"type":"text","text":" "},{"inlineContent":[{"text":"Dare I say fun, even?","type":"text"}],"type":"emphasis"},{"text":" Let’s explore together and see!","type":"text"}],"identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC","kind":"overview","role":"overview","title":"Welcome to Ether!"},"TutorialRoutes-1-4-Host.swift":{"syntax":"swift","fileType":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","    }","}"],"identifier":"TutorialRoutes-1-4-Host.swift","type":"file","highlights":[{"line":8}],"fileName":"SWRoutes.swift"},"doc://Ether/tutorials/Request-Tutorial-ToC/Setting-Up-Routes":{"abstract":[],"kind":"article","url":"\/tutorials\/request-tutorial-toc\/setting-up-routes","identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes","type":"topic","title":"Setting Up Routes","role":"article"},"doc://Ether/documentation/Ether/EtherRoute":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","abstract":[{"type":"text","text":"A custom protocol to which host apps can conform."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"EtherRoute","kind":"identifier"}],"url":"\/documentation\/ether\/etherroute","type":"topic","title":"EtherRoute","kind":"symbol","navigatorTitle":[{"text":"EtherRoute","kind":"identifier"}]},"TutorialRoutes-1-2-Building.swift":{"syntax":"swift","fileType":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","}"],"identifier":"TutorialRoutes-1-2-Building.swift","type":"file","highlights":[{"line":5}],"fileName":"SWRoutes.swift"},"https://swapi.dev/people/1":{"url":"https:\/\/swapi.dev\/people\/1","type":"link","identifier":"https:\/\/swapi.dev\/people\/1","titleInlineContent":[{"text":"https:\/\/swapi.dev\/people\/1","type":"text"}],"title":"https:\/\/swapi.dev\/people\/1"},"doc://Ether/documentation/Ether/Ether/Route":{"url":"\/documentation\/ether\/ether\/route","role":"symbol","abstract":[{"text":"A typealias for ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true},{"text":", namespaced under ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","isActive":true,"type":"reference"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Route"}],"navigatorTitle":[{"text":"Route","kind":"identifier"}],"title":"Ether.Route"},"TutorialNewFile.swift":{"syntax":"swift","fileType":"swift","content":["import Foundation",""],"identifier":"TutorialNewFile.swift","type":"file","highlights":[],"fileName":"SWRoutes.swift"},"doc://Ether/tutorials/Ether/TutorialRoutes#Check-Your-Understanding":{"url":"\/tutorials\/ether\/tutorialroutes#Check-Your-Understanding","type":"link","identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Check-Your-Understanding","titleInlineContent":[{"text":"Check Your Understanding","type":"text"}],"title":"Check Your Understanding"},"TutorialRoutes-1-7-Case.swift":{"syntax":"swift","fileType":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            ","        }","    }","}"],"type":"file","fileName":"SWRoutes.swift","identifier":"TutorialRoutes-1-7-Case.swift","highlights":[{"line":13}]},"doc://Ether/documentation/Ether/Ether":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Ether","kind":"identifier"}],"title":"Ether","kind":"symbol","navigatorTitle":[{"text":"Ether","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","url":"\/documentation\/ether\/ether","type":"topic","abstract":[{"text":"The core of Ether. All the core functions and types are namespaced under this.","type":"text"}],"role":"symbol"},"TutorialRoutes-1-5-URLString.swift":{"syntax":"swift","fileType":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","    }","}"],"identifier":"TutorialRoutes-1-5-URLString.swift","type":"file","highlights":[{"line":9},{"line":10}],"fileName":"SWRoutes.swift"},"TutorialRoutes-1-9-Return.swift":{"syntax":"swift","fileType":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            urlString = host + \"\/api\/people\/\\(personID)\"","        }","        ","        return URL(string: urlString)!","    }","}"],"type":"file","fileName":"SWRoutes.swift","identifier":"TutorialRoutes-1-9-Return.swift","highlights":[{"line":16},{"line":17}]},"doc://Ether/tutorials/Ether/TutorialRoutes":{"url":"\/tutorials\/ether\/tutorialroutes","estimatedTime":"10min","title":"Setting Up Your Routes","role":"project","kind":"project","identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes","type":"topic","abstract":[{"text":"In this tutorial, you’ll learn how to set up your ","type":"text"},{"code":"Routes","type":"codeVoice"},{"text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access.","type":"text"}]},"https://swapi.dev/":{"url":"https:\/\/swapi.dev\/","type":"link","identifier":"https:\/\/swapi.dev\/","titleInlineContent":[{"text":"Star Wars API","type":"text"}],"title":"Star Wars API"},"TutorialRoutes-1-1-Import.swift":{"syntax":"swift","fileType":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    ","}"],"identifier":"TutorialRoutes-1-1-Import.swift","type":"file","highlights":[{"line":2},{"line":4},{"line":5},{"line":6}],"fileName":"SWRoutes.swift"},"TutorialRoutes-1-8-Body.swift":{"syntax":"swift","fileType":"swift","type":"file","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            urlString = host + \"\/api\/people\/\\(personID)\"","        }","    }","}"],"fileName":"SWRoutes.swift","identifier":"TutorialRoutes-1-8-Body.swift","highlights":[{"line":14}]},"doc://Ether/documentation/Ether/EtherRoute/asURL":{"url":"\/documentation\/ether\/etherroute\/asurl","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/asURL","abstract":[{"type":"text","text":"Returns a URL that conforms to "},{"isActive":true,"type":"reference","identifier":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt"},{"type":"text","text":" or throws an "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"role":"symbol","type":"topic","kind":"symbol","required":true,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"asURL","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV","text":"URL"}],"title":"asURL"},"doc://Ether/tutorials/Request-Tutorial-ToC/Introduction":{"abstract":[],"kind":"article","url":"\/tutorials\/request-tutorial-toc\/introduction","identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Introduction","type":"topic","title":"Introduction","role":"article"},"TutorialRoutes-1-3-Protocol.swift":{"syntax":"swift","fileType":"swift","type":"file","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        ","    }","}"],"fileName":"SWRoutes.swift","identifier":"TutorialRoutes-1-3-Protocol.swift","highlights":[{"line":6},{"line":7},{"line":8},{"line":9}]},"doc://Ether/documentation/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether","abstract":[{"text":"Welcome to easy, clean, Swifty networking!","type":"text"}],"kind":"symbol","url":"\/documentation\/ether","type":"topic","role":"collection","title":"Ether"},"doc://Ether/tutorials/Ether/TutorialRoutes#Creating-your-Routes-enum":{"abstract":[{"text":"In this tutorial, you’ll learn how to set up your ","type":"text"},{"code":"Routes","type":"codeVoice"},{"text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access.","type":"text"}],"kind":"section","url":"\/tutorials\/ether\/tutorialroutes#Creating-your-Routes-enum","identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Creating-your-Routes-enum","type":"section","title":"Creating your Routes enum","role":"pseudoSymbol"}}}