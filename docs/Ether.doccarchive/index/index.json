{"interfaceLanguages":{"swift":[{"children":[{"title":"Essentials","type":"groupMarker"},{"path":"\/documentation\/ether\/introduction","title":"Introduction","type":"symbol"},{"path":"\/documentation\/ether\/quick-overview","title":"Quick Overview","type":"symbol"},{"path":"\/documentation\/ether\/usage","title":"Usage","type":"symbol"},{"title":"Firing off network requests","type":"groupMarker"},{"path":"\/documentation\/ether\/ether\/get(route:type:parameters:decoder:)","title":"static func get<T>(route: any Route, type: T.Type, parameters: Parameters, decoder: JSONDecoder) async throws -> T","type":"method"},{"path":"\/documentation\/ether\/ether\/post(route:with:usingencoding:responseformat:decoder:)","title":"static func post<T>(route: any Route, with: RequestBody, usingEncoding: ParameterEncoding, responseFormat: T.Type, decoder: JSONDecoder) async throws -> Response<T>","type":"method"},{"path":"\/documentation\/ether\/ether\/postmultipartform(route:formitems:responseformat:decoder:)","title":"static func postMultipartForm<T>(route: any Route, formItems: [String : FormValue], responseFormat: T.Type, decoder: JSONDecoder) async throws -> Response<T>","type":"method"},{"path":"\/documentation\/ether\/ether\/request(route:method:headers:parameters:body:responseformat:usingencoding:decoder:)","title":"static func request<T>(route: any Route, method: Method, headers: Headers, parameters: Parameters, body: RequestBody?, responseFormat: T.Type?, usingEncoding: ParameterEncoding, decoder: JSONDecoder) async throws -> Response<T>","type":"method"},{"title":"Fetchable","type":"groupMarker"},{"path":"\/documentation\/ether\/etherfetchable","title":"EtherFetchable","type":"typealias"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/ether\/ethersingularfetchable\/fetch(id:parameters:)","title":"static func fetch(id: String?, parameters: Ether.Parameters) async throws -> Self","type":"method"},{"path":"\/documentation\/ether\/ethersingularfetchable\/fetch(id:parameters:container:keypath:)","title":"static func fetch<Container>(id: String?, parameters: Ether.Parameters, container: Container.Type, keyPath: KeyPath<Container, Self>) async throws -> Self","type":"method"},{"path":"\/documentation\/ether\/ethersingularfetchable\/fetchwithcontainer(id:parameters:container:)","title":"static func fetchWithContainer<Container>(id: String?, parameters: Ether.Parameters, container: Container.Type) async throws -> Container","type":"method"},{"path":"\/documentation\/ether\/ethersingularfetchable\/singularroute(id:)","title":"static func singularRoute(id: String?) -> any EtherRoute","type":"method"}],"path":"\/documentation\/ether\/ethersingularfetchable","title":"EtherSingularFetchable","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/ether\/etherpluralfetchable\/fetchall(filters:parameters:)","title":"static func fetchAll(filters: Ether.FetchableFilters?, parameters: Ether.Parameters) async throws -> [Self]","type":"method"},{"path":"\/documentation\/ether\/etherpluralfetchable\/fetchall(filters:parameters:container:keypath:)","title":"static func fetchAll<Container>(filters: Ether.FetchableFilters?, parameters: Ether.Parameters, container: Container.Type, keyPath: KeyPath<Container, [Self]>) async throws -> [Self]","type":"method"},{"path":"\/documentation\/ether\/etherpluralfetchable\/fetchallwithcontainer(filters:parameters:container:keypath:)","title":"static func fetchAllWithContainer<Container>(filters: Ether.FetchableFilters?, parameters: Ether.Parameters, container: Container.Type, keyPath: KeyPath<Container, [Self]>) async throws -> Container","type":"method"},{"path":"\/documentation\/ether\/etherpluralfetchable\/pluralroute(filters:)","title":"static func pluralRoute(filters: Ether.FetchableFilters?) -> any EtherRoute","type":"method"}],"path":"\/documentation\/ether\/etherpluralfetchable","title":"EtherPluralFetchable","type":"protocol"},{"title":"Routes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ether\/etherroute\/asurl","title":"var asURL: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ether\/etherroute\/get(type:parameters:decoder:)","title":"func get<T>(type: T.Type, parameters: Ether.Parameters, decoder: JSONDecoder) async throws -> T","type":"method"},{"path":"\/documentation\/ether\/etherroute\/post(with:usingencoding:responseformat:decoder:)","title":"func post<T>(with: Ether.RequestBody, usingEncoding: Ether.ParameterEncoding, responseFormat: T.Type, decoder: JSONDecoder) async throws -> Ether.Response<T>","type":"method"},{"path":"\/documentation\/ether\/etherroute\/postmultipartform(formitems:responseformat:decoder:)","title":"func postMultipartForm<T>(formItems: [String : Ether.FormValue], responseFormat: T.Type, decoder: JSONDecoder) async throws -> Ether.Response<T>","type":"method"},{"path":"\/documentation\/ether\/etherroute\/request(method:headers:parameters:body:responseformat:usingencoding:decoder:)","title":"func request<T>(method: Ether.Method, headers: Ether.Headers, parameters: Ether.Parameters, body: Ether.RequestBody?, responseFormat: T.Type?, usingEncoding: Ether.ParameterEncoding, decoder: JSONDecoder) async throws -> Ether.Response<T>","type":"method"}],"path":"\/documentation\/ether\/etherroute","title":"EtherRoute","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/ether\/ethertypedroute\/decodedtype","title":"DecodedType","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ether\/ethertypedroute\/get(parameters:decoder:)","title":"func get(parameters: Ether.Parameters, decoder: JSONDecoder) async throws -> DecodedType","type":"method"},{"path":"\/documentation\/ether\/ethertypedroute\/post(with:usingencoding:decoder:)","title":"func post(with: Ether.RequestBody, usingEncoding: Ether.ParameterEncoding, decoder: JSONDecoder) async throws -> Ether.Response<DecodedType>","type":"method"},{"path":"\/documentation\/ether\/ethertypedroute\/postmultipartform(formitems:decoder:)","title":"func postMultipartForm(formItems: [String : Ether.FormValue], decoder: JSONDecoder) async throws -> Ether.Response<DecodedType>","type":"method"},{"path":"\/documentation\/ether\/ethertypedroute\/request(method:headers:parameters:body:usingencoding:decoder:)","title":"func request(method: Ether.Method, headers: Ether.Headers, parameters: Ether.Parameters, body: Ether.RequestBody?, usingEncoding: Ether.ParameterEncoding, decoder: JSONDecoder) async throws -> Ether.Response<DecodedType>","type":"method"}],"path":"\/documentation\/ether\/ethertypedroute","title":"EtherTypedRoute","type":"protocol"},{"title":"Responses","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ether\/ether\/response\/allheaderfields","title":"var allHeaderFields: [AnyHashable : Any]","type":"property"},{"path":"\/documentation\/ether\/ether\/response\/data-swift.property","title":"var data: Data<T>","type":"property"},{"path":"\/documentation\/ether\/ether\/response\/localizedstringforstatuscode","title":"var localizedStringForStatusCode: String","type":"property"},{"path":"\/documentation\/ether\/ether\/response\/statuscode","title":"var statusCode: Int","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ether\/ether\/response\/data-swift.enum\/decoded(_:)","title":"case decoded(T)","type":"case"},{"path":"\/documentation\/ether\/ether\/response\/data-swift.enum\/raw(_:)","title":"case raw(Foundation.Data)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ether\/ether\/response\/data-swift.enum\/decoded","title":"var decoded: T?","type":"property"},{"path":"\/documentation\/ether\/ether\/response\/data-swift.enum\/raw","title":"var raw: Foundation.Data?","type":"property"}],"path":"\/documentation\/ether\/ether\/response\/data-swift.enum","title":"Ether.Response.Data","type":"enum"}],"path":"\/documentation\/ether\/ether\/response","title":"Ether.Response","type":"struct"},{"title":"Custom types","type":"groupMarker"},{"path":"\/documentation\/ether\/ether\/headers","title":"Ether.Headers","type":"typealias"},{"path":"\/documentation\/ether\/ether\/parameters","title":"Ether.Parameters","type":"typealias"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ether\/ether\/method\/connect","title":"case connect","type":"case"},{"path":"\/documentation\/ether\/ether\/method\/delete","title":"case delete","type":"case"},{"path":"\/documentation\/ether\/ether\/method\/get","title":"case get","type":"case"},{"path":"\/documentation\/ether\/ether\/method\/head","title":"case head","type":"case"},{"path":"\/documentation\/ether\/ether\/method\/options","title":"case options","type":"case"},{"path":"\/documentation\/ether\/ether\/method\/patch","title":"case patch","type":"case"},{"path":"\/documentation\/ether\/ether\/method\/post","title":"case post","type":"case"},{"path":"\/documentation\/ether\/ether\/method\/put","title":"case put","type":"case"},{"path":"\/documentation\/ether\/ether\/method\/trace","title":"case trace","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ether\/ether\/method\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ether\/ether\/method\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ether\/ether\/method\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ether\/ether\/method\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ether\/ether\/method\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/ether\/ether\/method\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/ether\/ether\/method","title":"Ether.Method","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ether\/ether\/requestbody\/encodable(_:encoder:)","title":"case encodable(Encodable, encoder: JSONEncoder)","type":"case"},{"path":"\/documentation\/ether\/ether\/requestbody\/plaintext(_:)","title":"case plainText(String)","type":"case"},{"path":"\/documentation\/ether\/ether\/requestbody\/rawdata(_:)","title":"case rawData(Data)","type":"case"}],"path":"\/documentation\/ether\/ether\/requestbody","title":"Ether.RequestBody","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ether\/ether\/formvalue\/multipartformitem\/init(filename:filedata:mimetype:)","title":"init(fileName: String, fileData: Data, mimeType: String)","type":"init"}],"path":"\/documentation\/ether\/ether\/formvalue\/multipartformitem","title":"Ether.FormValue.MultipartFormItem","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ether\/ether\/formvalue\/file(_:)","title":"case file(MultipartFormItem)","type":"case"},{"path":"\/documentation\/ether\/ether\/formvalue\/text(_:)","title":"case text(String)","type":"case"}],"path":"\/documentation\/ether\/ether\/formvalue","title":"Ether.FormValue","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ether\/ether\/parameterencoding\/custom(contenttype:)","title":"case custom(contentType: String)","type":"case"},{"path":"\/documentation\/ether\/ether\/parameterencoding\/gzip","title":"case gZip","type":"case"},{"path":"\/documentation\/ether\/ether\/parameterencoding\/json","title":"case json","type":"case"},{"path":"\/documentation\/ether\/ether\/parameterencoding\/urlquery","title":"case urlQuery","type":"case"}],"path":"\/documentation\/ether\/ether\/parameterencoding","title":"Ether.ParameterEncoding","type":"enum"},{"title":"Core","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/ether\/ether\/fetchable","title":"Ether.Fetchable","type":"typealias"},{"path":"\/documentation\/ether\/ether\/fetchablefilters","title":"Ether.FetchableFilters","type":"typealias"},{"path":"\/documentation\/ether\/ether\/pluralfetchable","title":"Ether.PluralFetchable","type":"typealias"},{"path":"\/documentation\/ether\/ether\/route","title":"Ether.Route","type":"typealias"},{"path":"\/documentation\/ether\/ether\/singularfetchable","title":"Ether.SingularFetchable","type":"typealias"},{"path":"\/documentation\/ether\/ether\/typedroute","title":"Ether.TypedRoute","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/ether\/ether\/domainheaders","title":"static var domainHeaders: [String : Headers]","type":"property"},{"path":"\/documentation\/ether\/ether\/logrequestsfordebugbuilds","title":"static var logRequestsForDebugBuilds: Bool","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/ether\/ether\/get(typedroute:parameters:decoder:)","title":"static func get<T>(typedRoute: T, parameters: Parameters, decoder: JSONDecoder) async throws -> T.DecodedType","type":"method"},{"path":"\/documentation\/ether\/ether\/post(typedroute:with:usingencoding:decoder:)","title":"static func post<T>(typedRoute: T, with: RequestBody, usingEncoding: ParameterEncoding, decoder: JSONDecoder) async throws -> Response<T.DecodedType>","type":"method"},{"path":"\/documentation\/ether\/ether\/postmultipartform(typedroute:formitems:decoder:)","title":"static func postMultipartForm<T>(typedRoute: T, formItems: [String : FormValue], decoder: JSONDecoder) async throws -> Response<T.DecodedType>","type":"method"},{"path":"\/documentation\/ether\/ether\/request(typedroute:method:headers:parameters:body:usingencoding:decoder:)","title":"static func request<T>(typedRoute: T, method: Method, headers: Headers, parameters: Parameters, body: RequestBody?, usingEncoding: ParameterEncoding, decoder: JSONDecoder) async throws -> Response<T.DecodedType>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ether\/ether\/error\/badqueryitem(_:)","title":"case badQueryItem(URLQueryItem)","type":"case"},{"path":"\/documentation\/ether\/ether\/error\/badresponsecode(_:)","title":"case badResponseCode(Int)","type":"case"},{"path":"\/documentation\/ether\/ether\/error\/badurl(_:)","title":"case badURL(String?)","type":"case"},{"path":"\/documentation\/ether\/ether\/error\/jsondecodingfailed(_:)","title":"case jsonDecodingFailed(DecodingError?)","type":"case"},{"path":"\/documentation\/ether\/ether\/error\/jsonencodingfailed(_:)","title":"case jsonEncodingFailed(EncodingError?)","type":"case"},{"path":"\/documentation\/ether\/ether\/error\/miscresponseissue","title":"case miscResponseIssue","type":"case"},{"path":"\/documentation\/ether\/ether\/error\/requestfailed","title":"case requestFailed","type":"case"},{"path":"\/documentation\/ether\/ether\/error\/responsenothttp","title":"case responseNotHTTP","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ether\/ether\/error\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/ether\/ether\/error\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/ether\/ether\/error\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ether\/ether\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/ether\/ether\/error\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ether\/ether\/error\/helpanchor","title":"var helpAnchor: String?","type":"property"}],"path":"\/documentation\/ether\/ether\/error\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/ether\/ether\/error","title":"Ether.Error","type":"enum"}],"path":"\/documentation\/ether\/ether","title":"Ether","type":"struct"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ether\/foundation\/url\/asurl","title":"var asURL: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ether\/foundation\/url\/get(type:parameters:decoder:)","title":"func get<T>(type: T.Type, parameters: Ether.Parameters, decoder: JSONDecoder) async throws -> T","type":"method"},{"path":"\/documentation\/ether\/foundation\/url\/post(with:usingencoding:responseformat:decoder:)","title":"func post<T>(with: Ether.RequestBody, usingEncoding: Ether.ParameterEncoding, responseFormat: T.Type, decoder: JSONDecoder) async throws -> Ether.Response<T>","type":"method"},{"path":"\/documentation\/ether\/foundation\/url\/postmultipartform(formitems:responseformat:decoder:)","title":"func postMultipartForm<T>(formItems: [String : Ether.FormValue], responseFormat: T.Type, decoder: JSONDecoder) async throws -> Ether.Response<T>","type":"method"},{"path":"\/documentation\/ether\/foundation\/url\/request(method:headers:parameters:body:responseformat:usingencoding:decoder:)","title":"func request<T>(method: Ether.Method, headers: Ether.Headers, parameters: Ether.Parameters, body: Ether.RequestBody?, responseFormat: T.Type?, usingEncoding: Ether.ParameterEncoding, decoder: JSONDecoder) async throws -> Ether.Response<T>","type":"method"}],"path":"\/documentation\/ether\/foundation\/url\/etherroute-implementations","title":"EtherRoute Implementations","type":"symbol"}],"path":"\/documentation\/ether\/foundation\/url","title":"URL","type":"extension"}],"path":"\/documentation\/ether\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ether\/swift\/string\/asurl","title":"var asURL: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ether\/swift\/string\/get(type:parameters:decoder:)","title":"func get<T>(type: T.Type, parameters: Ether.Parameters, decoder: JSONDecoder) async throws -> T","type":"method"},{"path":"\/documentation\/ether\/swift\/string\/post(with:usingencoding:responseformat:decoder:)","title":"func post<T>(with: Ether.RequestBody, usingEncoding: Ether.ParameterEncoding, responseFormat: T.Type, decoder: JSONDecoder) async throws -> Ether.Response<T>","type":"method"},{"path":"\/documentation\/ether\/swift\/string\/postmultipartform(formitems:responseformat:decoder:)","title":"func postMultipartForm<T>(formItems: [String : Ether.FormValue], responseFormat: T.Type, decoder: JSONDecoder) async throws -> Ether.Response<T>","type":"method"},{"path":"\/documentation\/ether\/swift\/string\/request(method:headers:parameters:body:responseformat:usingencoding:decoder:)","title":"func request<T>(method: Ether.Method, headers: Ether.Headers, parameters: Ether.Parameters, body: Ether.RequestBody?, responseFormat: T.Type?, usingEncoding: Ether.ParameterEncoding, decoder: JSONDecoder) async throws -> Ether.Response<T>","type":"method"}],"path":"\/documentation\/ether\/swift\/string\/etherroute-implementations","title":"EtherRoute Implementations","type":"symbol"}],"path":"\/documentation\/ether\/swift\/string","title":"String","type":"extension"}],"path":"\/documentation\/ether\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/ether","title":"Ether","type":"module"},{"children":[{"title":"Introduction","type":"groupMarker"},{"title":"Setting Up Routes","type":"groupMarker"},{"path":"\/tutorials\/ether\/tutorialroutes","title":"Setting Up Your Routes","type":"project"}],"path":"\/tutorials\/request-tutorial-toc","title":"Welcome to Ether!","type":"overview"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}