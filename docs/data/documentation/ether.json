{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s say you want to go fetch an instance of "},{"type":"codeVoice","code":"Blade"},{"type":"text","text":" with ID "},{"type":"codeVoice","code":"1"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Normally, you’d write some code looking like this:"}]},{"type":"codeListing","syntax":"swift","code":["let url = URL(string: \"https:\/\/xcapi.com\/blades\")! \/\/ Someone should make this API…","","var request = URLRequest(url: url)","request.httpMethod = \"GET\"","","let task = URLSession.shared.dataTask(with: request) { data, response, error in","    guard error == nil else {","        \/\/ Handle error…","        return","    }","    ","    do {","        if let pyra = try JSONDecoder().decode(Blade.self, from: data) {","            \/\/ It's about time!","        }","    } catch {","        \/\/ Handle error…","    }","}","","task.resume()"]},{"type":"paragraph","inlineContent":[{"type":"emphasis","inlineContent":[{"type":"text","text":"…Yikes."}]},{"type":"text","text":" Are we cavemen?? Surely we can do better."}]},{"anchor":"GET","level":2,"type":"heading","text":"GET"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s replace this GET request using Ether:"}]},{"type":"codeListing","syntax":"swift","code":["let pyra = await Ether.get(route: Routes.blade(id: 1),","                                  type: Blade.self)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Yep, Ether will not only perform the request for you, in one call, using async\/await, but it will even decode the result into the "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" type you want to use."}]},{"anchor":"POST","level":2,"type":"heading","text":"POST"},{"type":"paragraph","inlineContent":[{"type":"text","text":"What about "},{"type":"codeVoice","code":"POST"},{"type":"text","text":"s?"}]},{"type":"codeListing","syntax":"swift","code":["try? await Ether.post(route: Routes.time,","                      with: reyn)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Dead simple."}]},{"anchor":"Custom-Requests","level":2,"type":"heading","text":"Custom Requests"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Okay, but what about those times when you need to send a "},{"type":"codeVoice","code":"PUT"},{"type":"text","text":" request the server, using a dictionary "},{"type":"emphasis","inlineContent":[{"type":"text","text":"without"}]},{"type":"text","text":" a corresponding struct, "},{"type":"emphasis","inlineContent":[{"type":"text","text":"AND"}]},{"type":"text","text":" it needs GZip encoding?"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"…sounds "},{"type":"emphasis","inlineContent":[{"type":"text","text":"awfully"}]},{"type":"text","text":" contrived, but hey, Ether’s got you covered here as well:"}]},{"type":"codeListing","syntax":"swift","code":["let result = try? await Ether.request(route: Routes.locations,","                                      method: .put,","                                      parameters: [\"Dunban\": \"over there\"],","                                      usingEncoding: .gZip,","                                      showAlertIfFailed: .ifUserHasntMuted)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Enjoy!"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/ether"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Ether\/documentation\/Ether","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"Ether","title":"Ether","symbolKind":"module","role":"collection","modules":[{"name":"Ether"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Firing off network requests","identifiers":["doc:\/\/Ether\/documentation\/Ether\/Ether\/get(route:type:parameters:decoder:showAlertIfFailed:)","doc:\/\/Ether\/documentation\/Ether\/Ether\/post(route:with:usingEncoding:responseFormat:decoder:showAlertIfFailed:)","doc:\/\/Ether\/documentation\/Ether\/Ether\/postMultipartForm(route:formItems:responseFormat:decoder:showAlertIfFailed:)","doc:\/\/Ether\/documentation\/Ether\/Ether\/request(route:method:headers:parameters:body:responseFormat:usingEncoding:decoder:showAlertIfFailed:)"]},{"title":"Routing","identifiers":["doc:\/\/Ether\/documentation\/Ether\/EtherRoute"]},{"title":"Responses","identifiers":["doc:\/\/Ether\/documentation\/Ether\/Ether\/Response"]},{"title":"Articles","identifiers":["doc:\/\/Ether\/documentation\/Ether\/Usage"],"generated":true},{"title":"Protocols","identifiers":["doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute"]},{"title":"Structures","identifiers":["doc:\/\/Ether\/documentation\/Ether\/Ether"]},{"title":"Type Aliases","identifiers":["doc:\/\/Ether\/documentation\/Ether\/EtherFetchable"]}],"references":{"doc://Ether/documentation/Ether/Ether/postMultipartForm(route:formItems:responseFormat:decoder:showAlertIfFailed:)":{"role":"symbol","title":"postMultipartForm(route:formItems:responseFormat:decoder:showAlertIfFailed:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"postMultipartForm"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"route"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Route","preciseIdentifier":"s:5EtherAAV5Routea"},{"kind":"text","text":", "},{"kind":"externalParam","text":"formItems"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FormValue","preciseIdentifier":"s:5EtherAAV9FormValueO"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"responseFormat"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"decoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"showAlertIfFailed"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"AlertBehavior","preciseIdentifier":"s:5EtherAAV13AlertBehaviorO"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:5EtherAAV8ResponseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Fires off a multipart POST request to the given URL."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/postMultipartForm(route:formItems:responseFormat:decoder:showAlertIfFailed:)","kind":"symbol","type":"topic","url":"\/documentation\/ether\/ether\/postmultipartform(route:formitems:responseformat:decoder:showalertiffailed:)"},"doc://Ether/documentation/Ether/Ether/get(route:type:parameters:decoder:showAlertIfFailed:)":{"role":"symbol","title":"get(route:type:parameters:decoder:showAlertIfFailed:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"route"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Route","preciseIdentifier":"s:5EtherAAV5Routea"},{"kind":"text","text":", "},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"parameters"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Parameters","preciseIdentifier":"s:5EtherAAV10Parametersa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"decoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"showAlertIfFailed"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"AlertBehavior","preciseIdentifier":"s:5EtherAAV13AlertBehaviorO"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"abstract":[{"type":"text","text":"Fires off a GET request to fetch data."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/get(route:type:parameters:decoder:showAlertIfFailed:)","kind":"symbol","type":"topic","url":"\/documentation\/ether\/ether\/get(route:type:parameters:decoder:showalertiffailed:)"},"doc://Ether/documentation/Ether/Ether/Response":{"role":"symbol","title":"Ether.Response","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"abstract":[{"type":"text","text":"The data and metadata associated with the response to an HTTP protocol URL load request."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Response","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Response"}],"url":"\/documentation\/ether\/ether\/response"},"doc://Ether/documentation/Ether/EtherTypedRoute":{"role":"symbol","title":"EtherTypedRoute","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherTypedRoute"}],"abstract":[],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EtherTypedRoute"}],"url":"\/documentation\/ether\/ethertypedroute"},"doc://Ether/documentation/Ether/EtherPluralFetchable":{"role":"symbol","title":"EtherPluralFetchable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherPluralFetchable"}],"abstract":[{"type":"text","text":"Types conforming to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"},{"type":"text","text":" assert that their APIs provide a way to get multiple instances back, optionally filtered by fields specified in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EtherPluralFetchable"}],"url":"\/documentation\/ether\/etherpluralfetchable"},"doc://Ether/documentation/Ether/Ether":{"role":"symbol","title":"Ether","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Ether"}],"abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Ether"}],"url":"\/documentation\/ether\/ether"},"doc://Ether/documentation/Ether/EtherFetchable":{"role":"symbol","title":"EtherFetchable","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherFetchable"}],"abstract":[],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EtherFetchable"}],"url":"\/documentation\/ether\/etherfetchable"},"doc://Ether/documentation/Ether/EtherRoute":{"role":"symbol","title":"EtherRoute","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherRoute"}],"abstract":[{"type":"text","text":"A custom protocol to which host apps can conform."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EtherRoute"}],"url":"\/documentation\/ether\/etherroute"},"doc://Ether/documentation/Ether":{"role":"collection","title":"Ether","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}],"identifier":"doc:\/\/Ether\/documentation\/Ether","kind":"symbol","type":"topic","url":"\/documentation\/ether"},"doc://Ether/documentation/Ether/Ether/request(route:method:headers:parameters:body:responseFormat:usingEncoding:decoder:showAlertIfFailed:)":{"role":"symbol","title":"request(route:method:headers:parameters:body:responseFormat:usingEncoding:decoder:showAlertIfFailed:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"request"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"route"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Route","preciseIdentifier":"s:5EtherAAV5Routea"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Method","preciseIdentifier":"s:5EtherAAV6MethodO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Headers","preciseIdentifier":"s:5EtherAAV7Headersa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"parameters"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Parameters","preciseIdentifier":"s:5EtherAAV10Parametersa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"RequestBody","preciseIdentifier":"s:5EtherAAV11RequestBodyO"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"responseFormat"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type?, "},{"kind":"externalParam","text":"usingEncoding"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ParameterEncoding","preciseIdentifier":"s:5EtherAAV17ParameterEncodingO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"decoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"showAlertIfFailed"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"AlertBehavior","preciseIdentifier":"s:5EtherAAV13AlertBehaviorO"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:5EtherAAV8ResponseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Fires off a custom HTTP request."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/request(route:method:headers:parameters:body:responseFormat:usingEncoding:decoder:showAlertIfFailed:)","kind":"symbol","type":"topic","url":"\/documentation\/ether\/ether\/request(route:method:headers:parameters:body:responseformat:usingencoding:decoder:showalertiffailed:)"},"doc://Ether/documentation/Ether/Usage":{"role":"collectionGroup","title":"Usage","abstract":[{"type":"text","text":"There are several ways to use Ether. This article will help you decide which way to use, and in which cases."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Usage","kind":"article","type":"topic","url":"\/documentation\/ether\/usage"},"doc://Ether/documentation/Ether/EtherSingularFetchable":{"role":"symbol","title":"EtherSingularFetchable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherSingularFetchable"}],"abstract":[{"type":"text","text":"Types conforming to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"},{"type":"text","text":" assert that their APIs provide a way to get single instances back, usually by providing an identifier."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EtherSingularFetchable"}],"url":"\/documentation\/ether\/ethersingularfetchable"},"doc://Ether/documentation/Ether/Ether/post(route:with:usingEncoding:responseFormat:decoder:showAlertIfFailed:)":{"role":"symbol","title":"post(route:with:usingEncoding:responseFormat:decoder:showAlertIfFailed:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"post"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"route"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Route","preciseIdentifier":"s:5EtherAAV5Routea"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"RequestBody","preciseIdentifier":"s:5EtherAAV11RequestBodyO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"usingEncoding"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ParameterEncoding","preciseIdentifier":"s:5EtherAAV17ParameterEncodingO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"responseFormat"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"decoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"showAlertIfFailed"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"AlertBehavior","preciseIdentifier":"s:5EtherAAV13AlertBehaviorO"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:5EtherAAV8ResponseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Fires off a POST request to send data."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/post(route:with:usingEncoding:responseFormat:decoder:showAlertIfFailed:)","kind":"symbol","type":"topic","url":"\/documentation\/ether\/ether\/post(route:with:usingencoding:responseformat:decoder:showalertiffailed:)"},"doc://Ether/documentation/Ether/Ether/FetchableFilters":{"role":"symbol","title":"Ether.FetchableFilters","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"FetchableFilters"}],"abstract":[{"type":"text","text":"A set of filters that can be used to narrow down results of queries. May or may not be supported by the API endpoint you’re calling."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FetchableFilters"}],"url":"\/documentation\/ether\/ether\/fetchablefilters"}}}