{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable\/pluralRoute(filters:)"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"pluralRoute"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"filters"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5EtherAAV","text":"Ether","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","kind":"typeIdentifier","text":"FetchableFilters","preciseIdentifier":"s:5EtherAAV16FetchableFiltersa"},{"text":"?) -> ","kind":"text"},{"text":"EtherRoute","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A5RouteP"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"An optional set of filters. See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","type":"reference"},{"text":" for more information.","type":"text"}]}],"name":"filters"}],"kind":"parameters"},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"type":"text","text":" corresponding to the type and (optionally) any provided filters."}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"For instance, suppose your API is for a list of all the user’s friends.","type":"text"},{"type":"text","text":" "},{"text":"It may look something like this:","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"\"https:\/\/site.com\/friends\""}]},{"type":"paragraph","inlineContent":[{"text":"In that case, this function should simply return that exact string.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, if the API has a search friends feature that you’d like to support with Ether, you’d want to look at the filters."}]},{"inlineContent":[{"type":"text","text":"Suppose that API’s search feature is represented as a URL query:"},{"type":"text","text":" "},{"type":"codeVoice","code":"\"https:\/\/site.com\/friends?search=query\""}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"You’d then change your return to look like this:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["var query = \"\"","","if let searchQuery = filters?.searchQuery {","    query = \"search=\" + searchQuery","}","","return \"https:\/\/site.com\/friends\" + query"]}],"kind":"content"}],"metadata":{"required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"pluralRoute"},{"text":"(","kind":"text"},{"text":"filters","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Ether","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV"},{"text":".","kind":"text"},{"text":"FetchableFilters","preciseIdentifier":"s:5EtherAAV16FetchableFiltersa","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"EtherRoute","kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A5RouteP"}],"modules":[{"name":"Ether"}],"externalID":"s:5Ether0A15PluralFetchableP11pluralRoute7filtersAA0aE0_pSSSg11searchQuery_SNy10Foundation4DateVGSg9dateRangetSg_tFZ","title":"pluralRoute(filters:)","roleHeading":"Type Method","symbolKind":"method"},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ether\/etherpluralfetchable\/pluralroute(filters:)"]}],"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether","doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"]]},"kind":"symbol","sections":[],"abstract":[{"text":"The route used to request multiple instances of this type.","type":"text"},{"type":"text","text":" "},{"text":"This is commonly used in index pages, search results, etc.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Set this up to return the proper route endpoints, along with supporting filters (if desired and appropriate for the API)."}],"references":{"doc://Ether/documentation/Ether/Ether/FetchableFilters":{"url":"\/documentation\/ether\/ether\/fetchablefilters","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FetchableFilters"}],"kind":"symbol","abstract":[{"type":"text","text":"A set of filters that can be used to narrow down results of queries. May or may not be supported by the API endpoint you’re calling."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","type":"topic","title":"Ether.FetchableFilters","role":"symbol","navigatorTitle":[{"text":"FetchableFilters","kind":"identifier"}]},"doc://Ether/documentation/Ether/EtherPluralFetchable/pluralRoute(filters:)":{"url":"\/documentation\/ether\/etherpluralfetchable\/pluralroute(filters:)","type":"topic","title":"pluralRoute(filters:)","required":true,"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"pluralRoute"},{"kind":"text","text":"("},{"kind":"externalParam","text":"filters"},{"kind":"text","text":": "},{"text":"Ether","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5EtherAAV16FetchableFiltersa","text":"FetchableFilters","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:5Ether0A5RouteP","text":"EtherRoute","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable\/pluralRoute(filters:)","abstract":[{"type":"text","text":"The route used to request multiple instances of this type."},{"text":" ","type":"text"},{"type":"text","text":"This is commonly used in index pages, search results, etc."},{"text":" ","type":"text"},{"type":"text","text":"Set this up to return the proper route endpoints, along with supporting filters (if desired and appropriate for the API)."}],"role":"symbol"},"doc://Ether/documentation/Ether":{"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether","role":"collection","url":"\/documentation\/ether","abstract":[{"text":"Welcome to easy, clean, Swifty networking!","type":"text"}],"kind":"symbol","title":"Ether"},"doc://Ether/documentation/Ether/EtherRoute":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherRoute"}],"title":"EtherRoute","role":"symbol","type":"topic","url":"\/documentation\/ether\/etherroute","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","navigatorTitle":[{"text":"EtherRoute","kind":"identifier"}],"abstract":[{"type":"text","text":"A custom protocol to which host apps can conform."}]},"doc://Ether/documentation/Ether/EtherPluralFetchable":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"EtherPluralFetchable","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"EtherPluralFetchable","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","url":"\/documentation\/ether\/etherpluralfetchable","abstract":[{"type":"text","text":"Types conforming to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"},{"text":" assert that their APIs provide a way to get multiple instances back, optionally filtered by fields specified in ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","isActive":true}],"title":"EtherPluralFetchable","kind":"symbol","type":"topic"},"doc://Ether/documentation/Ether/Ether":{"role":"symbol","title":"Ether","type":"topic","abstract":[{"text":"The core of Ether. All the core functions and types are namespaced under this.","type":"text"}],"url":"\/documentation\/ether\/ether","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Ether"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Ether","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether"}}}