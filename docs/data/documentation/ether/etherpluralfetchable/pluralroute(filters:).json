{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pluralRoute"},{"kind":"text","text":"("},{"kind":"externalParam","text":"filters"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","preciseIdentifier":"s:5EtherAAV","text":"Ether"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","preciseIdentifier":"s:5EtherAAV16FetchableFiltersa","text":"FetchableFilters"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","preciseIdentifier":"s:5Ether0A5RouteP","text":"EtherRoute"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"filters","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An optional set of filters. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters"},{"type":"text","text":" for more information."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"type":"text","text":" corresponding to the type and (optionally) any provided filters."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance, suppose your API is for a list of all the user’s friends."},{"type":"text","text":" "},{"type":"text","text":"It may look something like this:"}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"\"https:\/\/site.com\/friends\""}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In that case, this function should simply return that exact string."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, if the API has a search friends feature that you’d like to support with Ether, you’d want to look at the filters."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Suppose that API’s search feature is represented as a URL query:"},{"type":"text","text":" "},{"type":"codeVoice","code":"\"https:\/\/site.com\/friends?search=query\""}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You’d then change your return to look like this:"}]},{"type":"codeListing","syntax":null,"code":["var query = \"\"","","if let searchQuery = filters?.searchQuery {","    query = \"search=\" + searchQuery","}","","return \"https:\/\/site.com\/friends\" + query"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/ether\/etherpluralfetchable\/pluralroute(filters:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable\/pluralRoute(filters:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The route used to request multiple instances of this type."},{"type":"text","text":" "},{"type":"text","text":"This is commonly used in index pages, search results, etc."},{"type":"text","text":" "},{"type":"text","text":"Set this up to return the proper route endpoints, along with supporting filters (if desired and appropriate for the API)."}],"kind":"symbol","metadata":{"role":"symbol","title":"pluralRoute(filters:)","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pluralRoute"},{"kind":"text","text":"("},{"kind":"externalParam","text":"filters"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FetchableFilters","preciseIdentifier":"s:5EtherAAV16FetchableFiltersa"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"EtherRoute","preciseIdentifier":"s:5Ether0A5RouteP"}],"symbolKind":"method","externalID":"s:5Ether0A15PluralFetchableP11pluralRoute7filtersAA0aE0_pSSSg11searchQuery_SNy10Foundation4DateVGSg9dateRangetSg_tFZ","required":true,"modules":[{"name":"Ether"}]},"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether","doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"]]},"references":{"doc://Ether/documentation/Ether/EtherRoute":{"role":"symbol","title":"EtherRoute","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherRoute"}],"abstract":[{"type":"text","text":"A custom protocol to which host apps can conform."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EtherRoute"}],"url":"\/documentation\/ether\/etherroute"},"doc://Ether/documentation/Ether/EtherPluralFetchable":{"role":"symbol","title":"EtherPluralFetchable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherPluralFetchable"}],"abstract":[{"type":"text","text":"Types conforming to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"},{"type":"text","text":" assert that their APIs provide a way to get multiple instances back, optionally filtered by fields specified in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EtherPluralFetchable"}],"url":"\/documentation\/ether\/etherpluralfetchable"},"doc://Ether/documentation/Ether/Ether":{"role":"symbol","title":"Ether","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Ether"}],"abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Ether"}],"url":"\/documentation\/ether\/ether"},"doc://Ether/documentation/Ether/Ether/FetchableFilters":{"role":"symbol","title":"Ether.FetchableFilters","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"FetchableFilters"}],"abstract":[{"type":"text","text":"A set of filters that can be used to narrow down results of queries. May or may not be supported by the API endpoint you’re calling."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FetchableFilters"}],"url":"\/documentation\/ether\/ether\/fetchablefilters"},"doc://Ether/documentation/Ether/EtherPluralFetchable/pluralRoute(filters:)":{"role":"symbol","title":"pluralRoute(filters:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pluralRoute"},{"kind":"text","text":"("},{"kind":"externalParam","text":"filters"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FetchableFilters","preciseIdentifier":"s:5EtherAAV16FetchableFiltersa"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"EtherRoute","preciseIdentifier":"s:5Ether0A5RouteP"}],"abstract":[{"type":"text","text":"The route used to request multiple instances of this type."},{"type":"text","text":" "},{"type":"text","text":"This is commonly used in index pages, search results, etc."},{"type":"text","text":" "},{"type":"text","text":"Set this up to return the proper route endpoints, along with supporting filters (if desired and appropriate for the API)."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable\/pluralRoute(filters:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/ether\/etherpluralfetchable\/pluralroute(filters:)"},"doc://Ether/documentation/Ether":{"role":"collection","title":"Ether","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}],"identifier":"doc:\/\/Ether\/documentation\/Ether","kind":"symbol","type":"topic","url":"\/documentation\/ether"}}}