{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pluralRoute","kind":"identifier"},{"text":"(","kind":"text"},{"text":"filters","kind":"externalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5EtherAAV16FetchableFiltersa","text":"FetchableFilters","kind":"typeIdentifier","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:5Ether0A5RouteP","kind":"typeIdentifier","text":"EtherRoute","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"An optional set of filters. See ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters"},{"text":" for more information.","type":"text"}],"type":"paragraph"}],"name":"filters"}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"text":" corresponding to the type and (optionally) any provided filters.","type":"text"}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"For instance, suppose your API is for a list of all the user’s friends.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"It may look something like this:"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"code":"\"https:\/\/site.com\/friends\"","type":"codeVoice"}]},{"inlineContent":[{"text":"In that case, this function should simply return that exact string.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, if the API has a search friends feature that you’d like to support with Ether, you’d want to look at the filters."}]},{"inlineContent":[{"text":"Suppose that API’s search feature is represented as a URL query:","type":"text"},{"type":"text","text":" "},{"code":"\"https:\/\/site.com\/friends?search=query\"","type":"codeVoice"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You’d then change your return to look like this:"}]},{"type":"codeListing","syntax":null,"code":["var query = \"\"","","if let searchQuery = filters?.searchQuery {","    query = \"search=\" + searchQuery","}","","return \"https:\/\/site.com\/friends\" + query"]}]}],"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether","doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"The route used to request multiple instances of this type."},{"text":" ","type":"text"},{"type":"text","text":"This is commonly used in index pages, search results, etc."},{"type":"text","text":" "},{"type":"text","text":"Set this up to return the proper route endpoints, along with supporting filters (if desired and appropriate for the API)."}],"identifier":{"url":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable\/pluralRoute(filters:)","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ether\/etherpluralfetchable\/pluralroute(filters:)"]}],"sections":[],"metadata":{"title":"pluralRoute(filters:)","roleHeading":"Type Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pluralRoute"},{"kind":"text","text":"("},{"kind":"externalParam","text":"filters"},{"text":": ","kind":"text"},{"text":"Ether","preciseIdentifier":"s:5EtherAAV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"FetchableFilters","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV16FetchableFiltersa"},{"text":"?) -> ","kind":"text"},{"text":"EtherRoute","kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A5RouteP"}],"required":true,"externalID":"s:5Ether0A15PluralFetchableP11pluralRoute7filtersAA0aE0_pSSSg11searchQuery_SNy10Foundation4DateVGSg9dateRangetSg_tFZ","role":"symbol","modules":[{"name":"Ether"}]},"references":{"doc://Ether/documentation/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether","role":"collection","title":"Ether","kind":"symbol","url":"\/documentation\/ether","type":"topic","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}]},"doc://Ether/documentation/Ether/EtherPluralFetchable":{"kind":"symbol","abstract":[{"type":"text","text":"Types conforming to "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","isActive":true},{"type":"text","text":" assert that their APIs provide a way to get multiple instances back, optionally filtered by fields specified in "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","isActive":true}],"navigatorTitle":[{"kind":"identifier","text":"EtherPluralFetchable"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EtherPluralFetchable"}],"title":"EtherPluralFetchable","url":"\/documentation\/ether\/etherpluralfetchable"},"doc://Ether/documentation/Ether/EtherRoute":{"navigatorTitle":[{"text":"EtherRoute","kind":"identifier"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","title":"EtherRoute","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EtherRoute"}],"abstract":[{"type":"text","text":"A custom protocol to which host apps can conform."}],"url":"\/documentation\/ether\/etherroute"},"doc://Ether/documentation/Ether/Ether":{"url":"\/documentation\/ether\/ether","title":"Ether","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Ether","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","navigatorTitle":[{"text":"Ether","kind":"identifier"}],"role":"symbol"},"doc://Ether/documentation/Ether/EtherPluralFetchable/pluralRoute(filters:)":{"title":"pluralRoute(filters:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pluralRoute"},{"kind":"text","text":"("},{"kind":"externalParam","text":"filters"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5EtherAAV","kind":"typeIdentifier","text":"Ether"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV16FetchableFiltersa","text":"FetchableFilters"},{"kind":"text","text":"?) -> "},{"text":"EtherRoute","preciseIdentifier":"s:5Ether0A5RouteP","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable\/pluralRoute(filters:)","required":true,"kind":"symbol","role":"symbol","abstract":[{"text":"The route used to request multiple instances of this type.","type":"text"},{"text":" ","type":"text"},{"text":"This is commonly used in index pages, search results, etc.","type":"text"},{"type":"text","text":" "},{"text":"Set this up to return the proper route endpoints, along with supporting filters (if desired and appropriate for the API).","type":"text"}],"url":"\/documentation\/ether\/etherpluralfetchable\/pluralroute(filters:)"},"doc://Ether/documentation/Ether/Ether/FetchableFilters":{"kind":"symbol","title":"Ether.FetchableFilters","type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","url":"\/documentation\/ether\/ether\/fetchablefilters","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FetchableFilters","kind":"identifier"}],"abstract":[{"type":"text","text":"A set of filters that can be used to narrow down results of queries. May or may not be supported by the API endpoint you’re calling."}],"navigatorTitle":[{"text":"FetchableFilters","kind":"identifier"}],"role":"symbol"}}}