{"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"pluralRoute"},{"text":"(","kind":"text"},{"text":"filters","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV16FetchableFiltersa","text":"FetchableFilters"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A5RouteP","text":"EtherRoute"}],"role":"symbol","modules":[{"name":"Ether"}],"roleHeading":"Type Method","externalID":"s:5Ether0A15PluralFetchableP11pluralRoute7filtersAA0aE0_pSSSg11searchQuery_SNy10Foundation4DateVGSg9dateRangetSg_tFZ","required":true,"title":"pluralRoute(filters:)","symbolKind":"method"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ether\/etherpluralfetchable\/pluralroute(filters:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable\/pluralRoute(filters:)"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pluralRoute","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"filters"},{"text":": ","kind":"text"},{"text":"Ether","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","preciseIdentifier":"s:5EtherAAV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"FetchableFilters","preciseIdentifier":"s:5EtherAAV16FetchableFiltersa","kind":"typeIdentifier","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:5Ether0A5RouteP","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","text":"EtherRoute","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"filters","content":[{"type":"paragraph","inlineContent":[{"text":"An optional set of filters. See ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","isActive":true},{"text":" for more information.","type":"text"}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true},{"type":"text","text":" corresponding to the type and (optionally) any provided filters."}],"type":"paragraph"}]},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance, suppose your API is for a list of all the user’s friends."},{"text":" ","type":"text"},{"type":"text","text":"It may look something like this:"}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"\"https:\/\/site.com\/friends\""}]},{"type":"paragraph","inlineContent":[{"text":"In that case, this function should simply return that exact string.","type":"text"}]},{"inlineContent":[{"text":"However, if the API has a search friends feature that you’d like to support with Ether, you’d want to look at the filters.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Suppose that API’s search feature is represented as a URL query:","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"\"https:\/\/site.com\/friends?search=query\""}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"You’d then change your return to look like this:","type":"text"}]},{"syntax":null,"type":"codeListing","code":["var query = \"\"","","if let searchQuery = filters?.searchQuery {","    query = \"search=\" + searchQuery","}","","return \"https:\/\/site.com\/friends\" + query"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether","doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"]]},"abstract":[{"type":"text","text":"The route used to request multiple instances of this type."},{"type":"text","text":" "},{"text":"This is commonly used in index pages, search results, etc.","type":"text"},{"text":" ","type":"text"},{"text":"Set this up to return the proper route endpoints, along with supporting filters (if desired and appropriate for the API).","type":"text"}],"references":{"doc://Ether/documentation/Ether":{"url":"\/documentation\/ether","type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether","title":"Ether","role":"collection","abstract":[{"text":"Welcome to easy, clean, Swifty networking!","type":"text"}],"kind":"symbol"},"doc://Ether/documentation/Ether/EtherPluralFetchable/pluralRoute(filters:)":{"abstract":[{"type":"text","text":"The route used to request multiple instances of this type."},{"type":"text","text":" "},{"type":"text","text":"This is commonly used in index pages, search results, etc."},{"text":" ","type":"text"},{"text":"Set this up to return the proper route endpoints, along with supporting filters (if desired and appropriate for the API).","type":"text"}],"role":"symbol","type":"topic","title":"pluralRoute(filters:)","kind":"symbol","required":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable\/pluralRoute(filters:)","url":"\/documentation\/ether\/etherpluralfetchable\/pluralroute(filters:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"pluralRoute","kind":"identifier"},{"kind":"text","text":"("},{"text":"filters","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV","text":"Ether"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"FetchableFilters","preciseIdentifier":"s:5EtherAAV16FetchableFiltersa"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A5RouteP","text":"EtherRoute"}]},"doc://Ether/documentation/Ether/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/ether\/ether","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Ether","kind":"identifier"}],"navigatorTitle":[{"text":"Ether","kind":"identifier"}],"abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"title":"Ether"},"doc://Ether/documentation/Ether/Ether/FetchableFilters":{"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","url":"\/documentation\/ether\/ether\/fetchablefilters","title":"Ether.FetchableFilters","kind":"symbol","abstract":[{"type":"text","text":"A set of filters that can be used to narrow down results of queries. May or may not be supported by the API endpoint you’re calling."}],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FetchableFilters"}],"role":"symbol","navigatorTitle":[{"text":"FetchableFilters","kind":"identifier"}]},"doc://Ether/documentation/Ether/EtherPluralFetchable":{"abstract":[{"type":"text","text":"Types conforming to "},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","type":"reference"},{"type":"text","text":" assert that their APIs provide a way to get multiple instances back, optionally filtered by fields specified in "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters"}],"role":"symbol","type":"topic","title":"EtherPluralFetchable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EtherPluralFetchable"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","url":"\/documentation\/ether\/etherpluralfetchable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"EtherPluralFetchable","kind":"identifier"}]},"doc://Ether/documentation/Ether/EtherRoute":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A custom protocol to which host apps can conform."}],"url":"\/documentation\/ether\/etherroute","title":"EtherRoute","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherRoute"}],"navigatorTitle":[{"kind":"identifier","text":"EtherRoute"}],"role":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"}}}