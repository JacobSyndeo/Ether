{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When using Ether, you may have your own coding style and\/or preferences. You may prefer calling "},{"type":"codeVoice","code":"Ether"},{"type":"text","text":" directly. You may instead prefer to call from a "},{"type":"codeVoice","code":"Route"},{"type":"text","text":" or a "},{"type":"codeVoice","code":"TypedRoute"},{"type":"text","text":". In other cases, you may prefer to use the "},{"type":"codeVoice","code":"Fetchable"},{"type":"text","text":" protocol. Ether supports all of these styles."}]},{"anchor":"Usage-Styles","level":2,"type":"heading","text":"Usage Styles"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are four main ways to use Ether:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Directly, calling the functions on "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable"},{"type":"text","text":"."}]}]}]},{"anchor":"Direct","level":3,"type":"heading","text":"Direct"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the most straightforward (but longform) way, you can call functions on "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether"},{"type":"text","text":" directly."}]},{"type":"codeListing","syntax":"swift","code":["let user = try await Ether.get(route: Routes.user(id: 1),","                               type: User.self)"]},{"anchor":"Through-a-Route","level":3,"type":"heading","text":"Through a Route"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to use a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"type":"text","text":", you can use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/get(type:parameters:decoder:)"},{"type":"text","text":" method on the "},{"type":"codeVoice","code":"Route"},{"type":"text","text":" itself."}]},{"type":"codeListing","syntax":"swift","code":["let user = try await Routes.user(id: 1).get(type: User.self)"]},{"anchor":"Through-a-TypedRoute","level":3,"type":"heading","text":"Through a TypedRoute"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute"},{"type":"text","text":", you can use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute\/get(parameters:decoder:)"},{"type":"text","text":" method on the "},{"type":"codeVoice","code":"TypedRoute"},{"type":"text","text":" itself."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Requires Routes to conform to `EtherTypedRoute`.","let user = try await Routes.user(id: 1).get()"]},{"anchor":"Through-a-Fetchable","level":3,"type":"heading","text":"Through a Fetchable"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable"},{"type":"text","text":", you can use the "},{"type":"codeVoice","code":"Ether\/EtherFetchable\/fetch(id:parameters:)"},{"type":"text","text":" method on the "},{"type":"codeVoice","code":"Fetchable"},{"type":"text","text":" type itself."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Requires User to conform to `EtherFetchable`.","let user = try await User.fetch(id: 1)"]},{"anchor":"Comparison","level":2,"type":"heading","text":"Comparison"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is a table comparing the different methods of using Ether."}]},{"type":"table","rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Mode"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"How it works"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Pros"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Cons"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Direct ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"type":"text","text":")"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Ether.get(route: _, type: _, …)"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"The most straightforward; no need to set anything else up"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"The longest"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Direct ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute"},{"type":"text","text":")"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Ether.get(typedRoute: _, …)"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Shorter; omits "},{"type":"codeVoice","code":"type"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Need to set up "},{"type":"codeVoice","code":"TypedRoute"},{"type":"text","text":"s"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"route.get(type: _, …)"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Shorter; omits "},{"type":"codeVoice","code":"Ether"},{"type":"text","text":"; no need to set anything else up"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"A bit longer than others"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"typedRoute.get(_, …)"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Even shorter; omits both "},{"type":"codeVoice","code":"Ether"},{"type":"text","text":" and "},{"type":"codeVoice","code":"type"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Need to set up "},{"type":"codeVoice","code":"TypedRoute"},{"type":"text","text":"s"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Type.fetch(id: _)"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"The clearest"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Need to set up your types as "},{"type":"codeVoice","code":"Fetchable"},{"type":"text","text":"; doesn’t support as much customization at call time"}]}]]],"header":"row"},{"anchor":"Recommendations","level":2,"type":"heading","text":"Recommendations"},{"anchor":"Use-EtherFetchable-when-possible","level":3,"type":"heading","text":"Use EtherFetchable when possible"},{"type":"paragraph","inlineContent":[{"type":"text","text":"We recommend using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable"},{"type":"text","text":" most of the time, as it provides a clean, concise, and easy-to-use interface. It also allows you to use the same interface for all of your types, which can be useful if you have a lot of types that you want to fetch."}]},{"anchor":"Use-EtherRoute-when-you-need-to-customize-the-call","level":3,"type":"heading","text":"Use EtherRoute when you need to customize the call"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to customize the call, you can use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"type":"text","text":". This allows you to customize the call, such as adding headers or changing the method. This lets you use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"type":"text","text":", which is a convenient typealias for both "},{"type":"codeVoice","code":"URL"},{"type":"text","text":" and "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}]},{"anchor":"Use-EtherTypedRoute-when-you-need-to-customize-the-call-and-dont-want-to-specify-the-type-each-time","level":3,"type":"heading","text":"Use EtherTypedRoute when you need to customize the call and don’t want to specify the type each time"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to customize the call, but don’t want to specify the type each time, you can use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute"},{"type":"text","text":". This offers the same customization as EtherRoute, but also allows you to omit the type for each call. This does require you to set up "},{"type":"codeVoice","code":"TypedRoute"},{"type":"text","text":"s, however, which can be a bit more work."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/ether\/usage"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Ether\/documentation\/Ether\/Usage","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"There are several ways to use Ether. This article will help you decide which way to use, and in which cases."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Usage","role":"collectionGroup","modules":[{"name":"Ether"}]},"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether"]]},"seeAlsoSections":[{"title":"Essentials","identifiers":["doc:\/\/Ether\/documentation\/Ether\/Introduction","doc:\/\/Ether\/documentation\/Ether\/Quick-Overview"],"generated":true}],"references":{"doc://Ether/documentation/Ether/EtherRoute/get(type:parameters:decoder:)":{"role":"symbol","title":"get(type:parameters:decoder:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"parameters"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Parameters","preciseIdentifier":"s:5EtherAAV10Parametersa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"decoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"abstract":[{"type":"text","text":"Fires off a GET request to fetch data, using the current "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/get(type:parameters:decoder:)","kind":"symbol","type":"topic","url":"\/documentation\/ether\/etherroute\/get(type:parameters:decoder:)"},"doc://Ether/documentation/Ether/Ether":{"role":"symbol","title":"Ether","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Ether"}],"abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Ether"}],"url":"\/documentation\/ether\/ether"},"doc://Ether/documentation/Ether/EtherTypedRoute/get(parameters:decoder:)":{"role":"symbol","title":"get(parameters:decoder:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"("},{"kind":"externalParam","text":"parameters"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Parameters","preciseIdentifier":"s:5EtherAAV10Parametersa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"decoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"DecodedType"}],"abstract":[{"type":"text","text":"Fires off a GET request to fetch data, using the current "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/TypedRoute"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute\/get(parameters:decoder:)","kind":"symbol","type":"topic","url":"\/documentation\/ether\/ethertypedroute\/get(parameters:decoder:)"},"doc://Ether/documentation/Ether/Ether/TypedRoute":{"role":"symbol","title":"Ether.TypedRoute","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypedRoute"}],"abstract":[{"type":"text","text":"A typealias for "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute"},{"type":"text","text":", namespaced under "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether"},{"type":"text","text":"."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/TypedRoute","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TypedRoute"}],"url":"\/documentation\/ether\/ether\/typedroute"},"doc://Ether/documentation/Ether/Introduction":{"role":"collectionGroup","title":"Introduction","abstract":[{"type":"text","text":"What is Ether, and why should you use it?"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Introduction","kind":"article","type":"topic","url":"\/documentation\/ether\/introduction"},"doc://Ether/documentation/Ether/EtherTypedRoute":{"role":"symbol","title":"EtherTypedRoute","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherTypedRoute"}],"abstract":[{"type":"text","text":"An extension of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"type":"text","text":" that allows routes to declare associated types, corresponding to the type to which the route’s contents decode."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EtherTypedRoute"}],"url":"\/documentation\/ether\/ethertypedroute"},"doc://Ether/documentation/Ether/EtherSingularFetchable":{"role":"symbol","title":"EtherSingularFetchable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherSingularFetchable"}],"abstract":[{"type":"text","text":"Types conforming to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"},{"type":"text","text":" assert that their APIs provide a way to get single instances back, usually by providing an identifier."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EtherSingularFetchable"}],"url":"\/documentation\/ether\/ethersingularfetchable"},"doc://Ether/documentation/Ether":{"role":"collection","title":"Ether","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}],"identifier":"doc:\/\/Ether\/documentation\/Ether","kind":"symbol","type":"topic","url":"\/documentation\/ether"},"doc://Ether/documentation/Ether/EtherFetchable":{"role":"symbol","title":"EtherFetchable","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherFetchable"}],"abstract":[{"type":"text","text":"A typealias representing conformance to both "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"},{"type":"text","text":"."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EtherFetchable"}],"url":"\/documentation\/ether\/etherfetchable"},"doc://Ether/documentation/Ether/Quick-Overview":{"role":"collectionGroup","title":"Quick Overview","abstract":[{"type":"text","text":"A quick glance at Ether"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Quick-Overview","kind":"article","type":"topic","url":"\/documentation\/ether\/quick-overview"},"doc://Ether/documentation/Ether/EtherPluralFetchable":{"role":"symbol","title":"EtherPluralFetchable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherPluralFetchable"}],"abstract":[{"type":"text","text":"Types conforming to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"},{"type":"text","text":" assert that their APIs provide a way to get multiple instances back, optionally filtered by fields specified in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EtherPluralFetchable"}],"url":"\/documentation\/ether\/etherpluralfetchable"},"doc://Ether/documentation/Ether/Ether/Route":{"role":"symbol","title":"Ether.Route","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Route"}],"abstract":[{"type":"text","text":"A typealias for "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"type":"text","text":", namespaced under "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether"},{"type":"text","text":"."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Route"}],"url":"\/documentation\/ether\/ether\/route"},"doc://Ether/documentation/Ether/EtherRoute":{"role":"symbol","title":"EtherRoute","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherRoute"}],"abstract":[{"type":"text","text":"A custom protocol to which host apps can conform."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EtherRoute"}],"url":"\/documentation\/ether\/etherroute"}}}