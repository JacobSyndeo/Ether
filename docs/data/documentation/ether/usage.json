{"metadata":{"role":"collectionGroup","title":"Usage","modules":[{"name":"Ether"}],"roleHeading":"Article"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ether\/usage"]}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"There are several ways to use Ether. This article will help you decide which way to use, and in which cases."}],"seeAlsoSections":[{"generated":true,"title":"Essentials","identifiers":["doc:\/\/Ether\/documentation\/Ether\/Introduction","doc:\/\/Ether\/documentation\/Ether\/Quick-Overview"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Ether\/documentation\/Ether\/Usage"},"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether"]]},"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"When using Ether, you may have your own coding style and\/or preferences. You may prefer calling "},{"code":"Ether","type":"codeVoice"},{"type":"text","text":" directly. You may instead prefer to call from a "},{"type":"codeVoice","code":"Route"},{"text":" or a ","type":"text"},{"type":"codeVoice","code":"TypedRoute"},{"type":"text","text":". In other cases, you may prefer to use the "},{"type":"codeVoice","code":"Fetchable"},{"text":" protocol. Ether supports all of these styles.","type":"text"}],"type":"paragraph"},{"level":2,"text":"Usage Styles","anchor":"Usage-Styles","type":"heading"},{"inlineContent":[{"text":"There are four main ways to use Ether:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Directly, calling the functions on ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Through "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Through "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable"},{"text":".","type":"text"}]}]}],"type":"unorderedList"},{"text":"Direct","anchor":"Direct","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"In the most straightforward (but longform) way, you can call functions on ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","isActive":true,"type":"reference"},{"type":"text","text":" directly."}]},{"syntax":"swift","code":["let user = try await Ether.get(route: Routes.user(id: 1),","                               type: User.self)"],"type":"codeListing"},{"text":"Through a Route","anchor":"Through-a-Route","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"If you want to use a "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true},{"type":"text","text":", you can use the "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/get(type:parameters:decoder:)","isActive":true,"type":"reference"},{"type":"text","text":" method on the "},{"code":"Route","type":"codeVoice"},{"text":" itself.","type":"text"}],"type":"paragraph"},{"code":["let user = try await Routes.user(id: 1).get(type: User.self)"],"type":"codeListing","syntax":"swift"},{"text":"Through a TypedRoute","anchor":"Through-a-TypedRoute","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"If you want to use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute"},{"type":"text","text":", you can use the "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute\/get(parameters:decoder:)","isActive":true},{"type":"text","text":" method on the "},{"type":"codeVoice","code":"TypedRoute"},{"text":" itself.","type":"text"}]},{"type":"codeListing","code":["\/\/ Requires Routes to conform to `EtherTypedRoute`.","let user = try await Routes.user(id: 1).get()"],"syntax":"swift"},{"type":"heading","level":3,"text":"Through a Fetchable","anchor":"Through-a-Fetchable"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to use "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","type":"reference","isActive":true},{"type":"text","text":", you can use the "},{"type":"codeVoice","code":"Ether\/EtherFetchable\/fetch(id:parameters:)"},{"text":" method on the ","type":"text"},{"type":"codeVoice","code":"Fetchable"},{"type":"text","text":" type itself."}]},{"code":["\/\/ Requires User to conform to `EtherFetchable`.","let user = try await User.fetch(id: 1)"],"type":"codeListing","syntax":"swift"},{"anchor":"Comparison","type":"heading","level":2,"text":"Comparison"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is a table comparing the different methods of using Ether."}]},{"header":"row","rows":[[[{"inlineContent":[{"type":"text","text":"Mode"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"How it works"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Pros"}]}],[{"inlineContent":[{"type":"text","text":"Cons"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"Direct ("},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"text":")","type":"text"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Ether.get(route: _, type: _, …)"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"The most straightforward; no need to set anything else up"}]}],[{"inlineContent":[{"type":"text","text":"The longest"}],"type":"paragraph"}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Direct ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute"},{"text":")","type":"text"}]}],[{"inlineContent":[{"code":"Ether.get(typedRoute: _, …)","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Shorter; omits "},{"type":"codeVoice","code":"type"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"text":"Need to set up ","type":"text"},{"code":"TypedRoute","type":"codeVoice"},{"text":"s","type":"text"}]}]],[[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"route.get(type: _, …)"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Shorter; omits "},{"code":"Ether","type":"codeVoice"},{"type":"text","text":"; no need to set anything else up"}]}],[{"inlineContent":[{"text":"A bit longer than others","type":"text"}],"type":"paragraph"}]],[[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"typedRoute.get(_, …)"}]}],[{"type":"paragraph","inlineContent":[{"text":"Even shorter; omits both ","type":"text"},{"code":"Ether","type":"codeVoice"},{"type":"text","text":" and "},{"code":"type","type":"codeVoice"}]}],[{"inlineContent":[{"type":"text","text":"Need to set up "},{"type":"codeVoice","code":"TypedRoute"},{"text":"s","type":"text"}],"type":"paragraph"}]],[[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","isActive":true}]}],[{"type":"paragraph","inlineContent":[{"code":"Type.fetch(id: _)","type":"codeVoice"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"The clearest"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Need to set up your types as "},{"code":"Fetchable","type":"codeVoice"},{"type":"text","text":"; doesn’t support as much customization at call time"}]}]]],"type":"table"},{"level":2,"anchor":"Recommendations","text":"Recommendations","type":"heading"},{"type":"heading","level":3,"text":"Use EtherFetchable when possible","anchor":"Use-EtherFetchable-when-possible"},{"inlineContent":[{"type":"text","text":"We recommend using "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","isActive":true,"type":"reference"},{"type":"text","text":" most of the time, as it provides a clean, concise, and easy-to-use interface. It also allows you to use the same interface for all of your types, which can be useful if you have a lot of types that you want to fetch."}],"type":"paragraph"},{"level":3,"anchor":"Use-EtherRoute-when-you-need-to-customize-the-call","type":"heading","text":"Use EtherRoute when you need to customize the call"},{"inlineContent":[{"text":"If you need to customize the call, you can use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"text":". This allows you to customize the call, such as adding headers or changing the method. This lets you use ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true},{"type":"text","text":", which is a convenient typealias for both "},{"type":"codeVoice","code":"URL"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"type":"paragraph"},{"text":"Use EtherTypedRoute when you need to customize the call and don’t want to specify the type each time","anchor":"Use-EtherTypedRoute-when-you-need-to-customize-the-call-and-dont-want-to-specify-the-type-each-time","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to customize the call, but don’t want to specify the type each time, you can use "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","isActive":true},{"text":". This offers the same customization as EtherRoute, but also allows you to omit the type for each call. This does require you to set up ","type":"text"},{"type":"codeVoice","code":"TypedRoute"},{"text":"s, however, which can be a bit more work.","type":"text"}]}]}],"kind":"article","references":{"doc://Ether/documentation/Ether/Quick-Overview":{"title":"Quick Overview","identifier":"doc:\/\/Ether\/documentation\/Ether\/Quick-Overview","kind":"article","abstract":[{"type":"text","text":"A quick glance at Ether"}],"url":"\/documentation\/ether\/quick-overview","role":"collectionGroup","type":"topic"},"doc://Ether/documentation/Ether/Ether/TypedRoute":{"url":"\/documentation\/ether\/ether\/typedroute","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"TypedRoute","kind":"identifier"}],"title":"Ether.TypedRoute","abstract":[{"text":"A typealias for ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","type":"reference","isActive":true},{"text":", namespaced under ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","isActive":true},{"text":".","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"TypedRoute","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/TypedRoute"},"doc://Ether/documentation/Ether/EtherTypedRoute/get(parameters:decoder:)":{"role":"symbol","title":"get(parameters:decoder:)","abstract":[{"type":"text","text":"Fires off a GET request to fetch data, using the current "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/TypedRoute","isActive":true,"type":"reference"},{"type":"text","text":" instance."}],"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute\/get(parameters:decoder:)","url":"\/documentation\/ether\/ethertypedroute\/get(parameters:decoder:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"(","kind":"text"},{"text":"parameters","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"text":".","kind":"text"},{"text":"Parameters","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV10Parametersa"},{"kind":"text","text":", "},{"text":"decoder","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier","text":"JSONDecoder"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"DecodedType"}],"kind":"symbol"},"doc://Ether/documentation/Ether/EtherRoute/get(type:parameters:decoder:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/get(type:parameters:decoder:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"parameters"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV","text":"Ether"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5EtherAAV10Parametersa","text":"Parameters","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"decoder","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier","text":"JSONDecoder"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"kind":"symbol","title":"get(type:parameters:decoder:)","url":"\/documentation\/ether\/etherroute\/get(type:parameters:decoder:)","abstract":[{"type":"text","text":"Fires off a GET request to fetch data, using the current "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","isActive":true},{"text":" instance.","type":"text"}]},"doc://Ether/documentation/Ether/EtherRoute":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A custom protocol to which host apps can conform."}],"url":"\/documentation\/ether\/etherroute","title":"EtherRoute","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherRoute"}],"navigatorTitle":[{"kind":"identifier","text":"EtherRoute"}],"role":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},"doc://Ether/documentation/Ether/Introduction":{"role":"collectionGroup","title":"Introduction","abstract":[{"type":"text","text":"What is Ether, and why should you use it?"}],"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/Introduction","url":"\/documentation\/ether\/introduction","kind":"article"},"doc://Ether/documentation/Ether/EtherTypedRoute":{"abstract":[{"type":"text","text":"An extension of "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","type":"reference","isActive":true},{"type":"text","text":" that allows routes to declare associated types, corresponding to the type to which the route’s contents decode."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EtherTypedRoute"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","title":"EtherTypedRoute","url":"\/documentation\/ether\/ethertypedroute","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EtherTypedRoute","kind":"identifier"}]},"doc://Ether/documentation/Ether/EtherSingularFetchable":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EtherSingularFetchable"}],"navigatorTitle":[{"text":"EtherSingularFetchable","kind":"identifier"}],"type":"topic","role":"symbol","title":"EtherSingularFetchable","url":"\/documentation\/ether\/ethersingularfetchable","abstract":[{"text":"Types conforming to ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"},{"text":" assert that their APIs provide a way to get single instances back, usually by providing an identifier.","type":"text"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"},"doc://Ether/documentation/Ether/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/ether\/ether","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Ether","kind":"identifier"}],"navigatorTitle":[{"text":"Ether","kind":"identifier"}],"abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"title":"Ether"},"doc://Ether/documentation/Ether/Ether/Route":{"kind":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Route"}],"abstract":[{"type":"text","text":"A typealias for "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true,"type":"reference"},{"type":"text","text":", namespaced under "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","isActive":true},{"type":"text","text":"."}],"title":"Ether.Route","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Route","kind":"identifier"}],"url":"\/documentation\/ether\/ether\/route"},"doc://Ether/documentation/Ether/EtherPluralFetchable":{"abstract":[{"type":"text","text":"Types conforming to "},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","type":"reference"},{"type":"text","text":" assert that their APIs provide a way to get multiple instances back, optionally filtered by fields specified in "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters"}],"role":"symbol","type":"topic","title":"EtherPluralFetchable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EtherPluralFetchable"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","url":"\/documentation\/ether\/etherpluralfetchable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"EtherPluralFetchable","kind":"identifier"}]},"doc://Ether/documentation/Ether/EtherFetchable":{"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"EtherFetchable","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","navigatorTitle":[{"kind":"identifier","text":"EtherFetchable"}],"title":"EtherFetchable","kind":"symbol","url":"\/documentation\/ether\/etherfetchable","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A typealias representing conformance to both "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","type":"reference","isActive":true},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","isActive":true},{"text":".","type":"text"}]},"doc://Ether/documentation/Ether":{"url":"\/documentation\/ether","type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether","title":"Ether","role":"collection","abstract":[{"text":"Welcome to easy, clean, Swifty networking!","type":"text"}],"kind":"symbol"}}}