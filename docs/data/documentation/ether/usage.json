{"variants":[{"paths":["\/documentation\/ether\/usage"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Ether\/documentation\/Ether\/Usage","interfaceLanguage":"swift"},"kind":"article","seeAlsoSections":[{"identifiers":["doc:\/\/Ether\/documentation\/Ether\/Introduction","doc:\/\/Ether\/documentation\/Ether\/Quick-Overview"],"title":"Essentials","generated":true}],"abstract":[{"text":"There are several ways to use Ether. This article will help you decide which way to use, and in which cases.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether"]]},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When using Ether, you may have your own coding style and\/or preferences. You may prefer calling "},{"type":"codeVoice","code":"Ether"},{"type":"text","text":" directly. You may instead prefer to call from a "},{"type":"codeVoice","code":"Route"},{"type":"text","text":" or a "},{"code":"TypedRoute","type":"codeVoice"},{"type":"text","text":". In other cases, you may prefer to use the "},{"type":"codeVoice","code":"Fetchable"},{"text":" protocol. Ether supports all of these styles.","type":"text"}]},{"type":"heading","text":"Usage Styles","level":2,"anchor":"Usage-Styles"},{"inlineContent":[{"type":"text","text":"There are four main ways to use Ether:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Directly, calling the functions on ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Through ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Through ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"text":"Through ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","level":3,"anchor":"Direct","text":"Direct"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the most straightforward (but longform) way, you can call functions on "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether"},{"type":"text","text":" directly."}]},{"code":["let user = try await Ether.get(route: Routes.user(id: 1),","                               type: User.self)"],"syntax":"swift","type":"codeListing"},{"type":"heading","anchor":"Through-a-Route","level":3,"text":"Through a Route"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to use a "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true},{"type":"text","text":", you can use the "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/get(type:parameters:decoder:)","type":"reference","isActive":true},{"type":"text","text":" method on the "},{"code":"Route","type":"codeVoice"},{"type":"text","text":" itself."}]},{"syntax":"swift","type":"codeListing","code":["let user = try await Routes.user(id: 1).get(type: User.self)"]},{"level":3,"type":"heading","anchor":"Through-a-TypedRoute","text":"Through a TypedRoute"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to use "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","isActive":true},{"text":", you can use the ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute\/get(parameters:decoder:)","type":"reference","isActive":true},{"text":" method on the ","type":"text"},{"code":"TypedRoute","type":"codeVoice"},{"type":"text","text":" itself."}]},{"syntax":"swift","code":["\/\/ Requires Routes to conform to `EtherTypedRoute`.","let user = try await Routes.user(id: 1).get()"],"type":"codeListing"},{"type":"heading","text":"Through a Fetchable","level":3,"anchor":"Through-a-Fetchable"},{"type":"paragraph","inlineContent":[{"text":"If you want to use ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","type":"reference","isActive":true},{"text":", you can use the ","type":"text"},{"type":"codeVoice","code":"Ether\/EtherFetchable\/fetch(id:parameters:)"},{"text":" method on the ","type":"text"},{"type":"codeVoice","code":"Fetchable"},{"type":"text","text":" type itself."}]},{"code":["\/\/ Requires User to conform to `EtherFetchable`.","let user = try await User.fetch(id: 1)"],"syntax":"swift","type":"codeListing"},{"anchor":"Comparison","level":2,"text":"Comparison","type":"heading"},{"inlineContent":[{"text":"Here is a table comparing the different methods of using Ether.","type":"text"}],"type":"paragraph"},{"rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Mode"}]}],[{"inlineContent":[{"type":"text","text":"How it works"}],"type":"paragraph"}],[{"inlineContent":[{"text":"Pros","type":"text"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Cons"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Direct ("},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true,"type":"reference"},{"text":")","type":"text"}]}],[{"inlineContent":[{"type":"codeVoice","code":"Ether.get(route: _, type: _, …)"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"The most straightforward; no need to set anything else up"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"The longest"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"Direct (","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","isActive":true},{"text":")","type":"text"}]}],[{"inlineContent":[{"type":"codeVoice","code":"Ether.get(typedRoute: _, …)"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Shorter; omits "},{"type":"codeVoice","code":"type"}]}],[{"inlineContent":[{"type":"text","text":"Need to set up "},{"code":"TypedRoute","type":"codeVoice"},{"type":"text","text":"s"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true}],"type":"paragraph"}],[{"inlineContent":[{"type":"codeVoice","code":"route.get(type: _, …)"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Shorter; omits "},{"code":"Ether","type":"codeVoice"},{"type":"text","text":"; no need to set anything else up"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"text":"A bit longer than others","type":"text"}]}]],[[{"inlineContent":[{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","type":"reference","isActive":true}],"type":"paragraph"}],[{"inlineContent":[{"code":"typedRoute.get(_, …)","type":"codeVoice"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Even shorter; omits both "},{"code":"Ether","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"type"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Need to set up "},{"type":"codeVoice","code":"TypedRoute"},{"type":"text","text":"s"}]}]],[[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable"}],"type":"paragraph"}],[{"inlineContent":[{"type":"codeVoice","code":"Type.fetch(id: _)"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"text":"The clearest","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Need to set up your types as "},{"code":"Fetchable","type":"codeVoice"},{"type":"text","text":"; doesn’t support as much customization at call time"}]}]]],"type":"table","header":"row"},{"text":"Recommendations","level":2,"type":"heading","anchor":"Recommendations"},{"text":"Use EtherFetchable when possible","level":3,"type":"heading","anchor":"Use-EtherFetchable-when-possible"},{"type":"paragraph","inlineContent":[{"text":"We recommend using ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable"},{"type":"text","text":" most of the time, as it provides a clean, concise, and easy-to-use interface. It also allows you to use the same interface for all of your types, which can be useful if you have a lot of types that you want to fetch."}]},{"text":"Use EtherRoute when you need to customize the call","type":"heading","level":3,"anchor":"Use-EtherRoute-when-you-need-to-customize-the-call"},{"inlineContent":[{"type":"text","text":"If you need to customize the call, you can use "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"text":". This allows you to customize the call, such as adding headers or changing the method. This lets you use ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","type":"reference","isActive":true},{"type":"text","text":", which is a convenient typealias for both "},{"type":"codeVoice","code":"URL"},{"type":"text","text":" and "},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"text":"Use EtherTypedRoute when you need to customize the call and don’t want to specify the type each time","type":"heading","level":3,"anchor":"Use-EtherTypedRoute-when-you-need-to-customize-the-call-and-dont-want-to-specify-the-type-each-time"},{"inlineContent":[{"type":"text","text":"If you need to customize the call, but don’t want to specify the type each time, you can use "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","type":"reference","isActive":true},{"text":". This offers the same customization as EtherRoute, but also allows you to omit the type for each call. This does require you to set up ","type":"text"},{"code":"TypedRoute","type":"codeVoice"},{"type":"text","text":"s, however, which can be a bit more work."}],"type":"paragraph"}]}],"sections":[],"metadata":{"modules":[{"name":"Ether"}],"title":"Usage","role":"collectionGroup","roleHeading":"Article"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Ether/documentation/Ether/EtherTypedRoute":{"title":"EtherTypedRoute","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EtherTypedRoute"}],"url":"\/documentation\/ether\/ethertypedroute","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"EtherTypedRoute","kind":"identifier"}],"abstract":[{"text":"An extension of ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true,"type":"reference"},{"text":" that allows routes to declare associated types, corresponding to the type to which the route’s contents decode.","type":"text"}]},"doc://Ether/documentation/Ether/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","navigatorTitle":[{"text":"Ether","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"title":"Ether","url":"\/documentation\/ether\/ether","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Ether","kind":"identifier"}]},"doc://Ether/documentation/Ether/EtherPluralFetchable":{"type":"topic","kind":"symbol","url":"\/documentation\/ether\/etherpluralfetchable","title":"EtherPluralFetchable","navigatorTitle":[{"text":"EtherPluralFetchable","kind":"identifier"}],"abstract":[{"text":"Types conforming to ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","type":"reference","isActive":true},{"text":" assert that their APIs provide a way to get multiple instances back, optionally filtered by fields specified in ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","isActive":true}],"role":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EtherPluralFetchable"}]},"doc://Ether/documentation/Ether/Ether/TypedRoute":{"title":"Ether.TypedRoute","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"TypedRoute","kind":"identifier"}],"url":"\/documentation\/ether\/ether\/typedroute","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/TypedRoute","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TypedRoute"}],"abstract":[{"text":"A typealias for ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","isActive":true,"type":"reference"},{"text":", namespaced under ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether"},{"text":".","type":"text"}]},"doc://Ether/documentation/Ether/EtherFetchable":{"url":"\/documentation\/ether\/etherfetchable","navigatorTitle":[{"text":"EtherFetchable","kind":"identifier"}],"role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"EtherFetchable","kind":"identifier"}],"abstract":[{"type":"text","text":"A typealias representing conformance to both "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","isActive":true,"type":"reference"},{"type":"text","text":" and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"},{"type":"text","text":"."}],"kind":"symbol","title":"EtherFetchable","type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable"},"doc://Ether/documentation/Ether/Quick-Overview":{"abstract":[{"text":"A quick glance at Ether","type":"text"}],"title":"Quick Overview","type":"topic","role":"collectionGroup","identifier":"doc:\/\/Ether\/documentation\/Ether\/Quick-Overview","url":"\/documentation\/ether\/quick-overview","kind":"article"},"doc://Ether/documentation/Ether/EtherTypedRoute/get(parameters:decoder:)":{"abstract":[{"text":"Fires off a GET request to fetch data, using the current ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/TypedRoute","isActive":true},{"type":"text","text":" instance."}],"title":"get(parameters:decoder:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"get","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"parameters"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5EtherAAV10Parametersa","text":"Parameters","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"decoder","kind":"externalParam"},{"kind":"text","text":": "},{"text":"JSONDecoder","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"DecodedType"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute\/get(parameters:decoder:)","type":"topic","url":"\/documentation\/ether\/ethertypedroute\/get(parameters:decoder:)"},"doc://Ether/documentation/Ether/Ether/Route":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","navigatorTitle":[{"kind":"identifier","text":"Route"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A typealias for ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","type":"reference","isActive":true},{"text":", namespaced under ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether"},{"type":"text","text":"."}],"title":"Ether.Route","url":"\/documentation\/ether\/ether\/route","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Route"}]},"doc://Ether/documentation/Ether/Introduction":{"url":"\/documentation\/ether\/introduction","abstract":[{"type":"text","text":"What is Ether, and why should you use it?"}],"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/Introduction","role":"collectionGroup","kind":"article","title":"Introduction"},"doc://Ether/documentation/Ether/EtherSingularFetchable":{"url":"\/documentation\/ether\/ethersingularfetchable","navigatorTitle":[{"kind":"identifier","text":"EtherSingularFetchable"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EtherSingularFetchable"}],"title":"EtherSingularFetchable","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","abstract":[{"type":"text","text":"Types conforming to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"},{"text":" assert that their APIs provide a way to get single instances back, usually by providing an identifier.","type":"text"}],"type":"topic","kind":"symbol"},"doc://Ether/documentation/Ether/EtherRoute":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","navigatorTitle":[{"kind":"identifier","text":"EtherRoute"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A custom protocol to which host apps can conform."}],"title":"EtherRoute","url":"\/documentation\/ether\/etherroute","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"EtherRoute","kind":"identifier"}]},"doc://Ether/documentation/Ether/EtherRoute/get(type:parameters:decoder:)":{"url":"\/documentation\/ether\/etherroute\/get(type:parameters:decoder:)","title":"get(type:parameters:decoder:)","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"text":"parameters","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Ether","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Parameters","preciseIdentifier":"s:5EtherAAV10Parametersa"},{"kind":"text","text":", "},{"text":"decoder","kind":"externalParam"},{"kind":"text","text":": "},{"text":"JSONDecoder","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"abstract":[{"type":"text","text":"Fires off a GET request to fetch data, using the current "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route"},{"text":" instance.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/get(type:parameters:decoder:)"},"doc://Ether/documentation/Ether":{"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}],"kind":"symbol","url":"\/documentation\/ether","role":"collection","title":"Ether"}}}