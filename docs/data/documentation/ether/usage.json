{"kind":"article","variants":[{"paths":["\/documentation\/ether\/usage"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"content":[{"type":"heading","level":2,"anchor":"Overview","text":"Overview"},{"inlineContent":[{"text":"When using Ether, you may have your own coding style and\/or preferences. You may prefer calling ","type":"text"},{"type":"codeVoice","code":"Ether"},{"type":"text","text":" directly. You may instead prefer to call from a "},{"type":"codeVoice","code":"Route"},{"type":"text","text":" or a "},{"code":"TypedRoute","type":"codeVoice"},{"type":"text","text":". In other cases, you may prefer to use the "},{"type":"codeVoice","code":"Fetchable"},{"text":" protocol. Ether supports all of these styles.","type":"text"}],"type":"paragraph"},{"anchor":"Usage-Styles","text":"Usage Styles","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"There are four main ways to use Ether:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Directly, calling the functions on ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","type":"reference","isActive":true},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Through "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Through "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","type":"reference","isActive":true},{"text":".","type":"text"}]}]}],"type":"unorderedList"},{"level":3,"text":"Direct","anchor":"Direct","type":"heading"},{"inlineContent":[{"type":"text","text":"In the most straightforward (but longform) way, you can call functions on "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","isActive":true,"type":"reference"},{"type":"text","text":" directly."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let user = try await Ether.get(route: Routes.user(id: 1),","                               type: User.self)"]},{"text":"Through a Route","level":3,"anchor":"Through-a-Route","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"If you want to use a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"text":", you can use the ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/get(type:parameters:decoder:)","isActive":true},{"text":" method on the ","type":"text"},{"type":"codeVoice","code":"Route"},{"text":" itself.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let user = try await Routes.user(id: 1).get(type: User.self)"]},{"level":3,"text":"Through a TypedRoute","type":"heading","anchor":"Through-a-TypedRoute"},{"inlineContent":[{"text":"If you want to use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute"},{"text":", you can use the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute\/get(parameters:decoder:)","type":"reference"},{"text":" method on the ","type":"text"},{"code":"TypedRoute","type":"codeVoice"},{"type":"text","text":" itself."}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ Requires Routes to conform to `EtherTypedRoute`.","let user = try await Routes.user(id: 1).get()"],"type":"codeListing"},{"anchor":"Through-a-Fetchable","level":3,"type":"heading","text":"Through a Fetchable"},{"inlineContent":[{"text":"If you want to use ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","isActive":true},{"text":", you can use the ","type":"text"},{"type":"codeVoice","code":"Ether\/EtherFetchable\/fetch(id:parameters:)"},{"type":"text","text":" method on the "},{"type":"codeVoice","code":"Fetchable"},{"type":"text","text":" type itself."}],"type":"paragraph"},{"code":["\/\/ Requires User to conform to `EtherFetchable`.","let user = try await User.fetch(id: 1)"],"syntax":"swift","type":"codeListing"},{"anchor":"Comparison","text":"Comparison","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is a table comparing the different methods of using Ether."}]},{"rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Mode"}]}],[{"type":"paragraph","inlineContent":[{"text":"How it works","type":"text"}]}],[{"inlineContent":[{"type":"text","text":"Pros"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"text":"Cons","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Direct ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"type":"text","text":")"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Ether.get(route: _, type: _, …)"}]}],[{"inlineContent":[{"text":"The most straightforward; no need to set anything else up","type":"text"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"text":"The longest","type":"text"}]}]],[[{"inlineContent":[{"type":"text","text":"Direct ("},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","isActive":true,"type":"reference"},{"type":"text","text":")"}],"type":"paragraph"}],[{"inlineContent":[{"code":"Ether.get(typedRoute: _, …)","type":"codeVoice"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"text":"Shorter; omits ","type":"text"},{"type":"codeVoice","code":"type"}]}],[{"inlineContent":[{"text":"Need to set up ","type":"text"},{"type":"codeVoice","code":"TypedRoute"},{"text":"s","type":"text"}],"type":"paragraph"}]],[[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","type":"reference","isActive":true}]}],[{"type":"paragraph","inlineContent":[{"code":"route.get(type: _, …)","type":"codeVoice"}]}],[{"inlineContent":[{"text":"Shorter; omits ","type":"text"},{"type":"codeVoice","code":"Ether"},{"type":"text","text":"; no need to set anything else up"}],"type":"paragraph"}],[{"inlineContent":[{"text":"A bit longer than others","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute"}],"type":"paragraph"}],[{"inlineContent":[{"code":"typedRoute.get(_, …)","type":"codeVoice"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Even shorter; omits both "},{"code":"Ether","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"type"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Need to set up "},{"type":"codeVoice","code":"TypedRoute"},{"type":"text","text":"s"}]}]],[[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Type.fetch(id: _)"}]}],[{"inlineContent":[{"type":"text","text":"The clearest"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"text":"Need to set up your types as ","type":"text"},{"type":"codeVoice","code":"Fetchable"},{"type":"text","text":"; doesn’t support as much customization at call time"}]}]]],"header":"row","type":"table"},{"anchor":"Recommendations","text":"Recommendations","level":2,"type":"heading"},{"text":"Use EtherFetchable when possible","anchor":"Use-EtherFetchable-when-possible","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"We recommend using "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable"},{"text":" most of the time, as it provides a clean, concise, and easy-to-use interface. It also allows you to use the same interface for all of your types, which can be useful if you have a lot of types that you want to fetch.","type":"text"}]},{"type":"heading","text":"Use EtherRoute when you need to customize the call","anchor":"Use-EtherRoute-when-you-need-to-customize-the-call","level":3},{"inlineContent":[{"type":"text","text":"If you need to customize the call, you can use "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","type":"reference","isActive":true},{"text":". This allows you to customize the call, such as adding headers or changing the method. This lets you use ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"text":", which is a convenient typealias for both ","type":"text"},{"type":"codeVoice","code":"URL"},{"text":" and ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"level":3,"type":"heading","anchor":"Use-EtherTypedRoute-when-you-need-to-customize-the-call-and-dont-want-to-specify-the-type-each-time","text":"Use EtherTypedRoute when you need to customize the call and don’t want to specify the type each time"},{"inlineContent":[{"text":"If you need to customize the call, but don’t want to specify the type each time, you can use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute"},{"text":". This offers the same customization as EtherRoute, but also allows you to omit the type for each call. This does require you to set up ","type":"text"},{"code":"TypedRoute","type":"codeVoice"},{"text":"s, however, which can be a bit more work.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"type":"text","text":"There are several ways to use Ether. This article will help you decide which way to use, and in which cases."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Ether\/documentation\/Ether\/Usage"},"metadata":{"title":"Usage","roleHeading":"Article","modules":[{"name":"Ether"}],"role":"collectionGroup"},"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether"]]},"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/Ether\/documentation\/Ether\/Introduction","doc:\/\/Ether\/documentation\/Ether\/Quick-Overview"],"generated":true,"title":"Essentials"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://Ether/documentation/Ether/Ether/TypedRoute":{"title":"Ether.TypedRoute","abstract":[{"type":"text","text":"A typealias for "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","isActive":true,"type":"reference"},{"type":"text","text":", namespaced under "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","isActive":true},{"text":".","type":"text"}],"type":"topic","url":"\/documentation\/ether\/ether\/typedroute","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"TypedRoute","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"TypedRoute"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/TypedRoute","role":"symbol"},"doc://Ether/documentation/Ether/EtherFetchable":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EtherFetchable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"EtherFetchable"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","role":"symbol","abstract":[{"type":"text","text":"A typealias representing conformance to both "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"},{"type":"text","text":" and "},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","type":"reference"},{"text":".","type":"text"}],"url":"\/documentation\/ether\/etherfetchable","kind":"symbol","title":"EtherFetchable","type":"topic"},"doc://Ether/documentation/Ether/Ether":{"url":"\/documentation\/ether\/ether","navigatorTitle":[{"text":"Ether","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Ether"}],"title":"Ether"},"doc://Ether/documentation/Ether/Quick-Overview":{"title":"Quick Overview","abstract":[{"type":"text","text":"A quick glance at Ether"}],"role":"collectionGroup","identifier":"doc:\/\/Ether\/documentation\/Ether\/Quick-Overview","url":"\/documentation\/ether\/quick-overview","type":"topic","kind":"article"},"doc://Ether/documentation/Ether/EtherTypedRoute":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"EtherTypedRoute","kind":"identifier"}],"title":"EtherTypedRoute","type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","role":"symbol","kind":"symbol","url":"\/documentation\/ether\/ethertypedroute","abstract":[{"text":"An extension of ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true,"type":"reference"},{"type":"text","text":" that allows routes to declare associated types, corresponding to the type to which the route’s contents decode."}],"navigatorTitle":[{"kind":"identifier","text":"EtherTypedRoute"}]},"doc://Ether/documentation/Ether/EtherSingularFetchable":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EtherSingularFetchable","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","role":"symbol","url":"\/documentation\/ether\/ethersingularfetchable","type":"topic","abstract":[{"type":"text","text":"Types conforming to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"},{"text":" assert that their APIs provide a way to get single instances back, usually by providing an identifier.","type":"text"}],"navigatorTitle":[{"text":"EtherSingularFetchable","kind":"identifier"}],"title":"EtherSingularFetchable"},"doc://Ether/documentation/Ether/EtherPluralFetchable":{"role":"symbol","abstract":[{"type":"text","text":"Types conforming to "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","type":"reference","isActive":true},{"type":"text","text":" assert that their APIs provide a way to get multiple instances back, optionally filtered by fields specified in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters"}],"title":"EtherPluralFetchable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EtherPluralFetchable"}],"kind":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","type":"topic","navigatorTitle":[{"text":"EtherPluralFetchable","kind":"identifier"}],"url":"\/documentation\/ether\/etherpluralfetchable"},"doc://Ether/documentation/Ether/EtherRoute":{"title":"EtherRoute","abstract":[{"text":"A custom protocol to which host apps can conform.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/ether\/etherroute","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EtherRoute","kind":"identifier"}],"navigatorTitle":[{"text":"EtherRoute","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","role":"symbol"},"doc://Ether/documentation/Ether":{"kind":"symbol","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}],"title":"Ether","identifier":"doc:\/\/Ether\/documentation\/Ether","url":"\/documentation\/ether","role":"collection","type":"topic"},"doc://Ether/documentation/Ether/EtherTypedRoute/get(parameters:decoder:)":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute\/get(parameters:decoder:)","kind":"symbol","title":"get(parameters:decoder:)","abstract":[{"text":"Fires off a GET request to fetch data, using the current ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/TypedRoute"},{"text":" instance.","type":"text"}],"url":"\/documentation\/ether\/ethertypedroute\/get(parameters:decoder:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"get","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"parameters"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5EtherAAV","text":"Ether","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV10Parametersa","text":"Parameters"},{"kind":"text","text":", "},{"text":"decoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"DecodedType"}],"type":"topic"},"doc://Ether/documentation/Ether/EtherRoute/get(type:parameters:decoder:)":{"abstract":[{"text":"Fires off a GET request to fetch data, using the current ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route"},{"type":"text","text":" instance."}],"role":"symbol","title":"get(type:parameters:decoder:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"get","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"text":"parameters","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV","text":"Ether"},{"kind":"text","text":"."},{"text":"Parameters","preciseIdentifier":"s:5EtherAAV10Parametersa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"decoder","kind":"externalParam"},{"kind":"text","text":": "},{"text":"JSONDecoder","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/get(type:parameters:decoder:)","kind":"symbol","url":"\/documentation\/ether\/etherroute\/get(type:parameters:decoder:)"},"doc://Ether/documentation/Ether/Introduction":{"kind":"article","abstract":[{"text":"What is Ether, and why should you use it?","type":"text"}],"role":"collectionGroup","title":"Introduction","type":"topic","url":"\/documentation\/ether\/introduction","identifier":"doc:\/\/Ether\/documentation\/Ether\/Introduction"},"doc://Ether/documentation/Ether/Ether/Route":{"abstract":[{"type":"text","text":"A typealias for "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","type":"reference","isActive":true},{"type":"text","text":", namespaced under "},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","type":"reference"},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Route"}],"title":"Ether.Route","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Route"}],"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","kind":"symbol","url":"\/documentation\/ether\/ether\/route"}}}