{"metadata":{"title":"singularRoute(id:)","symbolKind":"method","required":true,"externalID":"s:5Ether0A17SingularFetchableP13singularRoute2idAA0aE0_pSSSg_tFZ","modules":[{"name":"Ether"}],"roleHeading":"Type Method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"singularRoute"},{"kind":"text","text":"("},{"text":"id","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:5Ether0A5RouteP","kind":"typeIdentifier","text":"EtherRoute"}],"role":"symbol"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"singularRoute","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"EtherRoute","preciseIdentifier":"s:5Ether0A5RouteP","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The identifier of the instance this route will fetch from the server."}],"type":"paragraph"}],"name":"id"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","type":"reference","isActive":true},{"type":"text","text":" corresponding to the type and provided identifier."}]}]},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"By convention, this involves the route containing an identifier representing the specific item in question."},{"type":"text","text":" "},{"text":"E.g. in the URL ","type":"text"},{"type":"codeVoice","code":"https:\/\/site.com\/users\/1"},{"type":"text","text":", the "},{"code":"1","type":"codeVoice"},{"text":" represents the identifier.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Some sites also use username strings, such as "},{"code":"https:\/\/github.com\/JacobSyndeo","type":"codeVoice"},{"text":". In this case, ","type":"text"},{"code":"JacobSyndeo","type":"codeVoice"},{"type":"text","text":" is the identifier."}]},{"inlineContent":[{"type":"text","text":"For these, youâ€™d want to return:"},{"text":" ","type":"text"},{"code":"\"https:\/\/site.com\/users\/\" + id","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"or"},{"text":" ","type":"text"},{"type":"codeVoice","code":"\"https:\/\/github.com\/\" + id"},{"text":", respectively.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"identifier":{"url":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/singularRoute(id:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The route used to request single instances of this type."},{"type":"text","text":" "},{"text":"Set this up to return proper route endpoints for any provided identifier (or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":", if appropriate for the API).","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether","doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ether\/ethersingularfetchable\/singularroute(id:)"]}],"sections":[],"references":{"doc://Ether/documentation/Ether/EtherSingularFetchable":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EtherSingularFetchable"}],"navigatorTitle":[{"text":"EtherSingularFetchable","kind":"identifier"}],"type":"topic","role":"symbol","title":"EtherSingularFetchable","url":"\/documentation\/ether\/ethersingularfetchable","abstract":[{"text":"Types conforming to ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"},{"text":" assert that their APIs provide a way to get single instances back, usually by providing an identifier.","type":"text"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"},"doc://Ether/documentation/Ether/EtherSingularFetchable/singularRoute(id:)":{"title":"singularRoute(id:)","role":"symbol","kind":"symbol","url":"\/documentation\/ether\/ethersingularfetchable\/singularroute(id:)","required":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/singularRoute(id:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singularRoute","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?) -> ","kind":"text"},{"text":"EtherRoute","kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A5RouteP"}],"abstract":[{"type":"text","text":"The route used to request single instances of this type."},{"type":"text","text":" "},{"text":"Set this up to return proper route endpoints for any provided identifier (or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":", if appropriate for the API).","type":"text"}]},"doc://Ether/documentation/Ether":{"url":"\/documentation\/ether","type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether","title":"Ether","role":"collection","abstract":[{"text":"Welcome to easy, clean, Swifty networking!","type":"text"}],"kind":"symbol"},"doc://Ether/documentation/Ether/EtherRoute":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A custom protocol to which host apps can conform."}],"url":"\/documentation\/ether\/etherroute","title":"EtherRoute","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherRoute"}],"navigatorTitle":[{"kind":"identifier","text":"EtherRoute"}],"role":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"}}}