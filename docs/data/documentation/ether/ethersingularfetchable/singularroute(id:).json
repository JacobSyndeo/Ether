{"sections":[],"metadata":{"symbolKind":"method","modules":[{"name":"Ether"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singularRoute","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"EtherRoute","preciseIdentifier":"s:5Ether0A5RouteP"}],"title":"singularRoute(id:)","externalID":"s:5Ether0A17SingularFetchableP13singularRoute2idAA0aE0_pSSSg_tFZ","required":true,"roleHeading":"Type Method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/singularRoute(id:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ether\/ethersingularfetchable\/singularroute(id:)"]}],"abstract":[{"type":"text","text":"The route used to request single instances of this type."},{"text":" ","type":"text"},{"type":"text","text":"Set this up to return proper route endpoints for any provided identifier (or "},{"type":"codeVoice","code":"nil"},{"text":", if appropriate for the API).","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether","doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singularRoute","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"?) -> ","kind":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","text":"EtherRoute","preciseIdentifier":"s:5Ether0A5RouteP","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"name":"id","content":[{"inlineContent":[{"type":"text","text":"The identifier of the instance this route will fetch from the server."}],"type":"paragraph"}]}]},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"type":"text","text":" corresponding to the type and provided identifier."}]}],"kind":"content"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"By convention, this involves the route containing an identifier representing the specific item in question."},{"text":" ","type":"text"},{"text":"E.g. in the URL ","type":"text"},{"type":"codeVoice","code":"https:\/\/site.com\/users\/1"},{"type":"text","text":", the "},{"code":"1","type":"codeVoice"},{"text":" represents the identifier.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Some sites also use username strings, such as "},{"code":"https:\/\/github.com\/JacobSyndeo","type":"codeVoice"},{"text":". In this case, ","type":"text"},{"type":"codeVoice","code":"JacobSyndeo"},{"type":"text","text":" is the identifier."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For these, youâ€™d want to return:"},{"text":" ","type":"text"},{"type":"codeVoice","code":"\"https:\/\/site.com\/users\/\" + id"},{"type":"text","text":" "},{"text":"or","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"\"https:\/\/github.com\/\" + id"},{"type":"text","text":", respectively."}]}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://Ether/documentation/Ether":{"kind":"symbol","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}],"title":"Ether","identifier":"doc:\/\/Ether\/documentation\/Ether","url":"\/documentation\/ether","role":"collection","type":"topic"},"doc://Ether/documentation/Ether/EtherSingularFetchable/singularRoute(id:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"singularRoute","kind":"identifier"},{"kind":"text","text":"("},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?) -> ","kind":"text"},{"text":"EtherRoute","preciseIdentifier":"s:5Ether0A5RouteP","kind":"typeIdentifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/singularRoute(id:)","required":true,"type":"topic","url":"\/documentation\/ether\/ethersingularfetchable\/singularroute(id:)","role":"symbol","abstract":[{"text":"The route used to request single instances of this type.","type":"text"},{"type":"text","text":" "},{"text":"Set this up to return proper route endpoints for any provided identifier (or ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":", if appropriate for the API)."}],"title":"singularRoute(id:)"},"doc://Ether/documentation/Ether/EtherSingularFetchable":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EtherSingularFetchable","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","role":"symbol","url":"\/documentation\/ether\/ethersingularfetchable","type":"topic","abstract":[{"type":"text","text":"Types conforming to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"},{"text":" assert that their APIs provide a way to get single instances back, usually by providing an identifier.","type":"text"}],"navigatorTitle":[{"text":"EtherSingularFetchable","kind":"identifier"}],"title":"EtherSingularFetchable"},"doc://Ether/documentation/Ether/EtherRoute":{"title":"EtherRoute","abstract":[{"text":"A custom protocol to which host apps can conform.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/ether\/etherroute","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EtherRoute","kind":"identifier"}],"navigatorTitle":[{"text":"EtherRoute","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","role":"symbol"}}}