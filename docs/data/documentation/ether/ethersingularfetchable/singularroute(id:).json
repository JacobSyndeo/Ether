{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"singularRoute"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","preciseIdentifier":"s:5Ether0A5RouteP","text":"EtherRoute"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The identifier of the instance this route will fetch from the server."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"type":"text","text":" corresponding to the type and provided identifier."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"By convention, this involves the route containing an identifier representing the specific item in question."},{"type":"text","text":" "},{"type":"text","text":"E.g. in the URL "},{"type":"codeVoice","code":"https:\/\/site.com\/users\/1"},{"type":"text","text":", the "},{"type":"codeVoice","code":"1"},{"type":"text","text":" represents the identifier."},{"type":"text","text":" "},{"type":"text","text":"Some sites also use username strings, such as "},{"type":"codeVoice","code":"https:\/\/github.com\/JacobSyndeo"},{"type":"text","text":". In this case, "},{"type":"codeVoice","code":"JacobSyndeo"},{"type":"text","text":" is the identifier."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For these, youâ€™d want to return:"},{"type":"text","text":" "},{"type":"codeVoice","code":"\"https:\/\/site.com\/users\/\" + id"},{"type":"text","text":" "},{"type":"text","text":"or"},{"type":"text","text":" "},{"type":"codeVoice","code":"\"https:\/\/github.com\/\" + id"},{"type":"text","text":", respectively."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/ether\/ethersingularfetchable\/singularroute(id:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/singularRoute(id:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The route used to request single instances of this type."},{"type":"text","text":" "},{"type":"text","text":"Set this up to return proper route endpoints for any provided identifier (or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", if appropriate for the API)."}],"kind":"symbol","metadata":{"role":"symbol","title":"singularRoute(id:)","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"singularRoute"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"EtherRoute","preciseIdentifier":"s:5Ether0A5RouteP"}],"symbolKind":"method","externalID":"s:5Ether0A17SingularFetchableP13singularRoute2idAA0aE0_pSSSg_tFZ","required":true,"modules":[{"name":"Ether"}]},"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether","doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"]]},"references":{"doc://Ether/documentation/Ether":{"role":"collection","title":"Ether","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}],"identifier":"doc:\/\/Ether\/documentation\/Ether","kind":"symbol","type":"topic","url":"\/documentation\/ether"},"doc://Ether/documentation/Ether/EtherSingularFetchable":{"role":"symbol","title":"EtherSingularFetchable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherSingularFetchable"}],"abstract":[{"type":"text","text":"Types conforming to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"},{"type":"text","text":" assert that their APIs provide a way to get single instances back, usually by providing an identifier."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EtherSingularFetchable"}],"url":"\/documentation\/ether\/ethersingularfetchable"},"doc://Ether/documentation/Ether/EtherRoute":{"role":"symbol","title":"EtherRoute","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherRoute"}],"abstract":[{"type":"text","text":"A custom protocol to which host apps can conform."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EtherRoute"}],"url":"\/documentation\/ether\/etherroute"},"doc://Ether/documentation/Ether/EtherSingularFetchable/singularRoute(id:)":{"role":"symbol","title":"singularRoute(id:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"singularRoute"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"EtherRoute","preciseIdentifier":"s:5Ether0A5RouteP"}],"abstract":[{"type":"text","text":"The route used to request single instances of this type."},{"type":"text","text":" "},{"type":"text","text":"Set this up to return proper route endpoints for any provided identifier (or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", if appropriate for the API)."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/singularRoute(id:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/ether\/ethersingularfetchable\/singularroute(id:)"}}}