{"metadata":{"externalID":"s:5Ether0A17SingularFetchableP13singularRoute2idAA0aE0_pSSSg_tFZ","modules":[{"name":"Ether"}],"role":"symbol","roleHeading":"Type Method","required":true,"symbolKind":"method","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singularRoute","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?) -> ","kind":"text"},{"text":"EtherRoute","preciseIdentifier":"s:5Ether0A5RouteP","kind":"typeIdentifier"}],"title":"singularRoute(id:)"},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/singularRoute(id:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"singularRoute"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?) -> "},{"text":"EtherRoute","preciseIdentifier":"s:5Ether0A5RouteP","kind":"typeIdentifier","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The identifier of the instance this route will fetch from the server.","type":"text"}],"type":"paragraph"}],"name":"id"}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true},{"type":"text","text":" corresponding to the type and provided identifier."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"By convention, this involves the route containing an identifier representing the specific item in question.","type":"text"},{"type":"text","text":" "},{"text":"E.g. in the URL ","type":"text"},{"type":"codeVoice","code":"https:\/\/site.com\/users\/1"},{"text":", the ","type":"text"},{"type":"codeVoice","code":"1"},{"type":"text","text":" represents the identifier."},{"type":"text","text":" "},{"type":"text","text":"Some sites also use username strings, such as "},{"type":"codeVoice","code":"https:\/\/github.com\/JacobSyndeo"},{"type":"text","text":". In this case, "},{"code":"JacobSyndeo","type":"codeVoice"},{"text":" is the identifier.","type":"text"}]},{"inlineContent":[{"type":"text","text":"For these, youâ€™d want to return:"},{"text":" ","type":"text"},{"code":"\"https:\/\/site.com\/users\/\" + id","type":"codeVoice"},{"text":" ","type":"text"},{"text":"or","type":"text"},{"text":" ","type":"text"},{"code":"\"https:\/\/github.com\/\" + id","type":"codeVoice"},{"type":"text","text":", respectively."}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether","doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ether\/ethersingularfetchable\/singularroute(id:)"]}],"sections":[],"abstract":[{"text":"The route used to request single instances of this type.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Set this up to return proper route endpoints for any provided identifier (or "},{"code":"nil","type":"codeVoice"},{"text":", if appropriate for the API).","type":"text"}],"references":{"doc://Ether/documentation/Ether/EtherSingularFetchable":{"type":"topic","url":"\/documentation\/ether\/ethersingularfetchable","abstract":[{"text":"Types conforming to ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","isActive":true},{"type":"text","text":" assert that their APIs provide a way to get single instances back, usually by providing an identifier."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"EtherSingularFetchable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"EtherSingularFetchable"}],"role":"symbol","title":"EtherSingularFetchable","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"},"doc://Ether/documentation/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether","role":"collection","title":"Ether","kind":"symbol","url":"\/documentation\/ether","type":"topic","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}]},"doc://Ether/documentation/Ether/EtherSingularFetchable/singularRoute(id:)":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/singularRoute(id:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"singularRoute","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:5Ether0A5RouteP","text":"EtherRoute","kind":"typeIdentifier"}],"url":"\/documentation\/ether\/ethersingularfetchable\/singularroute(id:)","title":"singularRoute(id:)","required":true,"role":"symbol","abstract":[{"type":"text","text":"The route used to request single instances of this type."},{"text":" ","type":"text"},{"type":"text","text":"Set this up to return proper route endpoints for any provided identifier (or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":", if appropriate for the API)."}],"kind":"symbol"},"doc://Ether/documentation/Ether/EtherRoute":{"navigatorTitle":[{"text":"EtherRoute","kind":"identifier"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","title":"EtherRoute","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EtherRoute"}],"abstract":[{"type":"text","text":"A custom protocol to which host apps can conform."}],"url":"\/documentation\/ether\/etherroute"}}}