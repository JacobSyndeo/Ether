{"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"singularRoute","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:5Ether0A5RouteP","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","text":"EtherRoute","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"id","content":[{"inlineContent":[{"type":"text","text":"The identifier of the instance this route will fetch from the server."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","type":"reference","isActive":true},{"type":"text","text":" corresponding to the type and provided identifier."}],"type":"paragraph"}]},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"By convention, this involves the route containing an identifier representing the specific item in question.","type":"text"},{"text":" ","type":"text"},{"text":"E.g. in the URL ","type":"text"},{"type":"codeVoice","code":"https:\/\/site.com\/users\/1"},{"type":"text","text":", the "},{"code":"1","type":"codeVoice"},{"text":" represents the identifier.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Some sites also use username strings, such as "},{"type":"codeVoice","code":"https:\/\/github.com\/JacobSyndeo"},{"text":". In this case, ","type":"text"},{"code":"JacobSyndeo","type":"codeVoice"},{"type":"text","text":" is the identifier."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For these, youâ€™d want to return:"},{"text":" ","type":"text"},{"code":"\"https:\/\/site.com\/users\/\" + id","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"or"},{"type":"text","text":" "},{"code":"\"https:\/\/github.com\/\" + id","type":"codeVoice"},{"text":", respectively.","type":"text"}]}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether","doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"]]},"identifier":{"url":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/singularRoute(id:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The route used to request single instances of this type."},{"text":" ","type":"text"},{"type":"text","text":"Set this up to return proper route endpoints for any provided identifier (or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", if appropriate for the API)."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ether\/ethersingularfetchable\/singularroute(id:)"]}],"metadata":{"required":true,"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"singularRoute"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:5Ether0A5RouteP","text":"EtherRoute","kind":"typeIdentifier"}],"title":"singularRoute(id:)","roleHeading":"Type Method","modules":[{"name":"Ether"}],"role":"symbol","externalID":"s:5Ether0A17SingularFetchableP13singularRoute2idAA0aE0_pSSSg_tFZ","symbolKind":"method"},"sections":[],"references":{"doc://Ether/documentation/Ether/EtherSingularFetchable/singularRoute(id:)":{"role":"symbol","url":"\/documentation\/ether\/ethersingularfetchable\/singularroute(id:)","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/singularRoute(id:)","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singularRoute","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Ether0A5RouteP","text":"EtherRoute"}],"abstract":[{"type":"text","text":"The route used to request single instances of this type."},{"type":"text","text":" "},{"text":"Set this up to return proper route endpoints for any provided identifier (or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":", if appropriate for the API).","type":"text"}],"title":"singularRoute(id:)","required":true},"doc://Ether/documentation/Ether":{"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}],"kind":"symbol","url":"\/documentation\/ether","role":"collection","title":"Ether"},"doc://Ether/documentation/Ether/EtherSingularFetchable":{"url":"\/documentation\/ether\/ethersingularfetchable","navigatorTitle":[{"kind":"identifier","text":"EtherSingularFetchable"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EtherSingularFetchable"}],"title":"EtherSingularFetchable","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","abstract":[{"type":"text","text":"Types conforming to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"},{"text":" assert that their APIs provide a way to get single instances back, usually by providing an identifier.","type":"text"}],"type":"topic","kind":"symbol"},"doc://Ether/documentation/Ether/EtherRoute":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","navigatorTitle":[{"kind":"identifier","text":"EtherRoute"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A custom protocol to which host apps can conform."}],"title":"EtherRoute","url":"\/documentation\/ether\/etherroute","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"EtherRoute","kind":"identifier"}]}}}