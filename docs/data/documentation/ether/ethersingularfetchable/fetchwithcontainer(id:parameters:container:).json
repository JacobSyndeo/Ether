{"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ether\/ethersingularfetchable\/fetchwithcontainer(id:parameters:container:)"]}],"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"fetchWithContainer","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Container"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"parameters"},{"text":": ","kind":"text"},{"text":"Ether","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5EtherAAV10Parametersa","kind":"typeIdentifier","text":"Parameters"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"container"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Container"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Container"}],"modules":[{"name":"Ether"}],"role":"symbol","externalID":"s:5Ether0A17SingularFetchablePAAE18fetchWithContainer2id10parameters9containerqd__SSSg_SDySSs25LosslessStringConvertible_pGqd__mtYaKSeRd__lFZ","title":"fetchWithContainer(id:parameters:container:)","roleHeading":"Type Method","extendedModule":"Ether","symbolKind":"method"},"abstract":[{"text":"Fetch an instance of this type from the server, within a container type.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether","doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fetchWithContainer","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"? = nil, ","kind":"text"},{"kind":"externalParam","text":"parameters"},{"text":": ","kind":"text"},{"text":"Ether","preciseIdentifier":"s:5EtherAAV","kind":"typeIdentifier","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5EtherAAV10Parametersa","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Parameters","kind":"typeIdentifier","text":"Parameters"},{"text":" = [:], ","kind":"text"},{"text":"container","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Container"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Container"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Container"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Se","kind":"typeIdentifier","text":"Decodable"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The identifier of the instance to fetch from the server."}],"type":"paragraph"}],"name":"id"},{"name":"parameters","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The parameters to use in the request. Defaults to empty."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The container type to decode from. You’ll need to create this type based on the server’s API response format."}]}],"name":"container"}]},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"An instance of the provided container format, based on the server’s response.","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Sometimes, servers don’t directly give you the type you want. Sometimes, it’s wrapped up in some kind of “Results” container type."},{"type":"text","text":" "},{"type":"text","text":"Typically, this includes various metadata about the request and\/or response."}]},{"inlineContent":[{"text":"However, this conflicts with Fetchable’s ","type":"text"},{"type":"codeVoice","code":"fetch"},{"type":"text","text":" function, which normally needs to give the caller exactly the type it was expecting."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"So if the server is giving you a result container (which contains the type you’re after), this function is for you!","type":"text"}]},{"inlineContent":[{"text":"Otherwise, in the case that you ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"don’t"}]},{"text":" want that metadata, use ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/fetch(id:parameters:container:keyPath:)","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"An "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Error"},{"text":", or any error thrown by the ","type":"text"},{"code":"URLSession","type":"codeVoice"},{"text":" data task, if the request fails.","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside","name":"Throws"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/fetchWithContainer(id:parameters:container:)"},"references":{"doc://Ether/documentation/Ether/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","navigatorTitle":[{"text":"Ether","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"title":"Ether","url":"\/documentation\/ether\/ether","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Ether","kind":"identifier"}]},"doc://Ether/documentation/Ether":{"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}],"kind":"symbol","url":"\/documentation\/ether","role":"collection","title":"Ether"},"doc://Ether/documentation/Ether/EtherSingularFetchable/fetchWithContainer(id:parameters:container:)":{"url":"\/documentation\/ether\/ethersingularfetchable\/fetchwithcontainer(id:parameters:container:)","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/fetchWithContainer(id:parameters:container:)","type":"topic","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fetchWithContainer"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Container"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"parameters"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5EtherAAV","text":"Ether","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Parameters","preciseIdentifier":"s:5EtherAAV10Parametersa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"container"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":".Type) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Container"}],"title":"fetchWithContainer(id:parameters:container:)","abstract":[{"type":"text","text":"Fetch an instance of this type from the server, within a container type."}],"role":"symbol"},"doc://Ether/documentation/Ether/EtherSingularFetchable":{"url":"\/documentation\/ether\/ethersingularfetchable","navigatorTitle":[{"kind":"identifier","text":"EtherSingularFetchable"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EtherSingularFetchable"}],"title":"EtherSingularFetchable","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","abstract":[{"type":"text","text":"Types conforming to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"},{"text":" assert that their APIs provide a way to get single instances back, usually by providing an identifier.","type":"text"}],"type":"topic","kind":"symbol"},"doc://Ether/documentation/Ether/Ether/Parameters":{"url":"\/documentation\/ether\/ether\/parameters","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Parameters","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A dictionary of parameters to apply to a "},{"code":"URLRequest","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Parameters","kind":"identifier"}],"title":"Ether.Parameters","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parameters"}]},"https://github.com/JacobSyndeo/Ether/issues/new":{"title":"open an issue on GitHub","type":"link","titleInlineContent":[{"text":"open an issue on GitHub","type":"text"}],"identifier":"https:\/\/github.com\/JacobSyndeo\/Ether\/issues\/new","url":"https:\/\/github.com\/JacobSyndeo\/Ether\/issues\/new"},"doc://Ether/documentation/Ether/Ether/Error":{"url":"\/documentation\/ether\/ether\/error","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Error","navigatorTitle":[{"kind":"identifier","text":"Error"}],"type":"topic","title":"Ether.Error","abstract":[{"type":"text","text":"An error that can occur while using Ether."},{"type":"text","text":" "},{"text":"This can help give insight into what went wrong.","type":"text"},{"type":"text","text":" "},{"text":"As long as the issue wasn’t server-side, network-related, or a bug in Ether, this should hopefully help you resolve the issue!","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If not, or if you suspect a bug in Ether, please "},{"type":"reference","identifier":"https:\/\/github.com\/JacobSyndeo\/Ether\/issues\/new","isActive":true},{"type":"text","text":", and I’ll do my best to help you out!"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"Error","kind":"identifier"}]},"doc://Ether/documentation/Ether/EtherSingularFetchable/fetch(id:parameters:container:keyPath:)":{"kind":"symbol","url":"\/documentation\/ether\/ethersingularfetchable\/fetch(id:parameters:container:keypath:)","abstract":[{"type":"text","text":"Fetch an instance of this type from the server, unwrapping from a container type."}],"title":"fetch(id:parameters:container:keyPath:)","type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/fetch(id:parameters:container:keyPath:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"fetch","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Container"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"parameters"},{"kind":"text","text":": "},{"text":"Ether","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5EtherAAV10Parametersa","text":"Parameters","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"container","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"keyPath"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Container","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol"}}}