{"kind":"article","primaryContentSections":[{"content":[{"anchor":"Overview","level":2,"text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s say you want to go fetch an instance of "},{"code":"Blade","type":"codeVoice"},{"type":"text","text":" with ID "},{"code":"1","type":"codeVoice"},{"type":"text","text":"."}]},{"inlineContent":[{"type":"text","text":"Normally, you’d write some code looking like this:"}],"type":"paragraph"},{"code":["let url = URL(string: \"https:\/\/xcapi.com\/blades\")! \/\/ Someone should make this API…","","var request = URLRequest(url: url)","request.httpMethod = \"GET\"","","let task = URLSession.shared.dataTask(with: request) { data, response, error in","    guard error == nil else {","        \/\/ Handle error…","        return","    }","    ","    do {","        if let pyra = try JSONDecoder().decode(Blade.self, from: data) {","            \/\/ It's about time!","        }","    } catch {","        \/\/ Handle error…","    }","}","","task.resume()"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"…Yikes."}],"type":"emphasis"},{"type":"text","text":" Are we cavemen?? Surely we can do better."}]},{"type":"heading","text":"GET","anchor":"GET","level":2},{"inlineContent":[{"type":"text","text":"Let’s replace this GET request using Ether:"}],"type":"paragraph"},{"type":"codeListing","code":["let pyra = try? await Ether.get(route: Routes.blade(id: 1),","                                type: Blade.self)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Yep, Ether will not only perform the request for you, in one call, using async\/await, but it will even decode the result into the "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" type you want to use."}]},{"text":"POST","anchor":"POST","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"What about ","type":"text"},{"code":"POST","type":"codeVoice"},{"type":"text","text":"s?"}]},{"code":["try? await Ether.post(route: Routes.time,","                      with: reyn)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Dead simple.","type":"text"}]},{"text":"Custom Requests","anchor":"Custom-Requests","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Okay, but what about those times when you need to send a "},{"code":"PUT","type":"codeVoice"},{"text":" request the server, using a dictionary ","type":"text"},{"inlineContent":[{"text":"without","type":"text"}],"type":"emphasis"},{"type":"text","text":" a corresponding struct, "},{"type":"emphasis","inlineContent":[{"text":"AND","type":"text"}]},{"text":" it needs GZip encoding?","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"…sounds ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"awfully"}]},{"text":" contrived, but hey, Ether’s got you covered here as well:","type":"text"}],"type":"paragraph"},{"code":["let result = try? await Ether.request(route: Routes.locations,","                                      method: .put,","                                      parameters: [\"Dunban\": \"over there\"],","                                      usingEncoding: .gZip)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Enjoy!","type":"text"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Ether\/documentation\/Ether\/Quick-Overview"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"Ether"}],"roleHeading":"Article","role":"collectionGroup","title":"Quick Overview"},"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/Ether\/documentation\/Ether\/Introduction","doc:\/\/Ether\/documentation\/Ether\/Usage"],"generated":true,"title":"Essentials"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ether\/quick-overview"]}],"abstract":[{"type":"text","text":"A quick glance at Ether"}],"references":{"doc://Ether/documentation/Ether/Introduction":{"url":"\/documentation\/ether\/introduction","abstract":[{"type":"text","text":"What is Ether, and why should you use it?"}],"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/Introduction","role":"collectionGroup","kind":"article","title":"Introduction"},"doc://Ether/documentation/Ether":{"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}],"kind":"symbol","url":"\/documentation\/ether","role":"collection","title":"Ether"},"doc://Ether/documentation/Ether/Usage":{"kind":"article","role":"collectionGroup","url":"\/documentation\/ether\/usage","type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/Usage","abstract":[{"type":"text","text":"There are several ways to use Ether. This article will help you decide which way to use, and in which cases."}],"title":"Usage"}}}