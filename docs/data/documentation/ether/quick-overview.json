{"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"inlineContent":[{"type":"text","text":"Let’s say you want to go fetch an instance of "},{"type":"codeVoice","code":"Blade"},{"text":" with ID ","type":"text"},{"type":"codeVoice","code":"1"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Normally, you’d write some code looking like this:"}]},{"syntax":"swift","code":["let url = URL(string: \"https:\/\/xcapi.com\/blades\")! \/\/ Someone should make this API…","","var request = URLRequest(url: url)","request.httpMethod = \"GET\"","","let task = URLSession.shared.dataTask(with: request) { data, response, error in","    guard error == nil else {","        \/\/ Handle error…","        return","    }","    ","    do {","        if let pyra = try JSONDecoder().decode(Blade.self, from: data) {","            \/\/ It's about time!","        }","    } catch {","        \/\/ Handle error…","    }","}","","task.resume()"],"type":"codeListing"},{"inlineContent":[{"type":"emphasis","inlineContent":[{"text":"…Yikes.","type":"text"}]},{"type":"text","text":" Are we cavemen?? Surely we can do better."}],"type":"paragraph"},{"level":2,"type":"heading","text":"GET","anchor":"GET"},{"inlineContent":[{"text":"Let’s replace this GET request using Ether:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let pyra = try? await Ether.get(route: Routes.blade(id: 1),","                                type: Blade.self)"]},{"type":"paragraph","inlineContent":[{"text":"Yep, Ether will not only perform the request for you, in one call, using async\/await, but it will even decode the result into the ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" type you want to use.","type":"text"}]},{"anchor":"POST","text":"POST","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"What about "},{"type":"codeVoice","code":"POST"},{"type":"text","text":"s?"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["try? await Ether.post(route: Routes.time,","                      with: reyn)"]},{"inlineContent":[{"type":"text","text":"Dead simple."}],"type":"paragraph"},{"type":"heading","anchor":"Custom-Requests","text":"Custom Requests","level":2},{"type":"paragraph","inlineContent":[{"text":"Okay, but what about those times when you need to send a ","type":"text"},{"code":"PUT","type":"codeVoice"},{"type":"text","text":" request the server, using a dictionary "},{"inlineContent":[{"type":"text","text":"without"}],"type":"emphasis"},{"text":" a corresponding struct, ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"AND","type":"text"}]},{"text":" it needs GZip encoding?","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"…sounds "},{"inlineContent":[{"type":"text","text":"awfully"}],"type":"emphasis"},{"text":" contrived, but hey, Ether’s got you covered here as well:","type":"text"}]},{"code":["let result = try? await Ether.request(route: Routes.locations,","                                      method: .put,","                                      parameters: [\"Dunban\": \"over there\"],","                                      usingEncoding: .gZip)"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"Enjoy!","type":"text"}],"type":"paragraph"}]}],"kind":"article","abstract":[{"text":"A quick glance at Ether","type":"text"}],"sections":[],"seeAlsoSections":[{"title":"Essentials","identifiers":["doc:\/\/Ether\/documentation\/Ether\/Introduction","doc:\/\/Ether\/documentation\/Ether\/Usage"],"generated":true}],"metadata":{"role":"collectionGroup","roleHeading":"Article","modules":[{"name":"Ether"}],"title":"Quick Overview"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ether\/quick-overview"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Ether\/documentation\/Ether\/Quick-Overview"},"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether"]]},"references":{"doc://Ether/documentation/Ether/Usage":{"abstract":[{"text":"There are several ways to use Ether. This article will help you decide which way to use, and in which cases.","type":"text"}],"title":"Usage","identifier":"doc:\/\/Ether\/documentation\/Ether\/Usage","role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/ether\/usage"},"doc://Ether/documentation/Ether":{"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether","role":"collection","url":"\/documentation\/ether","abstract":[{"text":"Welcome to easy, clean, Swifty networking!","type":"text"}],"kind":"symbol","title":"Ether"},"doc://Ether/documentation/Ether/Introduction":{"kind":"article","role":"collectionGroup","type":"topic","abstract":[{"text":"What is Ether, and why should you use it?","type":"text"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Introduction","title":"Introduction","url":"\/documentation\/ether\/introduction"}}}