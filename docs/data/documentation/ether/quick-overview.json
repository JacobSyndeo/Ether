{"kind":"article","sections":[],"abstract":[{"type":"text","text":"A quick glance at Ether"}],"seeAlsoSections":[{"title":"Essentials","identifiers":["doc:\/\/Ether\/documentation\/Ether\/Introduction","doc:\/\/Ether\/documentation\/Ether\/Usage"],"generated":true}],"primaryContentSections":[{"content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Letâ€™s say you want to go fetch an instance of "},{"type":"codeVoice","code":"Blade"},{"type":"text","text":" with ID "},{"type":"codeVoice","code":"1"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Normally, youâ€™d write some code looking like this:"}]},{"type":"codeListing","syntax":"swift","code":["let url = URL(string: \"https:\/\/xcapi.com\/blades\/1\")! \/\/ Someone should make this APIâ€¦","","var request = URLRequest(url: url)","request.httpMethod = \"GET\"","","let task = URLSession.shared.dataTask(with: request) { data, response, error in","    guard error == nil else {","        \/\/ Handle errorâ€¦","        return","    }","    ","    do {","        if let pyra = try JSONDecoder().decode(Blade.self, from: data) {","            \/\/ It's about time!","        }","    } catch {","        \/\/ Handle errorâ€¦","    }","}","","task.resume()"]},{"type":"paragraph","inlineContent":[{"type":"emphasis","inlineContent":[{"type":"text","text":"â€¦Yikes."}]},{"text":" Are we cavemen?? Surely we can do better.","type":"text"}]},{"text":"GET","level":2,"anchor":"GET","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Letâ€™s replace this GET request using Ether:"}]},{"code":["let pyra = try? await Ether.get(route: Routes.blade(id: 1),","                                type: Blade.self)"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Yep, Ether will not only perform the request for you, in one call, using async\/await, but it will even decode the result into the ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" type you want to use."}],"type":"paragraph"},{"type":"heading","level":2,"text":"POST","anchor":"POST"},{"type":"paragraph","inlineContent":[{"text":"What about ","type":"text"},{"code":"POST","type":"codeVoice"},{"type":"text","text":"s?"}]},{"code":["try? await Ether.post(route: Routes.time,","                      with: reyn)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Dead simple."}]},{"type":"heading","level":2,"text":"Custom Requests","anchor":"Custom-Requests"},{"inlineContent":[{"text":"Okay, but what about those times when you need to send a ","type":"text"},{"code":"PUT","type":"codeVoice"},{"type":"text","text":" request the server, using a dictionary "},{"type":"emphasis","inlineContent":[{"type":"text","text":"without"}]},{"text":" a corresponding struct, ","type":"text"},{"inlineContent":[{"text":"AND","type":"text"}],"type":"emphasis"},{"type":"text","text":" it needs GZip encoding?"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"â€¦sounds "},{"type":"emphasis","inlineContent":[{"type":"text","text":"awfully"}]},{"type":"text","text":" contrived, but hey, Etherâ€™s got you covered here as well:"}]},{"type":"codeListing","syntax":"swift","code":["let result = try? await Ether.request(route: Routes.locations,","                                      method: .put,","                                      parameters: [\"Dunban\": \"over there\"],","                                      usingEncoding: .gZip)"]},{"type":"paragraph","inlineContent":[{"text":"So there ya go! Not bad, huh? ðŸ˜Ž","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/ether\/quick-overview"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Ether\/documentation\/Ether\/Quick-Overview","interfaceLanguage":"swift"},"metadata":{"role":"article","roleHeading":"Article","modules":[{"name":"Ether"}],"title":"Quick Overview"},"references":{"doc://Ether/documentation/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether","role":"collection","title":"Ether","kind":"symbol","url":"\/documentation\/ether","type":"topic","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}]},"doc://Ether/documentation/Ether/Introduction":{"type":"topic","url":"\/documentation\/ether\/introduction","role":"collectionGroup","title":"Introduction","kind":"article","abstract":[{"type":"text","text":"What is Ether, and why should you use it?"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Introduction"},"doc://Ether/documentation/Ether/Usage":{"type":"topic","url":"\/documentation\/ether\/usage","role":"collectionGroup","title":"Usage","kind":"article","abstract":[{"type":"text","text":"There are several ways to use Ether. This article will help you decide which way to use, and in which cases."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Usage"}}}