{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s say you want to go fetch an instance of "},{"type":"codeVoice","code":"Blade"},{"type":"text","text":" with ID "},{"type":"codeVoice","code":"1"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Normally, you’d write some code looking like this:"}]},{"type":"codeListing","syntax":"swift","code":["let url = URL(string: \"https:\/\/xcapi.com\/blades\")! \/\/ Someone should make this API…","","var request = URLRequest(url: url)","request.httpMethod = \"GET\"","","let task = URLSession.shared.dataTask(with: request) { data, response, error in","    guard error == nil else {","        \/\/ Handle error…","        return","    }","    ","    do {","        if let pyra = try JSONDecoder().decode(Blade.self, from: data) {","            \/\/ It's about time!","        }","    } catch {","        \/\/ Handle error…","    }","}","","task.resume()"]},{"type":"paragraph","inlineContent":[{"type":"emphasis","inlineContent":[{"type":"text","text":"…Yikes."}]},{"type":"text","text":" Are we cavemen?? Surely we can do better."}]},{"anchor":"GET","level":2,"type":"heading","text":"GET"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s replace this GET request using Ether:"}]},{"type":"codeListing","syntax":"swift","code":["let pyra = try? await Ether.get(route: Routes.blade(id: 1),","                                type: Blade.self)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Yep, Ether will not only perform the request for you, in one call, using async\/await, but it will even decode the result into the "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" type you want to use."}]},{"anchor":"POST","level":2,"type":"heading","text":"POST"},{"type":"paragraph","inlineContent":[{"type":"text","text":"What about "},{"type":"codeVoice","code":"POST"},{"type":"text","text":"s?"}]},{"type":"codeListing","syntax":"swift","code":["try? await Ether.post(route: Routes.time,","                      with: reyn)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Dead simple."}]},{"anchor":"Custom-Requests","level":2,"type":"heading","text":"Custom Requests"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Okay, but what about those times when you need to send a "},{"type":"codeVoice","code":"PUT"},{"type":"text","text":" request the server, using a dictionary "},{"type":"emphasis","inlineContent":[{"type":"text","text":"without"}]},{"type":"text","text":" a corresponding struct, "},{"type":"emphasis","inlineContent":[{"type":"text","text":"AND"}]},{"type":"text","text":" it needs GZip encoding?"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"…sounds "},{"type":"emphasis","inlineContent":[{"type":"text","text":"awfully"}]},{"type":"text","text":" contrived, but hey, Ether’s got you covered here as well:"}]},{"type":"codeListing","syntax":"swift","code":["let result = try? await Ether.request(route: Routes.locations,","                                      method: .put,","                                      parameters: [\"Dunban\": \"over there\"],","                                      usingEncoding: .gZip)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Enjoy!"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/ether\/quick-overview"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Ether\/documentation\/Ether\/Quick-Overview","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A quick glance at Ether"}],"kind":"article","metadata":{"roleHeading":"Article","title":"Quick Overview","role":"collectionGroup","modules":[{"name":"Ether"}]},"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether"]]},"seeAlsoSections":[{"title":"Essentials","identifiers":["doc:\/\/Ether\/documentation\/Ether\/Introduction","doc:\/\/Ether\/documentation\/Ether\/Usage"],"generated":true}],"references":{"doc://Ether/documentation/Ether":{"role":"collection","title":"Ether","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}],"identifier":"doc:\/\/Ether\/documentation\/Ether","kind":"symbol","type":"topic","url":"\/documentation\/ether"},"doc://Ether/documentation/Ether/Introduction":{"role":"collectionGroup","title":"Introduction","abstract":[{"type":"text","text":"What is Ether, and why should you use it?"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Introduction","kind":"article","type":"topic","url":"\/documentation\/ether\/introduction"},"doc://Ether/documentation/Ether/Usage":{"role":"collectionGroup","title":"Usage","abstract":[{"type":"text","text":"There are several ways to use Ether. This article will help you decide which way to use, and in which cases."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Usage","kind":"article","type":"topic","url":"\/documentation\/ether\/usage"}}}