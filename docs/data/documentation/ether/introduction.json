{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Ether\/documentation\/Ether\/Introduction"},"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"content":[{"anchor":"What-is-Ether","type":"heading","level":2,"text":"What is Ether?"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Ether is a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"delightful"}]},{"text":" networking library for Swift. It’s designed to be lightweight, easy to use, and easy to understand.","type":"text"}]},{"level":2,"text":"Why another networking library?","type":"heading","anchor":"Why-another-networking-library"},{"type":"paragraph","inlineContent":[{"text":"With so many networking libraries out there, why did I make Ether?","type":"text"}]},{"inlineContent":[{"text":"After exploring and trying many networking libraries, I found that they all had some problems:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"They’re overcomplicated","type":"text"}]},{"text":". Most networking libraries have a complicated API that is hard to understand and use. Often, you have to chain together a lot of methods and properties, which makes the code hard to read and understand.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"They feel heavy"}]},{"text":". Most networking libraries feel heavy, requiring a lot of boilerplate code and a lot of setup.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"No Swift Concurrency support","type":"text"}]},{"text":". Most networking libraries don’t support Swift Concurrency. They don’t use async\/await, requiring a lot of closures and completion handlers that clutter up your codebase, making it harder to read, understand, and maintain.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"They’re not generic","type":"text"}],"type":"strong"},{"type":"text","text":". Many networking libraries don’t support generics, simply returning "},{"type":"codeVoice","code":"Data"},{"text":" or ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":". This is an anti-pattern in Swift, and it makes it harder to use the library.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"They don’t use Swift errors","type":"text"}]},{"type":"text","text":". Many networking libraries aren’t using Swift errors, instead opting for custom result types, which is less semantic and makes it harder to handle errors."}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"Ether is designed to solve these problems:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"It’s easy to use","type":"text"}],"type":"strong"},{"text":". Ether is designed to be easy to use, with useful defaults and a simple API.","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"It’s easy to understand","type":"text"}],"type":"strong"},{"text":". Ether is designed to be easy to understand. It follows Swift’s “progressive disclosure” design pattern, where you only need to learn about the features you need. I’ve also put a lot of effort into making the documentation clear and easy to understand.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"It’s lightweight"}]},{"type":"text","text":". Ether is designed to be lightweight. It relies on Swift’s built-in "},{"type":"codeVoice","code":"URLSession"},{"type":"text","text":" and "},{"type":"codeVoice","code":"JSONEncoder"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"JSONDecoder"},{"text":" types, and it doesn’t require a lot of boilerplate code or setup.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Full Swift Concurrency support","type":"text"}]},{"type":"text","text":". Ether is designed to support Swift Concurrency. It uses async\/await, which makes it easier to use and understand."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"It’s generic"}]},{"type":"text","text":". Ether is designed to be generic. It can be used with any type that conforms to "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":", which makes it easier to use. Conforming to "},{"code":"Fetchable","type":"codeVoice"},{"type":"text","text":" provides even more features."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"It uses Swift errors"}]},{"type":"text","text":". Ether properly handles errors, including network errors and HTTP errors, and throws them as Swift errors."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"It’s open-source"}]},{"type":"text","text":". Ether is open source! It’s free to use, and anyone can contribute to it."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Furthermore, Ether has some features that you won’t find in other networking libraries:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Automatic decoding"}],"type":"strong"},{"type":"text","text":". Ether automatically decodes JSON responses into Swift types. This not only makes it easier to use, but greatly reduces the amount of boilerplate code you need to write."}],"type":"paragraph"}]}]},{"text":"Getting started","type":"heading","level":2,"anchor":"Getting-started"},{"type":"paragraph","inlineContent":[{"text":"Ready to get started? Check out the ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Quick-Overview","isActive":true,"type":"reference"},{"text":"!","type":"text"}]}],"kind":"content"}],"kind":"article","metadata":{"role":"collectionGroup","modules":[{"name":"Ether"}],"roleHeading":"Article","title":"Introduction"},"variants":[{"paths":["\/documentation\/ether\/introduction"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"title":"Essentials","identifiers":["doc:\/\/Ether\/documentation\/Ether\/Quick-Overview","doc:\/\/Ether\/documentation\/Ether\/Usage"],"generated":true}],"sections":[],"abstract":[{"type":"text","text":"What is Ether, and why should you use it?"}],"references":{"doc://Ether/documentation/Ether/Quick-Overview":{"type":"topic","url":"\/documentation\/ether\/quick-overview","abstract":[{"text":"A quick glance at Ether","type":"text"}],"kind":"article","role":"article","title":"Quick Overview","identifier":"doc:\/\/Ether\/documentation\/Ether\/Quick-Overview"},"doc://Ether/documentation/Ether/Usage":{"type":"topic","url":"\/documentation\/ether\/usage","role":"collectionGroup","title":"Usage","kind":"article","abstract":[{"type":"text","text":"There are several ways to use Ether. This article will help you decide which way to use, and in which cases."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Usage"},"doc://Ether/documentation/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether","role":"collection","title":"Ether","kind":"symbol","url":"\/documentation\/ether","type":"topic","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}]}}}