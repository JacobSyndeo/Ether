{"kind":"article","primaryContentSections":[{"kind":"content","content":[{"anchor":"What-is-Ether","level":2,"text":"What is Ether?","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Ether is a delightful and easy to understand networking library for Swift. It’s designed to be lightweight, easy to use, and easy to understand."}]},{"anchor":"Why-another-networking-library","text":"Why another networking library?","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"With so many networking libraries out there, why did I make Ether?"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"After exploring and trying many networking libraries, I found that they all had some problems:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"They’re overcomplicated"}]},{"text":". Most networking libraries have a complicated API that is hard to understand and use. Often, you have to chain together a lot of methods and properties, which makes the code hard to read and understand.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"They feel heavy"}],"type":"strong"},{"type":"text","text":". Most networking libraries feel heavy, requiring a lot of boilerplate code and a lot of setup."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"No Swift Concurrency support"}]},{"type":"text","text":". Most networking libraries don’t support Swift Concurrency. They don’t use async\/await, requiring a lot of closures and completion handlers that clutter up your codebase, making it harder to read, understand, and maintain."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"They’re not generic"}],"type":"strong"},{"type":"text","text":". Many networking libraries don’t support generics, simply returning "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" or "},{"type":"codeVoice","code":"Any"},{"type":"text","text":". This is an anti-pattern in Swift, and it makes it harder to use the library."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"They don’t use Swift errors"}]},{"text":". Many networking libraries aren’t using Swift errors, instead opting for custom result types, which is less semantic and makes it harder to handle errors.","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Ether is designed to solve these problems:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"It’s easy to use","type":"text"}]},{"type":"text","text":". Ether is designed to be easy to use, with useful defaults and a simple API."}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"It’s easy to understand"}]},{"text":". Ether is designed to be easy to understand. It follows Swift’s “progressive disclosure” design pattern, where you only need to learn about the features you need. I’ve also put a lot of effort into making the documentation clear and easy to understand.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"It’s lightweight","type":"text"}],"type":"strong"},{"type":"text","text":". Ether is designed to be lightweight. It relies on Swift’s built-in "},{"type":"codeVoice","code":"URLSession"},{"type":"text","text":" and "},{"code":"JSONEncoder","type":"codeVoice"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":" types, and it doesn’t require a lot of boilerplate code or setup."}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Full Swift Concurrency support","type":"text"}],"type":"strong"},{"type":"text","text":". Ether is designed to support Swift Concurrency. It uses async\/await, which makes it easier to use and understand."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"It’s generic","type":"text"}]},{"type":"text","text":". Ether is designed to be generic. It can be used with any type that conforms to "},{"code":"Codable","type":"codeVoice"},{"text":", which makes it easier to use. Conforming to ","type":"text"},{"code":"Fetchable","type":"codeVoice"},{"type":"text","text":" provides even more features."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"It uses Swift errors","type":"text"}],"type":"strong"},{"type":"text","text":". Ether properly handles errors, including network errors and HTTP errors, and throws them as Swift errors."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"It’s open-source"}]},{"type":"text","text":". Ether is open source! It’s free to use, and anyone can contribute to it."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"Furthermore, Ether has some features that you won’t find in other networking libraries:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Automatic decoding"}]},{"type":"text","text":". Ether automatically decodes JSON responses into Swift types. This not only makes it easier to use, but greatly reduces the amount of boilerplate code you need to write."}],"type":"paragraph"}]}]},{"type":"heading","text":"Getting started","level":2,"anchor":"Getting-started"},{"inlineContent":[{"type":"text","text":"Ready to get started? Check out the "},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Quick-Overview","type":"reference"},{"text":"!","type":"text"}],"type":"paragraph"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Ether\/documentation\/Ether\/Introduction"},"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether"]]},"abstract":[{"text":"What is Ether, and why should you use it?","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/Ether\/documentation\/Ether\/Quick-Overview","doc:\/\/Ether\/documentation\/Ether\/Usage"],"title":"Essentials","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ether\/introduction"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"modules":[{"name":"Ether"}],"role":"collectionGroup","roleHeading":"Article","title":"Introduction"},"sections":[],"references":{"doc://Ether/documentation/Ether/Usage":{"kind":"article","role":"collectionGroup","url":"\/documentation\/ether\/usage","type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/Usage","abstract":[{"type":"text","text":"There are several ways to use Ether. This article will help you decide which way to use, and in which cases."}],"title":"Usage"},"doc://Ether/documentation/Ether":{"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}],"kind":"symbol","url":"\/documentation\/ether","role":"collection","title":"Ether"},"doc://Ether/documentation/Ether/Quick-Overview":{"abstract":[{"text":"A quick glance at Ether","type":"text"}],"title":"Quick Overview","type":"topic","role":"collectionGroup","identifier":"doc:\/\/Ether\/documentation\/Ether\/Quick-Overview","url":"\/documentation\/ether\/quick-overview","kind":"article"}}}