{"identifier":{"url":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherSingularFetchable"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Se","text":"Decodable","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/ether\/ethersingularfetchable"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"title":"Inherits From","kind":"relationships","identifiers":["doc:\/\/Ether\/Se"],"type":"inheritsFrom"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"EtherSingularFetchable"}],"roleHeading":"Protocol","externalID":"s:5Ether0A17SingularFetchableP","modules":[{"name":"Ether"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EtherSingularFetchable"}],"role":"symbol","symbolKind":"protocol","title":"EtherSingularFetchable"},"abstract":[{"type":"text","text":"Types conforming to "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","isActive":true},{"text":" assert that their APIs provide a way to get single instances back, usually by providing an identifier.","type":"text"}],"seeAlsoSections":[{"title":"Fetchable","identifiers":["doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"],"generated":true}],"kind":"symbol","topicSections":[{"title":"Type Methods","identifiers":["doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/fetch(id:parameters:)","doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/fetch(id:parameters:container:keyPath:)","doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/fetchWithContainer(id:parameters:container:)","doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/singularRoute(id:)"]}],"references":{"doc://Ether/documentation/Ether/EtherPluralFetchable":{"kind":"symbol","abstract":[{"type":"text","text":"Types conforming to "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","isActive":true},{"type":"text","text":" assert that their APIs provide a way to get multiple instances back, optionally filtered by fields specified in "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","isActive":true}],"navigatorTitle":[{"kind":"identifier","text":"EtherPluralFetchable"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EtherPluralFetchable"}],"title":"EtherPluralFetchable","url":"\/documentation\/ether\/etherpluralfetchable"},"doc://Ether/documentation/Ether/EtherFetchable":{"type":"topic","url":"\/documentation\/ether\/etherfetchable","abstract":[{"type":"text","text":"A typealias representing conformance to both "},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","type":"reference"},{"text":" and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"EtherFetchable","kind":"identifier"}],"navigatorTitle":[{"text":"EtherFetchable","kind":"identifier"}],"role":"symbol","title":"EtherFetchable","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable"},"doc://Ether/documentation/Ether/EtherSingularFetchable/fetch(id:parameters:)":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/fetch(id:parameters:)","url":"\/documentation\/ether\/ethersingularfetchable\/fetch(id:parameters:)","kind":"symbol","type":"topic","abstract":[{"text":"Fetch an instance of this type from the server.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"fetch","kind":"identifier"},{"kind":"text","text":"("},{"text":"id","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"?, ","kind":"text"},{"text":"parameters","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Ether","preciseIdentifier":"s:5EtherAAV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Parameters","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV10Parametersa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","title":"fetch(id:parameters:)"},"doc://Ether/documentation/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether","role":"collection","title":"Ether","kind":"symbol","url":"\/documentation\/ether","type":"topic","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}]},"doc://Ether/documentation/Ether/Ether/FetchableFilters":{"kind":"symbol","title":"Ether.FetchableFilters","type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","url":"\/documentation\/ether\/ether\/fetchablefilters","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FetchableFilters","kind":"identifier"}],"abstract":[{"type":"text","text":"A set of filters that can be used to narrow down results of queries. May or may not be supported by the API endpoint youâ€™re calling."}],"navigatorTitle":[{"text":"FetchableFilters","kind":"identifier"}],"role":"symbol"},"doc://Ether/documentation/Ether/EtherSingularFetchable/fetch(id:parameters:container:keyPath:)":{"url":"\/documentation\/ether\/ethersingularfetchable\/fetch(id:parameters:container:keypath:)","kind":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/fetch(id:parameters:container:keyPath:)","type":"topic","abstract":[{"text":"Fetch an instance of this type from the server, unwrapping from a container type.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"fetch"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"parameters"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5EtherAAV10Parametersa","kind":"typeIdentifier","text":"Parameters"},{"text":", ","kind":"text"},{"text":"container","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Container"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"keyPath"},{"text":": ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","title":"fetch(id:parameters:container:keyPath:)"},"doc://Ether/documentation/Ether/EtherSingularFetchable/fetchWithContainer(id:parameters:container:)":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/fetchWithContainer(id:parameters:container:)","url":"\/documentation\/ether\/ethersingularfetchable\/fetchwithcontainer(id:parameters:container:)","kind":"symbol","type":"topic","abstract":[{"text":"Fetch an instance of this type from the server, within a container type.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"fetchWithContainer","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Container"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"text":"parameters","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Ether","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:5EtherAAV10Parametersa","text":"Parameters","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"container","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Container","kind":"typeIdentifier"}],"role":"symbol","title":"fetchWithContainer(id:parameters:container:)"},"doc://Ether/documentation/Ether/EtherSingularFetchable":{"type":"topic","url":"\/documentation\/ether\/ethersingularfetchable","abstract":[{"text":"Types conforming to ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","isActive":true},{"type":"text","text":" assert that their APIs provide a way to get single instances back, usually by providing an identifier."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"EtherSingularFetchable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"EtherSingularFetchable"}],"role":"symbol","title":"EtherSingularFetchable","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"},"doc://Ether/Se":{"type":"unresolvable","identifier":"doc:\/\/Ether\/Se","title":"Swift.Decodable"},"doc://Ether/documentation/Ether/EtherSingularFetchable/singularRoute(id:)":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable\/singularRoute(id:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"singularRoute","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:5Ether0A5RouteP","text":"EtherRoute","kind":"typeIdentifier"}],"url":"\/documentation\/ether\/ethersingularfetchable\/singularroute(id:)","title":"singularRoute(id:)","required":true,"role":"symbol","abstract":[{"type":"text","text":"The route used to request single instances of this type."},{"text":" ","type":"text"},{"type":"text","text":"Set this up to return proper route endpoints for any provided identifier (or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":", if appropriate for the API)."}],"kind":"symbol"}}}