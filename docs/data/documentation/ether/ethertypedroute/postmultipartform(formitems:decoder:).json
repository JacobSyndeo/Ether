{"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"postMultipartForm"},{"text":"(","kind":"text"},{"text":"formItems","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","text":"Ether","preciseIdentifier":"s:5EtherAAV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FormValue","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FormValue","preciseIdentifier":"s:5EtherAAV9FormValueO"},{"text":"] = [:], ","kind":"text"},{"text":"decoder","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder","kind":"typeIdentifier"},{"kind":"text","text":" = .init()) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:5EtherAAV","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","kind":"typeIdentifier","text":"Ether"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Response","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Response","preciseIdentifier":"s:5EtherAAV8ResponseV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"DecodedType","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The form items to include in the request. The key is the name of the form item, and the value is a ","type":"text"},{"type":"codeVoice","code":"FormValue"},{"type":"text","text":" that specifies the value of the form item."}]}],"name":"formItems"},{"name":"responseFormat","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The type of data to bundle in the response. Defaults to "},{"code":"DummyTypeUsedWhenNoDecodableIsRequested","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"JSONDecoder","type":"codeVoice"},{"type":"text","text":" to use. You can create your own instance to customize its behavior before passing it in, if you’d like."}]}],"name":"decoder"}]},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"The response from the server, bundled in a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Response"},{"text":".","type":"text"}]}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Error","isActive":true},{"text":", or any error thrown by the ","type":"text"},{"code":"URLSession","type":"codeVoice"},{"text":" data task, if the request fails.","type":"text"}]}],"name":"Throws","style":"note"},{"type":"paragraph","inlineContent":[{"text":"Compare with ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/postMultipartForm(route:formItems:responseFormat:decoder:)","isActive":true},{"type":"text","text":", the main version of this method."}]}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/ether\/ethertypedroute\/postmultipartform(formitems:decoder:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether","doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute"]]},"abstract":[{"type":"text","text":"This method sends a multipart POST request to the given URL."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute\/postMultipartForm(formItems:decoder:)"},"kind":"symbol","metadata":{"role":"symbol","roleHeading":"Instance Method","extendedModule":"Ether","title":"postMultipartForm(formItems:decoder:)","externalID":"s:5Ether0A10TypedRoutePAAE17postMultipartForm9formItems7decoderA2AV8ResponseVy_11DecodedTypeQzGSDySSAG0F5ValueOG_10Foundation11JSONDecoderCtYaKF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"postMultipartForm"},{"kind":"text","text":"("},{"kind":"externalParam","text":"formItems"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":" : ","kind":"text"},{"text":"Ether","preciseIdentifier":"s:5EtherAAV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5EtherAAV9FormValueO","text":"FormValue","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"decoder"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Ether","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV"},{"kind":"text","text":"."},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV8ResponseV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"DecodedType"},{"kind":"text","text":">"}],"symbolKind":"method","modules":[{"name":"Ether"}]},"references":{"doc://Ether/documentation/Ether":{"kind":"symbol","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}],"title":"Ether","identifier":"doc:\/\/Ether\/documentation\/Ether","url":"\/documentation\/ether","role":"collection","type":"topic"},"doc://Ether/documentation/Ether/Ether/FormValue":{"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FormValue","title":"Ether.FormValue","url":"\/documentation\/ether\/ether\/formvalue","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FormValue"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FormValue"}],"abstract":[{"text":"An enum of possible form values.","type":"text"}],"kind":"symbol"},"doc://Ether/documentation/Ether/Ether/Response":{"title":"Ether.Response","url":"\/documentation\/ether\/ether\/response","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Response","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Response","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Response"}],"abstract":[{"type":"text","text":"The data and metadata associated with the response to an HTTP protocol URL load request."}],"role":"symbol","type":"topic"},"doc://Ether/documentation/Ether/Ether/Error":{"url":"\/documentation\/ether\/ether\/error","title":"Ether.Error","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Error","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"An error that can occur while using Ether."},{"text":" ","type":"text"},{"type":"text","text":"This can help give insight into what went wrong."},{"type":"text","text":" "},{"type":"text","text":"As long as the issue wasn’t server-side, network-related, or a bug in Ether, this should hopefully help you resolve the issue!"},{"text":" ","type":"text"},{"type":"text","text":"If not, or if you suspect a bug in Ether, please "},{"type":"reference","identifier":"https:\/\/github.com\/JacobSyndeo\/Ether\/issues\/new","isActive":true},{"type":"text","text":", and I’ll do my best to help you out!"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Error"}],"navigatorTitle":[{"text":"Error","kind":"identifier"}]},"https://github.com/JacobSyndeo/Ether/issues/new":{"type":"link","title":"open an issue on GitHub","titleInlineContent":[{"type":"text","text":"open an issue on GitHub"}],"identifier":"https:\/\/github.com\/JacobSyndeo\/Ether\/issues\/new","url":"https:\/\/github.com\/JacobSyndeo\/Ether\/issues\/new"},"doc://Ether/documentation/Ether/EtherRoute":{"title":"EtherRoute","abstract":[{"text":"A custom protocol to which host apps can conform.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/ether\/etherroute","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EtherRoute","kind":"identifier"}],"navigatorTitle":[{"text":"EtherRoute","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","role":"symbol"},"doc://Ether/documentation/Ether/EtherTypedRoute/postMultipartForm(formItems:decoder:)":{"title":"postMultipartForm(formItems:decoder:)","abstract":[{"type":"text","text":"This method sends a multipart POST request to the given URL."}],"kind":"symbol","type":"topic","url":"\/documentation\/ether\/ethertypedroute\/postmultipartform(formitems:decoder:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"postMultipartForm","kind":"identifier"},{"text":"(","kind":"text"},{"text":"formItems","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:5EtherAAV","text":"Ether","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV9FormValueO","text":"FormValue"},{"text":"], ","kind":"text"},{"text":"decoder","kind":"externalParam"},{"kind":"text","text":": "},{"text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Ether","preciseIdentifier":"s:5EtherAAV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV8ResponseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"DecodedType"},{"kind":"text","text":">"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute\/postMultipartForm(formItems:decoder:)","role":"symbol"},"doc://Ether/documentation/Ether/EtherTypedRoute":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"EtherTypedRoute","kind":"identifier"}],"title":"EtherTypedRoute","type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherTypedRoute","role":"symbol","kind":"symbol","url":"\/documentation\/ether\/ethertypedroute","abstract":[{"text":"An extension of ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true,"type":"reference"},{"type":"text","text":" that allows routes to declare associated types, corresponding to the type to which the route’s contents decode."}],"navigatorTitle":[{"kind":"identifier","text":"EtherTypedRoute"}]},"doc://Ether/documentation/Ether/Ether":{"url":"\/documentation\/ether\/ether","navigatorTitle":[{"text":"Ether","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Ether"}],"title":"Ether"},"doc://Ether/documentation/Ether/Ether/postMultipartForm(route:formItems:responseFormat:decoder:)":{"url":"\/documentation\/ether\/ether\/postmultipartform(route:formitems:responseformat:decoder:)","kind":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/postMultipartForm(route:formItems:responseFormat:decoder:)","abstract":[{"type":"text","text":"Fires off a multipart POST request to the given URL."}],"type":"topic","title":"postMultipartForm(route:formItems:responseFormat:decoder:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"postMultipartForm"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"route","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Ether","preciseIdentifier":"s:5EtherAAV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Route","preciseIdentifier":"s:5EtherAAV5Routea","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"formItems"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:5EtherAAV","text":"Ether","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:5EtherAAV9FormValueO","text":"FormValue","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"text":"responseFormat","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"decoder","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Ether","preciseIdentifier":"s:5EtherAAV"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5EtherAAV8ResponseV","text":"Response"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}]}}}