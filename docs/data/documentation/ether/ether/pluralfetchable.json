{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether","doc:\/\/Ether\/documentation\/Ether\/Ether"]]},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"PluralFetchable"},{"text":" = ","kind":"text"},{"kind":"typeIdentifier","text":"EtherPluralFetchable","preciseIdentifier":"s:5Ether0A15PluralFetchableP","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"}]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Since it’s a protocol, it requires a global namespace, but typealiases can be namespaced within other types."},{"type":"text","text":" "},{"text":"This lets it be accessed as ","type":"text"},{"code":"Ether.PluralFetchable","type":"codeVoice"},{"text":", much like how ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Method"},{"type":"text","text":" is accessible as a type namespaced under "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","type":"reference","isActive":true},{"type":"text","text":", as well as other subtypes."}]},{"name":"See Also","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"}]}],"type":"aside"}],"kind":"content"}],"identifier":{"url":"doc:\/\/Ether\/documentation\/Ether\/Ether\/PluralFetchable","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ether\/ether\/pluralfetchable"]}],"metadata":{"extendedModule":"Ether","role":"symbol","navigatorTitle":[{"text":"PluralFetchable","kind":"identifier"}],"externalID":"s:5EtherAAV15PluralFetchablea","symbolKind":"typealias","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"PluralFetchable","kind":"identifier"}],"modules":[{"name":"Ether"}],"title":"Ether.PluralFetchable","roleHeading":"Type Alias"},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"A typealias for "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","isActive":true},{"type":"text","text":", namespaced under "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","isActive":true},{"type":"text","text":"."}],"references":{"doc://Ether/documentation/Ether/EtherPluralFetchable":{"kind":"symbol","abstract":[{"type":"text","text":"Types conforming to "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","isActive":true},{"type":"text","text":" assert that their APIs provide a way to get multiple instances back, optionally filtered by fields specified in "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","isActive":true}],"navigatorTitle":[{"kind":"identifier","text":"EtherPluralFetchable"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EtherPluralFetchable"}],"title":"EtherPluralFetchable","url":"\/documentation\/ether\/etherpluralfetchable"},"doc://Ether/documentation/Ether/Ether/PluralFetchable":{"kind":"symbol","abstract":[{"text":"A typealias for ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","isActive":true},{"type":"text","text":", namespaced under "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether"},{"type":"text","text":"."}],"navigatorTitle":[{"text":"PluralFetchable","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/PluralFetchable","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PluralFetchable"}],"title":"Ether.PluralFetchable","url":"\/documentation\/ether\/ether\/pluralfetchable"},"doc://Ether/documentation/Ether/Ether/FetchableFilters":{"kind":"symbol","title":"Ether.FetchableFilters","type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","url":"\/documentation\/ether\/ether\/fetchablefilters","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FetchableFilters","kind":"identifier"}],"abstract":[{"type":"text","text":"A set of filters that can be used to narrow down results of queries. May or may not be supported by the API endpoint you’re calling."}],"navigatorTitle":[{"text":"FetchableFilters","kind":"identifier"}],"role":"symbol"},"doc://Ether/documentation/Ether/Ether/Method":{"kind":"symbol","abstract":[{"text":"An enum of HTTP methods.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Method","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Method","url":"\/documentation\/ether\/ether\/method","navigatorTitle":[{"text":"Method","kind":"identifier"}],"title":"Ether.Method"},"doc://Ether/documentation/Ether/Ether":{"url":"\/documentation\/ether\/ether","title":"Ether","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Ether","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","navigatorTitle":[{"text":"Ether","kind":"identifier"}],"role":"symbol"},"doc://Ether/documentation/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether","role":"collection","title":"Ether","kind":"symbol","url":"\/documentation\/ether","type":"topic","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}]}}}