{"abstract":[{"type":"text","text":"A typealias for "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","isActive":true},{"type":"text","text":", namespaced under "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","type":"reference","isActive":true},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"PluralFetchable","kind":"identifier"},{"text":" = ","kind":"text"},{"kind":"typeIdentifier","text":"EtherPluralFetchable","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","preciseIdentifier":"s:5Ether0A15PluralFetchableP"}],"languages":["swift"]}]},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"text":"Since it’s a protocol, it requires a global namespace, but typealiases can be namespaced within other types.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This lets it be accessed as "},{"code":"Ether.PluralFetchable","type":"codeVoice"},{"text":", much like how ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Method"},{"type":"text","text":" is accessible as a type namespaced under "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","isActive":true},{"text":", as well as other subtypes.","type":"text"}],"type":"paragraph"},{"name":"See Also","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","isActive":true}]}],"type":"aside","style":"note"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/Ether\/documentation\/Ether\/Ether\/PluralFetchable","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ether\/ether\/pluralfetchable"]}],"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether","doc:\/\/Ether\/documentation\/Ether\/Ether"]]},"kind":"symbol","metadata":{"extendedModule":"Ether","navigatorTitle":[{"kind":"identifier","text":"PluralFetchable"}],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PluralFetchable"}],"role":"symbol","roleHeading":"Type Alias","symbolKind":"typealias","title":"Ether.PluralFetchable","externalID":"s:5EtherAAV15PluralFetchablea","modules":[{"name":"Ether"}]},"sections":[],"references":{"doc://Ether/documentation/Ether/Ether/FetchableFilters":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","navigatorTitle":[{"kind":"identifier","text":"FetchableFilters"}],"role":"symbol","url":"\/documentation\/ether\/ether\/fetchablefilters","kind":"symbol","type":"topic","title":"Ether.FetchableFilters","abstract":[{"type":"text","text":"A set of filters that can be used to narrow down results of queries. May or may not be supported by the API endpoint you’re calling."}],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FetchableFilters"}]},"doc://Ether/documentation/Ether/Ether/PluralFetchable":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PluralFetchable"}],"navigatorTitle":[{"text":"PluralFetchable","kind":"identifier"}],"abstract":[{"text":"A typealias for ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","isActive":true},{"type":"text","text":", namespaced under "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","isActive":true},{"text":".","type":"text"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/PluralFetchable","kind":"symbol","title":"Ether.PluralFetchable","url":"\/documentation\/ether\/ether\/pluralfetchable","type":"topic","role":"symbol"},"doc://Ether/documentation/Ether/Ether/Method":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Method","abstract":[{"text":"An enum of HTTP methods.","type":"text"}],"url":"\/documentation\/ether\/ether\/method","title":"Ether.Method","role":"symbol","navigatorTitle":[{"text":"Method","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Method","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://Ether/documentation/Ether/Ether":{"url":"\/documentation\/ether\/ether","navigatorTitle":[{"text":"Ether","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Ether"}],"title":"Ether"},"doc://Ether/documentation/Ether/EtherPluralFetchable":{"role":"symbol","abstract":[{"type":"text","text":"Types conforming to "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","type":"reference","isActive":true},{"type":"text","text":" assert that their APIs provide a way to get multiple instances back, optionally filtered by fields specified in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters"}],"title":"EtherPluralFetchable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EtherPluralFetchable"}],"kind":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","type":"topic","navigatorTitle":[{"text":"EtherPluralFetchable","kind":"identifier"}],"url":"\/documentation\/ether\/etherpluralfetchable"},"doc://Ether/documentation/Ether":{"kind":"symbol","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}],"title":"Ether","identifier":"doc:\/\/Ether\/documentation\/Ether","url":"\/documentation\/ether","role":"collection","type":"topic"}}}