{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ether\/ether\/fetchable"]}],"metadata":{"modules":[{"name":"Ether"}],"extendedModule":"Ether","symbolKind":"typealias","role":"symbol","externalID":"s:5EtherAAV9Fetchablea","roleHeading":"Type Alias","navigatorTitle":[{"kind":"identifier","text":"Fetchable"}],"title":"Ether.Fetchable","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Fetchable","kind":"identifier"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Fetchable"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"A typealias for ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","isActive":true},{"type":"text","text":", namespaced under "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","type":"reference","isActive":true},{"text":".","type":"text"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Fetchable"},{"kind":"text","text":" = "},{"preciseIdentifier":"s:5Ether0A9Fetchablea","text":"EtherFetchable","kind":"typeIdentifier","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Since itâ€™s a protocol, it requires a global namespace, but typealiases can be namespaced within other types.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This lets it be accessed as "},{"type":"codeVoice","code":"Ether.Fetchable"},{"text":", much like how ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Method"},{"text":" is accessible as a type namespaced under ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","isActive":true,"type":"reference"},{"type":"text","text":", as well as other subtypes."}]},{"name":"See Also","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","isActive":true}]}]}]}],"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether","doc:\/\/Ether\/documentation\/Ether\/Ether"]]},"references":{"doc://Ether/documentation/Ether/Ether/Method":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Method"}],"url":"\/documentation\/ether\/ether\/method","role":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Method","abstract":[{"type":"text","text":"An enum of HTTP methods."}],"type":"topic","kind":"symbol","title":"Ether.Method","navigatorTitle":[{"kind":"identifier","text":"Method"}]},"doc://Ether/documentation/Ether":{"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}],"kind":"symbol","url":"\/documentation\/ether","role":"collection","title":"Ether"},"doc://Ether/documentation/Ether/EtherSingularFetchable":{"url":"\/documentation\/ether\/ethersingularfetchable","navigatorTitle":[{"kind":"identifier","text":"EtherSingularFetchable"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EtherSingularFetchable"}],"title":"EtherSingularFetchable","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","abstract":[{"type":"text","text":"Types conforming to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"},{"text":" assert that their APIs provide a way to get single instances back, usually by providing an identifier.","type":"text"}],"type":"topic","kind":"symbol"},"doc://Ether/documentation/Ether/Ether/Fetchable":{"url":"\/documentation\/ether\/ether\/fetchable","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Fetchable","abstract":[{"text":"A typealias for ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","isActive":true},{"type":"text","text":", namespaced under "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","isActive":true},{"type":"text","text":"."}],"title":"Ether.Fetchable","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Fetchable","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"Fetchable","kind":"identifier"}]},"doc://Ether/documentation/Ether/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","navigatorTitle":[{"text":"Ether","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"title":"Ether","url":"\/documentation\/ether\/ether","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Ether","kind":"identifier"}]},"doc://Ether/documentation/Ether/EtherFetchable":{"url":"\/documentation\/ether\/etherfetchable","navigatorTitle":[{"text":"EtherFetchable","kind":"identifier"}],"role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"EtherFetchable","kind":"identifier"}],"abstract":[{"type":"text","text":"A typealias representing conformance to both "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","isActive":true,"type":"reference"},{"type":"text","text":" and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable"},{"type":"text","text":"."}],"kind":"symbol","title":"EtherFetchable","type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable"},"doc://Ether/documentation/Ether/EtherPluralFetchable":{"type":"topic","kind":"symbol","url":"\/documentation\/ether\/etherpluralfetchable","title":"EtherPluralFetchable","navigatorTitle":[{"text":"EtherPluralFetchable","kind":"identifier"}],"abstract":[{"text":"Types conforming to ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","type":"reference","isActive":true},{"text":" assert that their APIs provide a way to get multiple instances back, optionally filtered by fields specified in ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters","isActive":true}],"role":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EtherPluralFetchable"}]}}}