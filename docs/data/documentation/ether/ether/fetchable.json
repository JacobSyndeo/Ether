{"abstract":[{"type":"text","text":"A typealias for "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","type":"reference","isActive":true},{"type":"text","text":", namespaced under "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether"},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fetchable"},{"kind":"text","text":" = "},{"kind":"typeIdentifier","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","preciseIdentifier":"s:5Ether0A9Fetchablea","text":"EtherFetchable"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"Since itâ€™s a protocol, it requires a global namespace, but typealiases can be namespaced within other types.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This lets it be accessed as "},{"type":"codeVoice","code":"Ether.Fetchable"},{"type":"text","text":", much like how "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Method","isActive":true,"type":"reference"},{"type":"text","text":" is accessible as a type namespaced under "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether"},{"type":"text","text":", as well as other subtypes."}],"type":"paragraph"},{"name":"See Also","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable"}]}],"style":"note"}]}],"hierarchy":{"paths":[["doc:\/\/Ether\/documentation\/Ether","doc:\/\/Ether\/documentation\/Ether\/Ether"]]},"kind":"symbol","identifier":{"url":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Fetchable","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ether\/ether\/fetchable"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"roleHeading":"Type Alias","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Fetchable"}],"navigatorTitle":[{"text":"Fetchable","kind":"identifier"}],"externalID":"s:5EtherAAV9Fetchablea","extendedModule":"Ether","title":"Ether.Fetchable","role":"symbol","symbolKind":"typealias","modules":[{"name":"Ether"}]},"sections":[],"references":{"doc://Ether/documentation/Ether/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/ether\/ether","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Ether","kind":"identifier"}],"navigatorTitle":[{"text":"Ether","kind":"identifier"}],"abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"title":"Ether"},"doc://Ether/documentation/Ether/EtherSingularFetchable":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EtherSingularFetchable"}],"navigatorTitle":[{"text":"EtherSingularFetchable","kind":"identifier"}],"type":"topic","role":"symbol","title":"EtherSingularFetchable","url":"\/documentation\/ether\/ethersingularfetchable","abstract":[{"text":"Types conforming to ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"},{"text":" assert that their APIs provide a way to get single instances back, usually by providing an identifier.","type":"text"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable"},"doc://Ether/documentation/Ether/Ether/Fetchable":{"url":"\/documentation\/ether\/ether\/fetchable","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Fetchable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Fetchable"}],"abstract":[{"type":"text","text":"A typealias for "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","isActive":true},{"type":"text","text":", namespaced under "},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","type":"reference"},{"text":".","type":"text"}],"title":"Ether.Fetchable","type":"topic","role":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Fetchable"},"doc://Ether/documentation/Ether":{"url":"\/documentation\/ether","type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether","title":"Ether","role":"collection","abstract":[{"text":"Welcome to easy, clean, Swifty networking!","type":"text"}],"kind":"symbol"},"doc://Ether/documentation/Ether/Ether/Method":{"url":"\/documentation\/ether\/ether\/method","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Method"}],"navigatorTitle":[{"text":"Method","kind":"identifier"}],"kind":"symbol","title":"Ether.Method","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Method","type":"topic","abstract":[{"type":"text","text":"An enum of HTTP methods."}],"role":"symbol"},"doc://Ether/documentation/Ether/EtherFetchable":{"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"EtherFetchable","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherFetchable","navigatorTitle":[{"kind":"identifier","text":"EtherFetchable"}],"title":"EtherFetchable","kind":"symbol","url":"\/documentation\/ether\/etherfetchable","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A typealias representing conformance to both "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherSingularFetchable","type":"reference","isActive":true},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","isActive":true},{"text":".","type":"text"}]},"doc://Ether/documentation/Ether/EtherPluralFetchable":{"abstract":[{"type":"text","text":"Types conforming to "},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","type":"reference"},{"type":"text","text":" assert that their APIs provide a way to get multiple instances back, optionally filtered by fields specified in "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/FetchableFilters"}],"role":"symbol","type":"topic","title":"EtherPluralFetchable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EtherPluralFetchable"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherPluralFetchable","url":"\/documentation\/ether\/etherpluralfetchable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"EtherPluralFetchable","kind":"identifier"}]}}}