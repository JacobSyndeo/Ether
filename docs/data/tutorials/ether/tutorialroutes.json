{"variants":[{"paths":["\/tutorials\/ether\/tutorialroutes"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"project","metadata":{"categoryPathComponent":"Request-Tutorial-ToC","category":"Ether","title":"Setting Up Your Routes","role":"project"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC","modules":[{"projects":[],"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Introduction"},{"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes","projects":[{"sections":[{"reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Creating-your-Routes-enum","kind":"task"},{"reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Check-Your-Understanding","kind":"assessment"}],"reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes"}]}],"paths":[["doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC","doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/$volume","doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes"]]},"sections":[{"kind":"hero","chapter":"Setting Up Routes","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In this tutorial, you’ll learn how to set up your "},{"type":"codeVoice","code":"Routes"},{"type":"text","text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access."}]},{"type":"paragraph","inlineContent":[{"text":"If you’re reading this, we’ll assume you have already created a project and successfully imported ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether","isActive":true},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We’ll be using the "},{"type":"reference","identifier":"https:\/\/swapi.dev\/","isActive":true},{"type":"text","text":" for this tutorial."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"s@Image(source: xwing.jpeg, alt: “A photo of X-wing Starfighters from Star Wars.”)"}]}],"title":"Setting Up Your Routes","estimatedTimeInMinutes":10},{"kind":"tasks","tasks":[{"contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We’ll start by creating an enum to hold and manage our routes."}]}],"kind":"contentAndMedia","media":"web.png","mediaPosition":"trailing"}],"title":"Creating your Routes enum","anchor":"Creating-your-Routes-enum","stepsSection":[{"caption":[{"inlineContent":[{"text":"A good habit is to name this file and enum in a way that makes it clear ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"which"}]},{"text":" API you’re building routes for. Since this is the Star Wars API, we use the “SW” prefix.","type":"text"}],"type":"paragraph"}],"media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Create a new Swift file in your project, naming it ","type":"text"},{"type":"codeVoice","code":"SWRoutes.swift"},{"text":".","type":"text"}]}],"code":"TutorialNewFile.swift","runtimePreview":null,"type":"step"},{"code":"TutorialRoutes-1-1-Import.swift","type":"step","media":null,"runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"type":"text","text":"In your new file, import "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether"},{"type":"text","text":", and declare an "},{"code":"enum","type":"codeVoice"},{"type":"text","text":" called "},{"type":"codeVoice","code":"SWRoutes"},{"text":", conforming to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","isActive":true},{"type":"text","text":" protocol."}],"type":"paragraph"}]},{"caption":[{"inlineContent":[{"text":"We do this because the URL ","type":"text"},{"type":"reference","identifier":"https:\/\/swapi.dev\/people\/1","isActive":true},{"text":" has an integer at the end, which is the ID of the person. We therefore model our route as a case that accepts an integer.","type":"text"}],"type":"paragraph"}],"content":[{"inlineContent":[{"text":"Add a case for the ","type":"text"},{"code":"people","type":"codeVoice"},{"text":" endpoint, accepting an integer value.","type":"text"}],"type":"paragraph"}],"code":"TutorialRoutes-1-2-Building.swift","media":null,"type":"step","runtimePreview":null},{"runtimePreview":null,"type":"step","media":null,"code":"TutorialRoutes-1-3-Protocol.swift","caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now, let’s add conformance to the "},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","type":"reference"},{"text":" protocol by adding ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/asURL","isActive":true},{"text":" as a computed URL property.","type":"text"}]}]},{"type":"step","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This will help build URLs, as it’ll be common to every URL this route collection generates."}]}],"media":null,"code":"TutorialRoutes-1-4-Host.swift","runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Add a string variable for the hostname, setting it to https:\/\/swapi.dev\/"}],"type":"paragraph"}]},{"code":"TutorialRoutes-1-5-URLString.swift","type":"step","media":null,"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This is convenient, as it means we only have to do the conversion to the "},{"type":"codeVoice","code":"URL"},{"type":"text","text":" type in one place."}]}],"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Add a variable to hold a URL string."}],"type":"paragraph"}]},{"media":null,"caption":[],"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a "},{"code":"switch","type":"codeVoice"},{"type":"text","text":" statement, which we’ll use to cover each possible enum case."}]}],"code":"TutorialRoutes-1-6-Switch.swift","type":"step"},{"runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a case for "},{"type":"codeVoice","code":"people"},{"text":", capturing the associated ","type":"text"},{"code":"Int","type":"codeVoice"},{"type":"text","text":" as “personID”."}]}],"media":null,"caption":[{"type":"paragraph","inlineContent":[{"text":"We use “personID” here because in this case, the integer represents the person ID. If it represented something else, we would give this variable a different name, more appropriate to what it represents in the API.","type":"text"}]}],"code":"TutorialRoutes-1-7-Case.swift"},{"type":"step","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This, of course, results in “https:\/\/swapi.dev\/people\/_” (where _ represents the Int provided)."}]}],"content":[{"type":"paragraph","inlineContent":[{"text":"Build the URL string by combining ","type":"text"},{"type":"codeVoice","code":"host"},{"text":" with ","type":"text"},{"type":"codeVoice","code":"\"\/api\/people\/\""},{"text":" and ","type":"text"},{"type":"codeVoice","code":"personID"},{"text":".","type":"text"}]}],"code":"TutorialRoutes-1-8-Body.swift","media":null,"runtimePreview":null},{"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, let’s return the URL, satisfying the protocol."}]}],"media":null,"code":"TutorialRoutes-1-9-Return.swift","runtimePreview":null}]}]},{"assessments":[{"title":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Suppose you had to model the URL https:\/\/swapi.dev\/api\/planets\/1 . Suppose also that the endpoint worked without a planet ID, like https:\/\/swapi.dev\/api\/planets\/ . How would you model this?"}]}],"choices":[{"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Remember, this endpoint can accept parameters."}]}],"content":[{"inlineContent":[{"type":"text","text":"case planets()"}],"type":"paragraph"}],"isCorrect":false},{"isCorrect":false,"content":[{"inlineContent":[{"type":"text","text":"case planets(Int)"}],"type":"paragraph"}],"justification":[{"type":"paragraph","inlineContent":[{"text":"Remember, this endpoint doesn’t require parameters.","type":"text"}]}]},{"isCorrect":true,"justification":[{"inlineContent":[{"type":"text","text":"This endpoint can optionally accept an integer parameter, so this is the correct way to model it!"}],"type":"paragraph"}],"content":[{"type":"paragraph","inlineContent":[{"text":"case planets(Int?)","type":"text"}]}]}],"type":"multiple-choice","content":[]},{"type":"multiple-choice","content":[],"title":[{"inlineContent":[{"type":"text","text":"Suppose you had to model the URL https:\/\/swapi.dev\/api\/ , an API endpoint that doesn’t accept any parameters. How would you model this?"}],"type":"paragraph"}],"choices":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"case api"}]}],"isCorrect":true,"justification":[{"inlineContent":[{"type":"text","text":"The endpoint doesn’t accept any parameters, so none should be accepted by the enum, either."}],"type":"paragraph"}]},{"justification":[{"type":"paragraph","inlineContent":[{"text":"Remember, this endpoint doesn’t accept any parameters.","type":"text"}]}],"content":[{"inlineContent":[{"text":"case api(Int)","type":"text"}],"type":"paragraph"}],"isCorrect":false},{"content":[{"inlineContent":[{"type":"text","text":"case api(Int?)"}],"type":"paragraph"}],"isCorrect":false,"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Remember, this endpoint doesn’t accept any parameters, even optionally."}]}]}]}],"anchor":"Check-Your-Understanding","kind":"assessments"}],"identifier":{"url":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes","interfaceLanguage":"swift"},"references":{"TutorialRoutes-1-2-Building.swift":{"syntax":"swift","fileName":"SWRoutes.swift","fileType":"swift","highlights":[{"line":5}],"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","}"],"identifier":"TutorialRoutes-1-2-Building.swift","type":"file"},"TutorialRoutes-1-8-Body.swift":{"fileType":"swift","type":"file","syntax":"swift","identifier":"TutorialRoutes-1-8-Body.swift","fileName":"SWRoutes.swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            urlString = host + \"\/api\/people\/\\(personID)\"","        }","    }","}"],"highlights":[{"line":14}]},"doc://Ether/documentation/Ether/Ether":{"url":"\/documentation\/ether\/ether","title":"Ether","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Ether","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","navigatorTitle":[{"text":"Ether","kind":"identifier"}],"role":"symbol"},"TutorialRoutes-1-3-Protocol.swift":{"syntax":"swift","fileName":"SWRoutes.swift","fileType":"swift","highlights":[{"line":6},{"line":7},{"line":8},{"line":9}],"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        ","    }","}"],"identifier":"TutorialRoutes-1-3-Protocol.swift","type":"file"},"TutorialRoutes-1-6-Switch.swift":{"fileType":"swift","type":"file","syntax":"swift","identifier":"TutorialRoutes-1-6-Switch.swift","fileName":"SWRoutes.swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","            ","        }","    }","}"],"highlights":[{"line":11},{"line":12},{"line":13},{"line":14}]},"doc://Ether/tutorials/Ether/TutorialRoutes#Creating-your-Routes-enum":{"abstract":[{"type":"text","text":"In this tutorial, you’ll learn how to set up your "},{"type":"codeVoice","code":"Routes"},{"text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access.","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Creating-your-Routes-enum","type":"section","kind":"section","title":"Creating your Routes enum","url":"\/tutorials\/ether\/tutorialroutes#Creating-your-Routes-enum"},"doc://Ether/documentation/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether","role":"collection","title":"Ether","kind":"symbol","url":"\/documentation\/ether","type":"topic","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}]},"TutorialRoutes-1-5-URLString.swift":{"syntax":"swift","fileName":"SWRoutes.swift","fileType":"swift","highlights":[{"line":9},{"line":10}],"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","    }","}"],"identifier":"TutorialRoutes-1-5-URLString.swift","type":"file"},"TutorialRoutes-1-1-Import.swift":{"syntax":"swift","fileName":"SWRoutes.swift","fileType":"swift","highlights":[{"line":2},{"line":4},{"line":5},{"line":6}],"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    ","}"],"identifier":"TutorialRoutes-1-1-Import.swift","type":"file"},"doc://Ether/tutorials/Request-Tutorial-ToC":{"url":"\/tutorials\/request-tutorial-toc","abstract":[{"type":"text","text":"Welcome to Ether, the framework that makes working with network calls—and the data they return—not just bearable, but easy."},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"text":"Dare I say fun, even?","type":"text"}]},{"text":" Let’s explore together and see!","type":"text"}],"role":"overview","title":"Welcome to Ether!","kind":"overview","type":"topic","identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC"},"doc://Ether/tutorials/Ether/TutorialRoutes#Check-Your-Understanding":{"title":"Check Your Understanding","type":"link","identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Check-Your-Understanding","titleInlineContent":[{"type":"text","text":"Check Your Understanding"}],"url":"\/tutorials\/ether\/tutorialroutes#Check-Your-Understanding"},"TutorialNewFile.swift":{"syntax":"swift","fileName":"SWRoutes.swift","fileType":"swift","highlights":[],"content":["import Foundation",""],"identifier":"TutorialNewFile.swift","type":"file"},"doc://Ether/documentation/Ether/EtherRoute/asURL":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/asURL","type":"topic","required":true,"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asURL"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"}],"url":"\/documentation\/ether\/etherroute\/asurl","abstract":[{"text":"Returns a URL that conforms to ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt"},{"type":"text","text":" or throws an "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"kind":"symbol","title":"asURL"},"doc://Ether/tutorials/Request-Tutorial-ToC/Setting-Up-Routes":{"abstract":[],"role":"article","identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes","type":"topic","kind":"article","title":"Setting Up Routes","url":"\/tutorials\/request-tutorial-toc\/setting-up-routes"},"TutorialRoutes-1-9-Return.swift":{"fileType":"swift","identifier":"TutorialRoutes-1-9-Return.swift","syntax":"swift","type":"file","fileName":"SWRoutes.swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            urlString = host + \"\/api\/people\/\\(personID)\"","        }","        ","        return URL(string: urlString)!","    }","}"],"highlights":[{"line":16},{"line":17}]},"web.png":{"alt":"A spiderweb","variants":[{"url":"\/images\/web.png","traits":["1x","light"]}],"type":"image","identifier":"web.png"},"https://www.ietf.org/rfc/rfc2396.txt":{"title":"RFC 2396","identifier":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt","titleInlineContent":[{"text":"RFC 2396","type":"text"}],"url":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt","type":"link"},"TutorialRoutes-1-7-Case.swift":{"fileType":"swift","type":"file","syntax":"swift","identifier":"TutorialRoutes-1-7-Case.swift","fileName":"SWRoutes.swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            ","        }","    }","}"],"highlights":[{"line":13}]},"doc://Ether/documentation/Ether/Ether/Route":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Route","kind":"identifier"}],"url":"\/documentation\/ether\/ether\/route","kind":"symbol","type":"topic","role":"symbol","title":"Ether.Route","navigatorTitle":[{"kind":"identifier","text":"Route"}],"abstract":[{"text":"A typealias for ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"type":"text","text":", namespaced under "},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","type":"reference"},{"text":".","type":"text"}]},"https://swapi.dev/":{"title":"Star Wars API","identifier":"https:\/\/swapi.dev\/","titleInlineContent":[{"type":"text","text":"Star Wars API"}],"url":"https:\/\/swapi.dev\/","type":"link"},"https://swapi.dev/people/1":{"titleInlineContent":[{"text":"https:\/\/swapi.dev\/people\/1","type":"text"}],"url":"https:\/\/swapi.dev\/people\/1","type":"link","title":"https:\/\/swapi.dev\/people\/1","identifier":"https:\/\/swapi.dev\/people\/1"},"TutorialRoutes-1-4-Host.swift":{"syntax":"swift","fileName":"SWRoutes.swift","fileType":"swift","highlights":[{"line":8}],"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","    }","}"],"identifier":"TutorialRoutes-1-4-Host.swift","type":"file"},"doc://Ether/documentation/Ether/EtherRoute":{"navigatorTitle":[{"text":"EtherRoute","kind":"identifier"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","title":"EtherRoute","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EtherRoute"}],"abstract":[{"type":"text","text":"A custom protocol to which host apps can conform."}],"url":"\/documentation\/ether\/etherroute"},"doc://Ether/tutorials/Ether/TutorialRoutes":{"url":"\/tutorials\/ether\/tutorialroutes","abstract":[{"text":"In this tutorial, you’ll learn how to set up your ","type":"text"},{"type":"codeVoice","code":"Routes"},{"text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access.","type":"text"}],"role":"project","estimatedTime":"10min","kind":"project","title":"Setting Up Your Routes","type":"topic","identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes"},"doc://Ether/tutorials/Request-Tutorial-ToC/Introduction":{"abstract":[],"role":"article","identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Introduction","kind":"article","type":"topic","url":"\/tutorials\/request-tutorial-toc\/introduction","title":"Introduction"}}}