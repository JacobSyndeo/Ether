{"metadata":{"categoryPathComponent":"Request-Tutorial-ToC","category":"Ether","role":"project","title":"Setting Up Your Routes"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/ether\/tutorialroutes"]}],"kind":"project","hierarchy":{"modules":[{"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Introduction","projects":[]},{"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes","projects":[{"sections":[{"reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Creating-your-Routes-enum","kind":"task"},{"reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Check-Your-Understanding","kind":"assessment"}],"reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes"}]}],"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC","paths":[["doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC","doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/$volume","doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes"]]},"sections":[{"kind":"hero","estimatedTimeInMinutes":10,"chapter":"Setting Up Routes","title":"Setting Up Your Routes","content":[{"type":"paragraph","inlineContent":[{"text":"In this tutorial, you’ll learn how to set up your ","type":"text"},{"type":"codeVoice","code":"Routes"},{"type":"text","text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access."}]},{"inlineContent":[{"text":"If you’re reading this, we’ll assume you have already created a project and successfully imported ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"We’ll be using the "},{"identifier":"https:\/\/swapi.dev\/","type":"reference","isActive":true},{"text":" for this tutorial.","type":"text"}]},{"inlineContent":[{"text":"s@Image(source: xwing.jpeg, alt: “A photo of X-wing Starfighters from Star Wars.”)","type":"text"}],"type":"paragraph"}]},{"kind":"tasks","tasks":[{"stepsSection":[{"code":"TutorialNewFile.swift","caption":[{"inlineContent":[{"text":"A good habit is to name this file and enum in a way that makes it clear ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"which"}]},{"type":"text","text":" API you’re building routes for. Since this is the Star Wars API, we use the “SW” prefix."}],"type":"paragraph"}],"media":null,"type":"step","runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Create a new Swift file in your project, naming it "},{"type":"codeVoice","code":"SWRoutes.swift"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"In your new file, import ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether"},{"type":"text","text":", and declare an "},{"code":"enum","type":"codeVoice"},{"text":" called ","type":"text"},{"code":"SWRoutes","type":"codeVoice"},{"type":"text","text":", conforming to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route"},{"text":" protocol.","type":"text"}]}],"media":null,"code":"TutorialRoutes-1-1-Import.swift","runtimePreview":null,"caption":[],"type":"step"},{"runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a case for the "},{"type":"codeVoice","code":"people"},{"type":"text","text":" endpoint, accepting an integer value."}]}],"code":"TutorialRoutes-1-2-Building.swift","caption":[{"type":"paragraph","inlineContent":[{"text":"We do this because the URL ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/swapi.dev\/people\/1"},{"text":" has an integer at the end, which is the ID of the person. We therefore model our route as a case that accepts an integer.","type":"text"}]}],"media":null},{"type":"step","caption":[],"media":null,"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now, let’s add conformance to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route"},{"type":"text","text":" protocol by adding "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/asURL"},{"type":"text","text":" as a computed URL property."}]}],"code":"TutorialRoutes-1-3-Protocol.swift"},{"type":"step","media":null,"caption":[{"inlineContent":[{"text":"This will help build URLs, as it’ll be common to every URL this route collection generates.","type":"text"}],"type":"paragraph"}],"runtimePreview":null,"code":"TutorialRoutes-1-4-Host.swift","content":[{"inlineContent":[{"text":"Add a string variable for the hostname, setting it to https:\/\/swapi.dev\/","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Add a variable to hold a URL string.","type":"text"}],"type":"paragraph"}],"code":"TutorialRoutes-1-5-URLString.swift","type":"step","caption":[{"inlineContent":[{"type":"text","text":"This is convenient, as it means we only have to do the conversion to the "},{"type":"codeVoice","code":"URL"},{"text":" type in one place.","type":"text"}],"type":"paragraph"}],"media":null,"runtimePreview":null},{"type":"step","code":"TutorialRoutes-1-6-Switch.swift","runtimePreview":null,"media":null,"caption":[],"content":[{"inlineContent":[{"text":"Add a ","type":"text"},{"type":"codeVoice","code":"switch"},{"type":"text","text":" statement, which we’ll use to cover each possible enum case."}],"type":"paragraph"}]},{"code":"TutorialRoutes-1-7-Case.swift","runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Add a case for "},{"type":"codeVoice","code":"people"},{"text":", capturing the associated ","type":"text"},{"type":"codeVoice","code":"Int"},{"type":"text","text":" as “personID”."}],"type":"paragraph"}],"caption":[{"type":"paragraph","inlineContent":[{"text":"We use “personID” here because in this case, the integer represents the person ID. If it represented something else, we would give this variable a different name, more appropriate to what it represents in the API.","type":"text"}]}],"type":"step","media":null},{"media":null,"content":[{"inlineContent":[{"type":"text","text":"Build the URL string by combining "},{"type":"codeVoice","code":"host"},{"type":"text","text":" with "},{"type":"codeVoice","code":"\"\/api\/people\/\""},{"text":" and ","type":"text"},{"code":"personID","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"step","code":"TutorialRoutes-1-8-Body.swift","runtimePreview":null,"caption":[{"inlineContent":[{"text":"This, of course, results in “https:\/\/swapi.dev\/people\/_” (where _ represents the Int provided).","type":"text"}],"type":"paragraph"}]},{"type":"step","media":null,"runtimePreview":null,"content":[{"inlineContent":[{"text":"Finally, let’s return the URL, satisfying the protocol.","type":"text"}],"type":"paragraph"}],"code":"TutorialRoutes-1-9-Return.swift","caption":[]}],"contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","media":"web.png","content":[{"type":"paragraph","inlineContent":[{"text":"We’ll start by creating an enum to hold and manage our routes.","type":"text"}]}]}],"anchor":"Creating-your-Routes-enum","title":"Creating your Routes enum"}]},{"assessments":[{"choices":[{"content":[{"inlineContent":[{"text":"case planets()","type":"text"}],"type":"paragraph"}],"isCorrect":false,"justification":[{"inlineContent":[{"type":"text","text":"Remember, this endpoint can accept parameters."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"case planets(Int)","type":"text"}],"type":"paragraph"}],"isCorrect":false,"justification":[{"inlineContent":[{"type":"text","text":"Remember, this endpoint doesn’t require parameters."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"case planets(Int?)"}]}],"justification":[{"inlineContent":[{"type":"text","text":"This endpoint can optionally accept an integer parameter, so this is the correct way to model it!"}],"type":"paragraph"}],"isCorrect":true}],"type":"multiple-choice","content":[],"title":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Suppose you had to model the URL https:\/\/swapi.dev\/api\/planets\/1 . Suppose also that the endpoint worked without a planet ID, like https:\/\/swapi.dev\/api\/planets\/ . How would you model this?"}]}]},{"type":"multiple-choice","title":[{"type":"paragraph","inlineContent":[{"text":"Suppose you had to model the URL https:\/\/swapi.dev\/api\/ , an API endpoint that doesn’t accept any parameters. How would you model this?","type":"text"}]}],"content":[],"choices":[{"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The endpoint doesn’t accept any parameters, so none should be accepted by the enum, either."}]}],"isCorrect":true,"content":[{"type":"paragraph","inlineContent":[{"text":"case api","type":"text"}]}]},{"justification":[{"inlineContent":[{"type":"text","text":"Remember, this endpoint doesn’t accept any parameters."}],"type":"paragraph"}],"isCorrect":false,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"case api(Int)"}]}]},{"content":[{"inlineContent":[{"text":"case api(Int?)","type":"text"}],"type":"paragraph"}],"isCorrect":false,"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Remember, this endpoint doesn’t accept any parameters, even optionally."}]}]}]}],"anchor":"Check-Your-Understanding","kind":"assessments"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes","interfaceLanguage":"swift"},"references":{"TutorialRoutes-1-2-Building.swift":{"type":"file","fileName":"SWRoutes.swift","identifier":"TutorialRoutes-1-2-Building.swift","fileType":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","}"],"syntax":"swift","highlights":[{"line":5}]},"doc://Ether/tutorials/Ether/TutorialRoutes#Check-Your-Understanding":{"type":"link","titleInlineContent":[{"type":"text","text":"Check Your Understanding"}],"title":"Check Your Understanding","identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Check-Your-Understanding","url":"\/tutorials\/ether\/tutorialroutes#Check-Your-Understanding"},"web.png":{"alt":"A spiderweb","type":"image","identifier":"web.png","variants":[{"traits":["1x","light"],"url":"\/images\/web.png"}]},"doc://Ether/documentation/Ether/EtherRoute/asURL":{"url":"\/documentation\/ether\/etherroute\/asurl","abstract":[{"type":"text","text":"Returns a URL that conforms to "},{"type":"reference","identifier":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt","isActive":true},{"type":"text","text":" or throws an "},{"type":"codeVoice","code":"Error"},{"text":".","type":"text"}],"required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asURL","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier","text":"URL"}],"type":"topic","title":"asURL","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/asURL","kind":"symbol","role":"symbol"},"https://www.ietf.org/rfc/rfc2396.txt":{"type":"link","titleInlineContent":[{"text":"RFC 2396","type":"text"}],"title":"RFC 2396","identifier":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt","url":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt"},"doc://Ether/tutorials/Request-Tutorial-ToC":{"title":"Welcome to Ether!","kind":"overview","identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC","abstract":[{"text":"Welcome to Ether, the framework that makes working with network calls—and the data they return—not just bearable, but easy.","type":"text"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Dare I say fun, even?"}]},{"text":" Let’s explore together and see!","type":"text"}],"url":"\/tutorials\/request-tutorial-toc","role":"overview","type":"topic"},"TutorialRoutes-1-9-Return.swift":{"identifier":"TutorialRoutes-1-9-Return.swift","fileType":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            urlString = host + \"\/api\/people\/\\(personID)\"","        }","        ","        return URL(string: urlString)!","    }","}"],"syntax":"swift","type":"file","highlights":[{"line":16},{"line":17}],"fileName":"SWRoutes.swift"},"TutorialNewFile.swift":{"fileName":"SWRoutes.swift","highlights":[],"fileType":"swift","type":"file","identifier":"TutorialNewFile.swift","content":["import Foundation",""],"syntax":"swift"},"doc://Ether/tutorials/Ether/TutorialRoutes#Creating-your-Routes-enum":{"kind":"section","type":"section","url":"\/tutorials\/ether\/tutorialroutes#Creating-your-Routes-enum","role":"pseudoSymbol","identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Creating-your-Routes-enum","abstract":[{"text":"In this tutorial, you’ll learn how to set up your ","type":"text"},{"code":"Routes","type":"codeVoice"},{"type":"text","text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access."}],"title":"Creating your Routes enum"},"doc://Ether/tutorials/Ether/TutorialRoutes":{"role":"project","title":"Setting Up Your Routes","type":"topic","url":"\/tutorials\/ether\/tutorialroutes","abstract":[{"text":"In this tutorial, you’ll learn how to set up your ","type":"text"},{"code":"Routes","type":"codeVoice"},{"text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access.","type":"text"}],"kind":"project","estimatedTime":"10min","identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes"},"doc://Ether/documentation/Ether/Ether":{"role":"symbol","title":"Ether","type":"topic","abstract":[{"text":"The core of Ether. All the core functions and types are namespaced under this.","type":"text"}],"url":"\/documentation\/ether\/ether","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Ether"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Ether","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether"},"TutorialRoutes-1-1-Import.swift":{"fileName":"SWRoutes.swift","type":"file","fileType":"swift","identifier":"TutorialRoutes-1-1-Import.swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    ","}"],"syntax":"swift","highlights":[{"line":2},{"line":4},{"line":5},{"line":6}]},"TutorialRoutes-1-4-Host.swift":{"fileName":"SWRoutes.swift","type":"file","fileType":"swift","identifier":"TutorialRoutes-1-4-Host.swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","    }","}"],"syntax":"swift","highlights":[{"line":8}]},"doc://Ether/tutorials/Request-Tutorial-ToC/Introduction":{"kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Introduction","title":"Introduction","role":"article","url":"\/tutorials\/request-tutorial-toc\/introduction"},"doc://Ether/documentation/Ether/Ether/Route":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","title":"Ether.Route","url":"\/documentation\/ether\/ether\/route","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Route"}],"navigatorTitle":[{"text":"Route","kind":"identifier"}],"type":"topic","abstract":[{"text":"A typealias for ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","type":"reference","isActive":true},{"text":", namespaced under ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","isActive":true,"type":"reference"},{"text":".","type":"text"}],"kind":"symbol"},"TutorialRoutes-1-6-Switch.swift":{"fileName":"SWRoutes.swift","highlights":[{"line":11},{"line":12},{"line":13},{"line":14}],"fileType":"swift","type":"file","identifier":"TutorialRoutes-1-6-Switch.swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","            ","        }","    }","}"],"syntax":"swift"},"https://swapi.dev/people/1":{"type":"link","titleInlineContent":[{"type":"text","text":"https:\/\/swapi.dev\/people\/1"}],"identifier":"https:\/\/swapi.dev\/people\/1","title":"https:\/\/swapi.dev\/people\/1","url":"https:\/\/swapi.dev\/people\/1"},"TutorialRoutes-1-7-Case.swift":{"identifier":"TutorialRoutes-1-7-Case.swift","highlights":[{"line":13}],"syntax":"swift","fileName":"SWRoutes.swift","fileType":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            ","        }","    }","}"],"type":"file"},"TutorialRoutes-1-3-Protocol.swift":{"highlights":[{"line":6},{"line":7},{"line":8},{"line":9}],"syntax":"swift","fileType":"swift","type":"file","identifier":"TutorialRoutes-1-3-Protocol.swift","fileName":"SWRoutes.swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        ","    }","}"]},"doc://Ether/documentation/Ether":{"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether","role":"collection","url":"\/documentation\/ether","abstract":[{"text":"Welcome to easy, clean, Swifty networking!","type":"text"}],"kind":"symbol","title":"Ether"},"https://swapi.dev/":{"type":"link","url":"https:\/\/swapi.dev\/","title":"Star Wars API","titleInlineContent":[{"type":"text","text":"Star Wars API"}],"identifier":"https:\/\/swapi.dev\/"},"doc://Ether/documentation/Ether/EtherRoute":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherRoute"}],"title":"EtherRoute","role":"symbol","type":"topic","url":"\/documentation\/ether\/etherroute","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","navigatorTitle":[{"text":"EtherRoute","kind":"identifier"}],"abstract":[{"type":"text","text":"A custom protocol to which host apps can conform."}]},"doc://Ether/tutorials/Request-Tutorial-ToC/Setting-Up-Routes":{"url":"\/tutorials\/request-tutorial-toc\/setting-up-routes","role":"article","title":"Setting Up Routes","kind":"article","type":"topic","identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes","abstract":[]},"TutorialRoutes-1-8-Body.swift":{"type":"file","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            urlString = host + \"\/api\/people\/\\(personID)\"","        }","    }","}"],"fileName":"SWRoutes.swift","syntax":"swift","fileType":"swift","identifier":"TutorialRoutes-1-8-Body.swift","highlights":[{"line":14}]},"TutorialRoutes-1-5-URLString.swift":{"fileType":"swift","syntax":"swift","highlights":[{"line":9},{"line":10}],"identifier":"TutorialRoutes-1-5-URLString.swift","type":"file","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","    }","}"],"fileName":"SWRoutes.swift"}}}