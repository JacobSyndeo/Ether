{"metadata":{"category":"Ether","role":"project","categoryPathComponent":"Request-Tutorial-ToC","title":"Setting Up Your Routes"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/ether\/tutorialroutes"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"project","sections":[{"estimatedTimeInMinutes":10,"title":"Setting Up Your Routes","kind":"hero","chapter":"Setting Up Routes","content":[{"type":"paragraph","inlineContent":[{"text":"In this tutorial, you’ll learn how to set up your ","type":"text"},{"type":"codeVoice","code":"Routes"},{"type":"text","text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access."}]},{"type":"paragraph","inlineContent":[{"text":"If you’re reading this, we’ll assume you have already created a project and successfully imported ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether","type":"reference","isActive":true},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"We’ll be using the "},{"isActive":true,"identifier":"https:\/\/swapi.dev\/","type":"reference"},{"text":" for this tutorial.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"s@Image(source: xwing.jpeg, alt: “A photo of X-wing Starfighters from Star Wars.”)","type":"text"}]}]},{"kind":"tasks","tasks":[{"contentSection":[{"media":"web.png","content":[{"type":"paragraph","inlineContent":[{"text":"We’ll start by creating an enum to hold and manage our routes.","type":"text"}]}],"kind":"contentAndMedia","mediaPosition":"trailing"}],"stepsSection":[{"media":null,"code":"TutorialNewFile.swift","content":[{"inlineContent":[{"text":"Create a new Swift file in your project, naming it ","type":"text"},{"type":"codeVoice","code":"SWRoutes.swift"},{"type":"text","text":"."}],"type":"paragraph"}],"runtimePreview":null,"type":"step","caption":[{"inlineContent":[{"text":"A good habit is to name this file and enum in a way that makes it clear ","type":"text"},{"inlineContent":[{"text":"which","type":"text"}],"type":"emphasis"},{"type":"text","text":" API you’re building routes for. Since this is the Star Wars API, we use the “SW” prefix."}],"type":"paragraph"}]},{"caption":[],"media":null,"type":"step","runtimePreview":null,"code":"TutorialRoutes-1-1-Import.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In your new file, import "},{"identifier":"doc:\/\/Ether\/documentation\/Ether","isActive":true,"type":"reference"},{"type":"text","text":", and declare an "},{"code":"enum","type":"codeVoice"},{"type":"text","text":" called "},{"type":"codeVoice","code":"SWRoutes"},{"text":", conforming to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","isActive":true},{"text":" protocol.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Add a case for the ","type":"text"},{"type":"codeVoice","code":"people"},{"type":"text","text":" endpoint, accepting an integer value."}]}],"media":null,"runtimePreview":null,"code":"TutorialRoutes-1-2-Building.swift","caption":[{"inlineContent":[{"type":"text","text":"We do this because the URL "},{"type":"reference","identifier":"https:\/\/swapi.dev\/people\/1","isActive":true},{"type":"text","text":" has an integer at the end, which is the ID of the person. We therefore model our route as a case that accepts an integer."}],"type":"paragraph"}],"type":"step"},{"type":"step","caption":[],"media":null,"runtimePreview":null,"code":"TutorialRoutes-1-3-Protocol.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Now, let’s add conformance to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route"},{"text":" protocol by adding ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/asURL","isActive":true,"type":"reference"},{"text":" as a computed URL property.","type":"text"}]}]},{"code":"TutorialRoutes-1-4-Host.swift","runtimePreview":null,"caption":[{"inlineContent":[{"type":"text","text":"This will help build URLs, as it’ll be common to every URL this route collection generates."}],"type":"paragraph"}],"content":[{"type":"paragraph","inlineContent":[{"text":"Add a string variable for the hostname, setting it to https:\/\/swapi.dev\/","type":"text"}]}],"media":null,"type":"step"},{"runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a variable to hold a URL string."}]}],"media":null,"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This is convenient, as it means we only have to do the conversion to the "},{"type":"codeVoice","code":"URL"},{"type":"text","text":" type in one place."}]}],"code":"TutorialRoutes-1-5-URLString.swift"},{"type":"step","media":null,"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Add a ","type":"text"},{"type":"codeVoice","code":"switch"},{"type":"text","text":" statement, which we’ll use to cover each possible enum case."}]}],"code":"TutorialRoutes-1-6-Switch.swift","caption":[]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Add a case for ","type":"text"},{"type":"codeVoice","code":"people"},{"text":", capturing the associated ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":" as “personID”.","type":"text"}]}],"media":null,"code":"TutorialRoutes-1-7-Case.swift","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We use “personID” here because in this case, the integer represents the person ID. If it represented something else, we would give this variable a different name, more appropriate to what it represents in the API."}]}],"runtimePreview":null,"type":"step"},{"media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Build the URL string by combining ","type":"text"},{"type":"codeVoice","code":"host"},{"type":"text","text":" with "},{"type":"codeVoice","code":"\"\/api\/people\/\""},{"type":"text","text":" and "},{"code":"personID","type":"codeVoice"},{"text":".","type":"text"}]}],"code":"TutorialRoutes-1-8-Body.swift","caption":[{"inlineContent":[{"type":"text","text":"This, of course, results in “https:\/\/swapi.dev\/people\/_” (where _ represents the Int provided)."}],"type":"paragraph"}],"type":"step","runtimePreview":null},{"caption":[],"runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, let’s return the URL, satisfying the protocol."}]}],"media":null,"code":"TutorialRoutes-1-9-Return.swift"}],"anchor":"Creating-your-Routes-enum","title":"Creating your Routes enum"}]},{"anchor":"Check-Your-Understanding","assessments":[{"type":"multiple-choice","choices":[{"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Remember, this endpoint can accept parameters."}]}],"content":[{"inlineContent":[{"type":"text","text":"case planets()"}],"type":"paragraph"}],"isCorrect":false},{"justification":[{"inlineContent":[{"type":"text","text":"Remember, this endpoint doesn’t require parameters."}],"type":"paragraph"}],"content":[{"inlineContent":[{"type":"text","text":"case planets(Int)"}],"type":"paragraph"}],"isCorrect":false},{"content":[{"inlineContent":[{"type":"text","text":"case planets(Int?)"}],"type":"paragraph"}],"isCorrect":true,"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This endpoint can optionally accept an integer parameter, so this is the correct way to model it!"}]}]}],"title":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Suppose you had to model the URL https:\/\/swapi.dev\/api\/planets\/1 . Suppose also that the endpoint worked without a planet ID, like https:\/\/swapi.dev\/api\/planets\/ . How would you model this?"}]}],"content":[]},{"content":[],"title":[{"type":"paragraph","inlineContent":[{"text":"Suppose you had to model the URL https:\/\/swapi.dev\/api\/ , an API endpoint that doesn’t accept any parameters. How would you model this?","type":"text"}]}],"type":"multiple-choice","choices":[{"content":[{"type":"paragraph","inlineContent":[{"text":"case api","type":"text"}]}],"isCorrect":true,"justification":[{"inlineContent":[{"text":"The endpoint doesn’t accept any parameters, so none should be accepted by the enum, either.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"case api(Int)"}]}],"isCorrect":false,"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Remember, this endpoint doesn’t accept any parameters."}]}]},{"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Remember, this endpoint doesn’t accept any parameters, even optionally."}]}],"content":[{"inlineContent":[{"type":"text","text":"case api(Int?)"}],"type":"paragraph"}],"isCorrect":false}]}],"kind":"assessments"}],"hierarchy":{"modules":[{"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Introduction","projects":[]},{"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Creating-your-Routes-enum"},{"reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Check-Your-Understanding","kind":"assessment"}],"reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes"}]}],"paths":[["doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC","doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/$volume","doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes"]],"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC"},"references":{"TutorialRoutes-1-9-Return.swift":{"fileType":"swift","fileName":"SWRoutes.swift","type":"file","syntax":"swift","identifier":"TutorialRoutes-1-9-Return.swift","highlights":[{"line":16},{"line":17}],"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            urlString = host + \"\/api\/people\/\\(personID)\"","        }","        ","        return URL(string: urlString)!","    }","}"]},"doc://Ether/tutorials/Request-Tutorial-ToC":{"role":"overview","kind":"overview","title":"Welcome to Ether!","identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC","url":"\/tutorials\/request-tutorial-toc","type":"topic","abstract":[{"text":"Welcome to Ether, the framework that makes working with network calls—and the data they return—not just bearable, but easy.","type":"text"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"text":"Dare I say fun, even?","type":"text"}]},{"type":"text","text":" Let’s explore together and see!"}]},"TutorialNewFile.swift":{"content":["import Foundation",""],"identifier":"TutorialNewFile.swift","syntax":"swift","highlights":[],"fileType":"swift","fileName":"SWRoutes.swift","type":"file"},"https://swapi.dev/people/1":{"identifier":"https:\/\/swapi.dev\/people\/1","titleInlineContent":[{"text":"https:\/\/swapi.dev\/people\/1","type":"text"}],"title":"https:\/\/swapi.dev\/people\/1","url":"https:\/\/swapi.dev\/people\/1","type":"link"},"doc://Ether/documentation/Ether/EtherRoute":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A custom protocol to which host apps can conform."}],"url":"\/documentation\/ether\/etherroute","title":"EtherRoute","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherRoute"}],"navigatorTitle":[{"kind":"identifier","text":"EtherRoute"}],"role":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},"https://www.ietf.org/rfc/rfc2396.txt":{"identifier":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt","type":"link","title":"RFC 2396","url":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt","titleInlineContent":[{"text":"RFC 2396","type":"text"}]},"doc://Ether/documentation/Ether":{"url":"\/documentation\/ether","type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether","title":"Ether","role":"collection","abstract":[{"text":"Welcome to easy, clean, Swifty networking!","type":"text"}],"kind":"symbol"},"doc://Ether/tutorials/Ether/TutorialRoutes#Check-Your-Understanding":{"identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Check-Your-Understanding","titleInlineContent":[{"text":"Check Your Understanding","type":"text"}],"title":"Check Your Understanding","url":"\/tutorials\/ether\/tutorialroutes#Check-Your-Understanding","type":"link"},"TutorialRoutes-1-4-Host.swift":{"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","    }","}"],"identifier":"TutorialRoutes-1-4-Host.swift","syntax":"swift","highlights":[{"line":8}],"fileType":"swift","fileName":"SWRoutes.swift","type":"file"},"TutorialRoutes-1-8-Body.swift":{"fileType":"swift","fileName":"SWRoutes.swift","type":"file","syntax":"swift","identifier":"TutorialRoutes-1-8-Body.swift","highlights":[{"line":14}],"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            urlString = host + \"\/api\/people\/\\(personID)\"","        }","    }","}"]},"TutorialRoutes-1-1-Import.swift":{"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    ","}"],"identifier":"TutorialRoutes-1-1-Import.swift","syntax":"swift","highlights":[{"line":2},{"line":4},{"line":5},{"line":6}],"fileType":"swift","fileName":"SWRoutes.swift","type":"file"},"TutorialRoutes-1-3-Protocol.swift":{"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        ","    }","}"],"syntax":"swift","identifier":"TutorialRoutes-1-3-Protocol.swift","highlights":[{"line":6},{"line":7},{"line":8},{"line":9}],"fileType":"swift","fileName":"SWRoutes.swift","type":"file"},"web.png":{"identifier":"web.png","type":"image","alt":"A spiderweb","variants":[{"url":"\/images\/web.png","traits":["1x","light"]}]},"doc://Ether/documentation/Ether/EtherRoute/asURL":{"role":"symbol","url":"\/documentation\/ether\/etherroute\/asurl","kind":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/asURL","required":true,"abstract":[{"text":"Returns a URL that conforms to ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt"},{"type":"text","text":" or throws an "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"title":"asURL","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asURL"},{"text":": ","kind":"text"},{"text":"URL","preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier"}]},"TutorialRoutes-1-7-Case.swift":{"fileType":"swift","fileName":"SWRoutes.swift","type":"file","syntax":"swift","identifier":"TutorialRoutes-1-7-Case.swift","highlights":[{"line":13}],"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            ","        }","    }","}"]},"doc://Ether/tutorials/Request-Tutorial-ToC/Setting-Up-Routes":{"identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes","url":"\/tutorials\/request-tutorial-toc\/setting-up-routes","title":"Setting Up Routes","kind":"article","role":"article","abstract":[],"type":"topic"},"TutorialRoutes-1-6-Switch.swift":{"fileType":"swift","fileName":"SWRoutes.swift","type":"file","syntax":"swift","identifier":"TutorialRoutes-1-6-Switch.swift","highlights":[{"line":11},{"line":12},{"line":13},{"line":14}],"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","            ","        }","    }","}"]},"doc://Ether/documentation/Ether/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/ether\/ether","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Ether","kind":"identifier"}],"navigatorTitle":[{"text":"Ether","kind":"identifier"}],"abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"title":"Ether"},"doc://Ether/tutorials/Ether/TutorialRoutes#Creating-your-Routes-enum":{"identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Creating-your-Routes-enum","url":"\/tutorials\/ether\/tutorialroutes#Creating-your-Routes-enum","title":"Creating your Routes enum","kind":"section","role":"pseudoSymbol","abstract":[{"text":"In this tutorial, you’ll learn how to set up your ","type":"text"},{"code":"Routes","type":"codeVoice"},{"type":"text","text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access."}],"type":"section"},"https://swapi.dev/":{"identifier":"https:\/\/swapi.dev\/","titleInlineContent":[{"text":"Star Wars API","type":"text"}],"title":"Star Wars API","url":"https:\/\/swapi.dev\/","type":"link"},"TutorialRoutes-1-2-Building.swift":{"type":"file","syntax":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","}"],"fileName":"SWRoutes.swift","identifier":"TutorialRoutes-1-2-Building.swift","fileType":"swift","highlights":[{"line":5}]},"doc://Ether/documentation/Ether/Ether/Route":{"kind":"symbol","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Route"}],"abstract":[{"type":"text","text":"A typealias for "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","isActive":true,"type":"reference"},{"type":"text","text":", namespaced under "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","isActive":true},{"type":"text","text":"."}],"title":"Ether.Route","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Route","kind":"identifier"}],"url":"\/documentation\/ether\/ether\/route"},"doc://Ether/tutorials/Request-Tutorial-ToC/Introduction":{"type":"topic","abstract":[],"url":"\/tutorials\/request-tutorial-toc\/introduction","title":"Introduction","identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Introduction","role":"article","kind":"article"},"TutorialRoutes-1-5-URLString.swift":{"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","    }","}"],"identifier":"TutorialRoutes-1-5-URLString.swift","syntax":"swift","highlights":[{"line":9},{"line":10}],"fileType":"swift","fileName":"SWRoutes.swift","type":"file"},"doc://Ether/tutorials/Ether/TutorialRoutes":{"estimatedTime":"10min","role":"project","kind":"project","title":"Setting Up Your Routes","identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes","url":"\/tutorials\/ether\/tutorialroutes","type":"topic","abstract":[{"type":"text","text":"In this tutorial, you’ll learn how to set up your "},{"type":"codeVoice","code":"Routes"},{"text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access.","type":"text"}]}}}