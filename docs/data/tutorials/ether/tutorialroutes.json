{"variants":[{"paths":["\/tutorials\/ether\/tutorialroutes"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"kind":"hero","title":"Setting Up Your Routes","chapter":"Setting Up Routes","estimatedTimeInMinutes":10,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In this tutorial, you’ll learn how to set up your "},{"type":"codeVoice","code":"Routes"},{"type":"text","text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you’re reading this, we’ll assume you have already created a project and successfully imported "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We’ll be using the "},{"type":"reference","isActive":true,"identifier":"https:\/\/swapi.dev\/"},{"type":"text","text":" for this tutorial."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"s@Image(source: xwing.jpeg, alt: “A photo of X-wing Starfighters from Star Wars.”)"}]}]},{"kind":"tasks","tasks":[{"anchor":"Creating-your-Routes-enum","title":"Creating your Routes enum","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We’ll start by creating an enum to hold and manage our routes."}]}],"mediaPosition":"trailing","media":"web.png"}],"stepsSection":[{"code":"TutorialNewFile.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new Swift file in your project, naming it "},{"type":"codeVoice","code":"SWRoutes.swift"},{"type":"text","text":"."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A good habit is to name this file and enum in a way that makes it clear "},{"type":"emphasis","inlineContent":[{"type":"text","text":"which"}]},{"type":"text","text":" API you’re building routes for. Since this is the Star Wars API, we use the “SW” prefix."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"TutorialRoutes-1-1-Import.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In your new file, import "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether"},{"type":"text","text":", and declare an "},{"type":"codeVoice","code":"enum"},{"type":"text","text":" called "},{"type":"codeVoice","code":"SWRoutes"},{"type":"text","text":", conforming to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route"},{"type":"text","text":" protocol."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"TutorialRoutes-1-2-Building.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a case for the "},{"type":"codeVoice","code":"people"},{"type":"text","text":" endpoint, accepting an integer value."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We do this because the URL "},{"type":"reference","isActive":true,"identifier":"https:\/\/swapi.dev\/people\/1"},{"type":"text","text":" has an integer at the end, which is the ID of the person. We therefore model our route as a case that accepts an integer."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"TutorialRoutes-1-3-Protocol.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now, let’s add conformance to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route"},{"type":"text","text":" protocol by adding "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/asURL"},{"type":"text","text":" as a computed URL property."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"TutorialRoutes-1-4-Host.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a string variable for the hostname, setting it to https:\/\/swapi.dev\/"}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This will help build URLs, as it’ll be common to every URL this route collection generates."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"TutorialRoutes-1-5-URLString.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a variable to hold a URL string."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This is convenient, as it means we only have to do the conversion to the "},{"type":"codeVoice","code":"URL"},{"type":"text","text":" type in one place."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"TutorialRoutes-1-6-Switch.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a "},{"type":"codeVoice","code":"switch"},{"type":"text","text":" statement, which we’ll use to cover each possible enum case."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"TutorialRoutes-1-7-Case.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a case for "},{"type":"codeVoice","code":"people"},{"type":"text","text":", capturing the associated "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" as “personID”."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We use “personID” here because in this case, the integer represents the person ID. If it represented something else, we would give this variable a different name, more appropriate to what it represents in the API."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"TutorialRoutes-1-8-Body.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build the URL string by combining "},{"type":"codeVoice","code":"host"},{"type":"text","text":" with "},{"type":"codeVoice","code":"\"\/api\/people\/\""},{"type":"text","text":" and "},{"type":"codeVoice","code":"personID"},{"type":"text","text":"."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This, of course, results in “https:\/\/swapi.dev\/people\/_” (where _ represents the Int provided)."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"TutorialRoutes-1-9-Return.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, let’s return the URL, satisfying the protocol."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]}]},{"kind":"assessments","assessments":[{"title":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Suppose you had to model the URL https:\/\/swapi.dev\/api\/planets\/1 . Suppose also that the endpoint worked without a planet ID, like https:\/\/swapi.dev\/api\/planets\/ . How would you model this?"}]}],"content":[],"type":"multiple-choice","choices":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"case planets()"}]}],"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Remember, this endpoint can accept parameters."}]}],"isCorrect":false},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"case planets(Int)"}]}],"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Remember, this endpoint doesn’t require parameters."}]}],"isCorrect":false},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"case planets(Int?)"}]}],"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This endpoint can optionally accept an integer parameter, so this is the correct way to model it!"}]}],"isCorrect":true}]},{"title":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Suppose you had to model the URL https:\/\/swapi.dev\/api\/ , an API endpoint that doesn’t accept any parameters. How would you model this?"}]}],"content":[],"type":"multiple-choice","choices":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"case api"}]}],"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The endpoint doesn’t accept any parameters, so none should be accepted by the enum, either."}]}],"isCorrect":true},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"case api(Int)"}]}],"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Remember, this endpoint doesn’t accept any parameters."}]}],"isCorrect":false},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"case api(Int?)"}]}],"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Remember, this endpoint doesn’t accept any parameters, even optionally."}]}],"isCorrect":false}]}],"anchor":"Check-Your-Understanding"}],"identifier":{"url":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"Setting Up Your Routes","categoryPathComponent":"Request-Tutorial-ToC","role":"project","category":"Ether"},"hierarchy":{"modules":[{"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Introduction","projects":[]},{"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes","projects":[{"reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes","sections":[{"kind":"task","reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Creating-your-Routes-enum"},{"kind":"assessment","reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Check-Your-Understanding"}]}]}],"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC","paths":[["doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC","doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/$volume","doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes"]]},"references":{"doc://Ether/documentation/Ether":{"role":"collection","title":"Ether","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}],"identifier":"doc:\/\/Ether\/documentation\/Ether","kind":"symbol","type":"topic","url":"\/documentation\/ether"},"TutorialRoutes-1-3-Protocol.swift":{"syntax":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        ","    }","}"],"fileName":"SWRoutes.swift","identifier":"TutorialRoutes-1-3-Protocol.swift","type":"file","fileType":"swift","highlights":[{"line":6},{"line":7},{"line":8},{"line":9}]},"TutorialRoutes-1-2-Building.swift":{"syntax":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","}"],"fileName":"SWRoutes.swift","identifier":"TutorialRoutes-1-2-Building.swift","type":"file","fileType":"swift","highlights":[{"line":5}]},"TutorialRoutes-1-8-Body.swift":{"syntax":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            urlString = host + \"\/api\/people\/\\(personID)\"","        }","    }","}"],"fileName":"SWRoutes.swift","identifier":"TutorialRoutes-1-8-Body.swift","type":"file","fileType":"swift","highlights":[{"line":14}]},"https://swapi.dev/people/1":{"title":"https:\/\/swapi.dev\/people\/1","titleInlineContent":[{"type":"text","text":"https:\/\/swapi.dev\/people\/1"}],"type":"link","identifier":"https:\/\/swapi.dev\/people\/1","url":"https:\/\/swapi.dev\/people\/1"},"TutorialRoutes-1-7-Case.swift":{"syntax":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            ","        }","    }","}"],"fileName":"SWRoutes.swift","identifier":"TutorialRoutes-1-7-Case.swift","type":"file","fileType":"swift","highlights":[{"line":13}]},"TutorialRoutes-1-9-Return.swift":{"syntax":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            urlString = host + \"\/api\/people\/\\(personID)\"","        }","        ","        return URL(string: urlString)!","    }","}"],"fileName":"SWRoutes.swift","identifier":"TutorialRoutes-1-9-Return.swift","type":"file","fileType":"swift","highlights":[{"line":16},{"line":17}]},"doc://Ether/documentation/Ether/EtherRoute/asURL":{"role":"symbol","title":"asURL","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"asURL"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"}],"abstract":[{"type":"text","text":"Returns a URL that conforms to "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt"},{"type":"text","text":" or throws an "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/asURL","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/ether\/etherroute\/asurl"},"https://swapi.dev/":{"title":"Star Wars API","titleInlineContent":[{"type":"text","text":"Star Wars API"}],"type":"link","identifier":"https:\/\/swapi.dev\/","url":"https:\/\/swapi.dev\/"},"TutorialRoutes-1-1-Import.swift":{"syntax":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    ","}"],"fileName":"SWRoutes.swift","identifier":"TutorialRoutes-1-1-Import.swift","type":"file","fileType":"swift","highlights":[{"line":2},{"line":4},{"line":5},{"line":6}]},"TutorialRoutes-1-6-Switch.swift":{"syntax":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","            ","        }","    }","}"],"fileName":"SWRoutes.swift","identifier":"TutorialRoutes-1-6-Switch.swift","type":"file","fileType":"swift","highlights":[{"line":11},{"line":12},{"line":13},{"line":14}]},"doc://Ether/tutorials/Ether/TutorialRoutes#Creating-your-Routes-enum":{"role":"pseudoSymbol","title":"Creating your Routes enum","abstract":[{"type":"text","text":"In this tutorial, you’ll learn how to set up your "},{"type":"codeVoice","code":"Routes"},{"type":"text","text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access."}],"identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Creating-your-Routes-enum","kind":"section","type":"section","url":"\/tutorials\/ether\/tutorialroutes#Creating-your-Routes-enum"},"web.png":{"alt":"A spiderweb","type":"image","identifier":"web.png","variants":[{"url":"\/images\/web.png","traits":["1x","light"]}]},"doc://Ether/tutorials/Request-Tutorial-ToC/Introduction":{"role":"article","title":"Introduction","abstract":[],"identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Introduction","kind":"article","type":"topic","url":"\/tutorials\/request-tutorial-toc\/introduction"},"doc://Ether/tutorials/Request-Tutorial-ToC/Setting-Up-Routes":{"role":"article","title":"Setting Up Routes","abstract":[],"identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes","kind":"article","type":"topic","url":"\/tutorials\/request-tutorial-toc\/setting-up-routes"},"doc://Ether/tutorials/Ether/TutorialRoutes#Check-Your-Understanding":{"title":"Check Your Understanding","titleInlineContent":[{"type":"text","text":"Check Your Understanding"}],"type":"link","identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Check-Your-Understanding","url":"\/tutorials\/ether\/tutorialroutes#Check-Your-Understanding"},"TutorialRoutes-1-5-URLString.swift":{"syntax":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","    }","}"],"fileName":"SWRoutes.swift","identifier":"TutorialRoutes-1-5-URLString.swift","type":"file","fileType":"swift","highlights":[{"line":9},{"line":10}]},"doc://Ether/tutorials/Ether/TutorialRoutes":{"role":"project","title":"Setting Up Your Routes","estimatedTime":"10min","abstract":[{"type":"text","text":"In this tutorial, you’ll learn how to set up your "},{"type":"codeVoice","code":"Routes"},{"type":"text","text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access."}],"identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes","kind":"project","type":"topic","url":"\/tutorials\/ether\/tutorialroutes"},"TutorialRoutes-1-4-Host.swift":{"syntax":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","    }","}"],"fileName":"SWRoutes.swift","identifier":"TutorialRoutes-1-4-Host.swift","type":"file","fileType":"swift","highlights":[{"line":8}]},"doc://Ether/documentation/Ether/EtherRoute":{"role":"symbol","title":"EtherRoute","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EtherRoute"}],"abstract":[{"type":"text","text":"A custom protocol to which host apps can conform."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EtherRoute"}],"url":"\/documentation\/ether\/etherroute"},"doc://Ether/tutorials/Request-Tutorial-ToC":{"role":"overview","title":"Welcome to Ether!","abstract":[{"type":"text","text":"Welcome to Ether, the framework that makes working with network calls—and the data they return—not just bearable, but easy."},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Dare I say fun, even?"}]},{"type":"text","text":" Let’s explore together and see!"}],"identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC","kind":"overview","type":"topic","url":"\/tutorials\/request-tutorial-toc"},"https://www.ietf.org/rfc/rfc2396.txt":{"title":"RFC 2396","titleInlineContent":[{"type":"text","text":"RFC 2396"}],"type":"link","identifier":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt","url":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt"},"doc://Ether/documentation/Ether/Ether/Route":{"role":"symbol","title":"Ether.Route","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Route"}],"abstract":[{"type":"text","text":"A typealias for "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute"},{"type":"text","text":", namespaced under "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether"},{"type":"text","text":"."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Route"}],"url":"\/documentation\/ether\/ether\/route"},"TutorialNewFile.swift":{"syntax":"swift","content":["import Foundation",""],"fileName":"SWRoutes.swift","identifier":"TutorialNewFile.swift","type":"file","fileType":"swift","highlights":[]},"doc://Ether/documentation/Ether/Ether":{"role":"symbol","title":"Ether","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Ether"}],"abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Ether"}],"url":"\/documentation\/ether\/ether"}}}