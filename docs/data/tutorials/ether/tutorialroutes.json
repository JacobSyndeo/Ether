{"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/ether\/tutorialroutes"]}],"identifier":{"url":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes","interfaceLanguage":"swift"},"metadata":{"category":"Ether","categoryPathComponent":"Request-Tutorial-ToC","role":"project","title":"Setting Up Your Routes"},"sections":[{"chapter":"Setting Up Routes","estimatedTimeInMinutes":10,"title":"Setting Up Your Routes","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In this tutorial, you’ll learn how to set up your "},{"code":"Routes","type":"codeVoice"},{"type":"text","text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access."}]},{"inlineContent":[{"type":"text","text":"If you’re reading this, we’ll assume you have already created a project and successfully imported "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"We’ll be using the ","type":"text"},{"type":"reference","identifier":"https:\/\/swapi.dev\/","isActive":true},{"type":"text","text":" for this tutorial."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"s@Image(source: xwing.jpeg, alt: “A photo of X-wing Starfighters from Star Wars.”)"}]}],"kind":"hero"},{"tasks":[{"anchor":"Creating-your-Routes-enum","title":"Creating your Routes enum","contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","media":"web.png","content":[{"inlineContent":[{"text":"We’ll start by creating an enum to hold and manage our routes.","type":"text"}],"type":"paragraph"}]}],"stepsSection":[{"code":"TutorialNewFile.swift","caption":[{"inlineContent":[{"text":"A good habit is to name this file and enum in a way that makes it clear ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"which"}]},{"text":" API you’re building routes for. Since this is the Star Wars API, we use the “SW” prefix.","type":"text"}],"type":"paragraph"}],"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Create a new Swift file in your project, naming it ","type":"text"},{"type":"codeVoice","code":"SWRoutes.swift"},{"type":"text","text":"."}]}],"runtimePreview":null,"media":null},{"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"In your new file, import ","type":"text"},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether","isActive":true},{"type":"text","text":", and declare an "},{"type":"codeVoice","code":"enum"},{"text":" called ","type":"text"},{"type":"codeVoice","code":"SWRoutes"},{"type":"text","text":", conforming to the "},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","type":"reference"},{"type":"text","text":" protocol."}]}],"type":"step","media":null,"code":"TutorialRoutes-1-1-Import.swift","runtimePreview":null},{"content":[{"inlineContent":[{"type":"text","text":"Add a case for the "},{"code":"people","type":"codeVoice"},{"type":"text","text":" endpoint, accepting an integer value."}],"type":"paragraph"}],"type":"step","media":null,"runtimePreview":null,"code":"TutorialRoutes-1-2-Building.swift","caption":[{"type":"paragraph","inlineContent":[{"text":"We do this because the URL ","type":"text"},{"type":"reference","identifier":"https:\/\/swapi.dev\/people\/1","isActive":true},{"text":" has an integer at the end, which is the ID of the person. We therefore model our route as a case that accepts an integer.","type":"text"}]}]},{"runtimePreview":null,"media":null,"content":[{"inlineContent":[{"text":"Now, let’s add conformance to the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route"},{"text":" protocol by adding ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/asURL"},{"text":" as a computed URL property.","type":"text"}],"type":"paragraph"}],"type":"step","caption":[],"code":"TutorialRoutes-1-3-Protocol.swift"},{"type":"step","runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Add a string variable for the hostname, setting it to https:\/\/swapi.dev\/"}],"type":"paragraph"}],"caption":[{"inlineContent":[{"type":"text","text":"This will help build URLs, as it’ll be common to every URL this route collection generates."}],"type":"paragraph"}],"media":null,"code":"TutorialRoutes-1-4-Host.swift"},{"runtimePreview":null,"type":"step","code":"TutorialRoutes-1-5-URLString.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Add a variable to hold a URL string.","type":"text"}]}],"media":null,"caption":[{"inlineContent":[{"text":"This is convenient, as it means we only have to do the conversion to the ","type":"text"},{"code":"URL","type":"codeVoice"},{"type":"text","text":" type in one place."}],"type":"paragraph"}]},{"runtimePreview":null,"caption":[],"code":"TutorialRoutes-1-6-Switch.swift","type":"step","media":null,"content":[{"inlineContent":[{"type":"text","text":"Add a "},{"type":"codeVoice","code":"switch"},{"type":"text","text":" statement, which we’ll use to cover each possible enum case."}],"type":"paragraph"}]},{"runtimePreview":null,"media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a case for "},{"type":"codeVoice","code":"people"},{"type":"text","text":", capturing the associated "},{"code":"Int","type":"codeVoice"},{"type":"text","text":" as “personID”."}]}],"caption":[{"inlineContent":[{"type":"text","text":"We use “personID” here because in this case, the integer represents the person ID. If it represented something else, we would give this variable a different name, more appropriate to what it represents in the API."}],"type":"paragraph"}],"code":"TutorialRoutes-1-7-Case.swift","type":"step"},{"caption":[{"inlineContent":[{"type":"text","text":"This, of course, results in “https:\/\/swapi.dev\/people\/_” (where _ represents the Int provided)."}],"type":"paragraph"}],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build the URL string by combining "},{"type":"codeVoice","code":"host"},{"type":"text","text":" with "},{"code":"\"\/api\/people\/\"","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"personID"},{"type":"text","text":"."}]}],"code":"TutorialRoutes-1-8-Body.swift","type":"step","media":null,"runtimePreview":null},{"media":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, let’s return the URL, satisfying the protocol."}]}],"code":"TutorialRoutes-1-9-Return.swift","runtimePreview":null,"caption":[]}]}],"kind":"tasks"},{"anchor":"Check-Your-Understanding","kind":"assessments","assessments":[{"choices":[{"isCorrect":false,"justification":[{"type":"paragraph","inlineContent":[{"text":"Remember, this endpoint can accept parameters.","type":"text"}]}],"content":[{"inlineContent":[{"type":"text","text":"case planets()"}],"type":"paragraph"}]},{"justification":[{"type":"paragraph","inlineContent":[{"text":"Remember, this endpoint doesn’t require parameters.","type":"text"}]}],"content":[{"type":"paragraph","inlineContent":[{"text":"case planets(Int)","type":"text"}]}],"isCorrect":false},{"isCorrect":true,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"case planets(Int?)"}]}],"justification":[{"inlineContent":[{"type":"text","text":"This endpoint can optionally accept an integer parameter, so this is the correct way to model it!"}],"type":"paragraph"}]}],"content":[],"title":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Suppose you had to model the URL https:\/\/swapi.dev\/api\/planets\/1 . Suppose also that the endpoint worked without a planet ID, like https:\/\/swapi.dev\/api\/planets\/ . How would you model this?"}]}],"type":"multiple-choice"},{"title":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Suppose you had to model the URL https:\/\/swapi.dev\/api\/ , an API endpoint that doesn’t accept any parameters. How would you model this?"}]}],"choices":[{"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The endpoint doesn’t accept any parameters, so none should be accepted by the enum, either."}]}],"isCorrect":true,"content":[{"inlineContent":[{"text":"case api","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"case api(Int)"}],"type":"paragraph"}],"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Remember, this endpoint doesn’t accept any parameters."}]}],"isCorrect":false},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"case api(Int?)"}]}],"isCorrect":false,"justification":[{"inlineContent":[{"type":"text","text":"Remember, this endpoint doesn’t accept any parameters, even optionally."}],"type":"paragraph"}]}],"content":[],"type":"multiple-choice"}]}],"kind":"project","hierarchy":{"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC","modules":[{"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Introduction","projects":[]},{"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes","projects":[{"sections":[{"reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Creating-your-Routes-enum","kind":"task"},{"kind":"assessment","reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Check-Your-Understanding"}],"reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes"}]}],"paths":[["doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC","doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/$volume","doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes"]]},"references":{"TutorialRoutes-1-7-Case.swift":{"syntax":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            ","        }","    }","}"],"identifier":"TutorialRoutes-1-7-Case.swift","type":"file","highlights":[{"line":13}],"fileName":"SWRoutes.swift","fileType":"swift"},"TutorialRoutes-1-1-Import.swift":{"highlights":[{"line":2},{"line":4},{"line":5},{"line":6}],"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    ","}"],"fileName":"SWRoutes.swift","fileType":"swift","syntax":"swift","type":"file","identifier":"TutorialRoutes-1-1-Import.swift"},"TutorialRoutes-1-3-Protocol.swift":{"highlights":[{"line":6},{"line":7},{"line":8},{"line":9}],"identifier":"TutorialRoutes-1-3-Protocol.swift","type":"file","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        ","    }","}"],"fileName":"SWRoutes.swift","fileType":"swift","syntax":"swift"},"doc://Ether/documentation/Ether/Ether/Route":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","navigatorTitle":[{"kind":"identifier","text":"Route"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A typealias for ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","type":"reference","isActive":true},{"text":", namespaced under ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether"},{"type":"text","text":"."}],"title":"Ether.Route","url":"\/documentation\/ether\/ether\/route","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Route"}]},"https://swapi.dev/people/1":{"url":"https:\/\/swapi.dev\/people\/1","title":"https:\/\/swapi.dev\/people\/1","type":"link","identifier":"https:\/\/swapi.dev\/people\/1","titleInlineContent":[{"text":"https:\/\/swapi.dev\/people\/1","type":"text"}]},"web.png":{"identifier":"web.png","alt":"A spiderweb","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/web.png"}]},"TutorialRoutes-1-6-Switch.swift":{"syntax":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","            ","        }","    }","}"],"type":"file","identifier":"TutorialRoutes-1-6-Switch.swift","highlights":[{"line":11},{"line":12},{"line":13},{"line":14}],"fileName":"SWRoutes.swift","fileType":"swift"},"doc://Ether/documentation/Ether/Ether":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","navigatorTitle":[{"text":"Ether","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"title":"Ether","url":"\/documentation\/ether\/ether","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Ether","kind":"identifier"}]},"doc://Ether/tutorials/Request-Tutorial-ToC":{"identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC","type":"topic","kind":"overview","role":"overview","abstract":[{"type":"text","text":"Welcome to Ether, the framework that makes working with network calls—and the data they return—not just bearable, but easy."},{"text":" ","type":"text"},{"inlineContent":[{"type":"text","text":"Dare I say fun, even?"}],"type":"emphasis"},{"type":"text","text":" Let’s explore together and see!"}],"title":"Welcome to Ether!","url":"\/tutorials\/request-tutorial-toc"},"doc://Ether/tutorials/Request-Tutorial-ToC/Setting-Up-Routes":{"title":"Setting Up Routes","kind":"article","role":"article","url":"\/tutorials\/request-tutorial-toc\/setting-up-routes","abstract":[],"identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes","type":"topic"},"doc://Ether/tutorials/Ether/TutorialRoutes#Creating-your-Routes-enum":{"kind":"section","identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Creating-your-Routes-enum","role":"pseudoSymbol","url":"\/tutorials\/ether\/tutorialroutes#Creating-your-Routes-enum","abstract":[{"text":"In this tutorial, you’ll learn how to set up your ","type":"text"},{"code":"Routes","type":"codeVoice"},{"type":"text","text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access."}],"type":"section","title":"Creating your Routes enum"},"doc://Ether/tutorials/Request-Tutorial-ToC/Introduction":{"title":"Introduction","kind":"article","role":"article","url":"\/tutorials\/request-tutorial-toc\/introduction","abstract":[],"type":"topic","identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Introduction"},"TutorialRoutes-1-5-URLString.swift":{"highlights":[{"line":9},{"line":10}],"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","    }","}"],"fileName":"SWRoutes.swift","fileType":"swift","syntax":"swift","type":"file","identifier":"TutorialRoutes-1-5-URLString.swift"},"https://www.ietf.org/rfc/rfc2396.txt":{"titleInlineContent":[{"text":"RFC 2396","type":"text"}],"type":"link","identifier":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt","title":"RFC 2396","url":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt"},"doc://Ether/tutorials/Ether/TutorialRoutes#Check-Your-Understanding":{"url":"\/tutorials\/ether\/tutorialroutes#Check-Your-Understanding","title":"Check Your Understanding","type":"link","identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Check-Your-Understanding","titleInlineContent":[{"type":"text","text":"Check Your Understanding"}]},"TutorialRoutes-1-4-Host.swift":{"highlights":[{"line":8}],"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","    }","}"],"fileName":"SWRoutes.swift","fileType":"swift","syntax":"swift","type":"file","identifier":"TutorialRoutes-1-4-Host.swift"},"TutorialRoutes-1-8-Body.swift":{"highlights":[{"line":14}],"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            urlString = host + \"\/api\/people\/\\(personID)\"","        }","    }","}"],"fileName":"SWRoutes.swift","fileType":"swift","syntax":"swift","type":"file","identifier":"TutorialRoutes-1-8-Body.swift"},"TutorialRoutes-1-9-Return.swift":{"highlights":[{"line":16},{"line":17}],"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            urlString = host + \"\/api\/people\/\\(personID)\"","        }","        ","        return URL(string: urlString)!","    }","}"],"fileName":"SWRoutes.swift","fileType":"swift","syntax":"swift","type":"file","identifier":"TutorialRoutes-1-9-Return.swift"},"TutorialNewFile.swift":{"highlights":[],"content":["import Foundation",""],"fileName":"SWRoutes.swift","fileType":"swift","syntax":"swift","type":"file","identifier":"TutorialNewFile.swift"},"doc://Ether/documentation/Ether":{"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}],"kind":"symbol","url":"\/documentation\/ether","role":"collection","title":"Ether"},"https://swapi.dev/":{"titleInlineContent":[{"text":"Star Wars API","type":"text"}],"type":"link","identifier":"https:\/\/swapi.dev\/","title":"Star Wars API","url":"https:\/\/swapi.dev\/"},"TutorialRoutes-1-2-Building.swift":{"highlights":[{"line":5}],"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","}"],"fileName":"SWRoutes.swift","fileType":"swift","syntax":"swift","type":"file","identifier":"TutorialRoutes-1-2-Building.swift"},"doc://Ether/tutorials/Ether/TutorialRoutes":{"identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes","type":"topic","kind":"project","estimatedTime":"10min","role":"project","abstract":[{"type":"text","text":"In this tutorial, you’ll learn how to set up your "},{"code":"Routes","type":"codeVoice"},{"type":"text","text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access."}],"title":"Setting Up Your Routes","url":"\/tutorials\/ether\/tutorialroutes"},"doc://Ether/documentation/Ether/EtherRoute/asURL":{"required":true,"kind":"symbol","abstract":[{"text":"Returns a URL that conforms to ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt"},{"text":" or throws an ","type":"text"},{"type":"codeVoice","code":"Error"},{"text":".","type":"text"}],"role":"symbol","url":"\/documentation\/ether\/etherroute\/asurl","identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/asURL","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"asURL","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation3URLV","text":"URL","kind":"typeIdentifier"}],"title":"asURL"},"doc://Ether/documentation/Ether/EtherRoute":{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","navigatorTitle":[{"kind":"identifier","text":"EtherRoute"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A custom protocol to which host apps can conform."}],"title":"EtherRoute","url":"\/documentation\/ether\/etherroute","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"EtherRoute","kind":"identifier"}]}}}