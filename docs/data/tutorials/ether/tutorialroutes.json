{"hierarchy":{"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC","paths":[["doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC","doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/$volume","doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes"]],"modules":[{"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Introduction","projects":[]},{"projects":[{"sections":[{"reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Creating-your-Routes-enum","kind":"task"},{"kind":"assessment","reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Check-Your-Understanding"}],"reference":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes"}],"reference":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes"},"kind":"project","variants":[{"paths":["\/tutorials\/ether\/tutorialroutes"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[{"estimatedTimeInMinutes":10,"kind":"hero","title":"Setting Up Your Routes","content":[{"type":"paragraph","inlineContent":[{"text":"In this tutorial, you’ll learn how to set up your ","type":"text"},{"type":"codeVoice","code":"Routes"},{"type":"text","text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access."}]},{"inlineContent":[{"type":"text","text":"If you’re reading this, we’ll assume you have already created a project and successfully imported "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"We’ll be using the ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/swapi.dev\/"},{"type":"text","text":" for this tutorial."}]},{"inlineContent":[{"text":"s@Image(source: xwing.jpeg, alt: “A photo of X-wing Starfighters from Star Wars.”)","type":"text"}],"type":"paragraph"}],"chapter":"Setting Up Routes"},{"tasks":[{"contentSection":[{"media":"web.png","kind":"contentAndMedia","mediaPosition":"trailing","content":[{"inlineContent":[{"type":"text","text":"We’ll start by creating an enum to hold and manage our routes."}],"type":"paragraph"}]}],"anchor":"Creating-your-Routes-enum","title":"Creating your Routes enum","stepsSection":[{"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Create a new Swift file in your project, naming it "},{"code":"SWRoutes.swift","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A good habit is to name this file and enum in a way that makes it clear "},{"type":"emphasis","inlineContent":[{"type":"text","text":"which"}]},{"type":"text","text":" API you’re building routes for. Since this is the Star Wars API, we use the “SW” prefix."}]}],"type":"step","media":null,"code":"TutorialNewFile.swift"},{"code":"TutorialRoutes-1-1-Import.swift","media":null,"type":"step","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In your new file, import "},{"type":"reference","identifier":"doc:\/\/Ether\/documentation\/Ether","isActive":true},{"text":", and declare an ","type":"text"},{"code":"enum","type":"codeVoice"},{"type":"text","text":" called "},{"type":"codeVoice","code":"SWRoutes"},{"type":"text","text":", conforming to the "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","isActive":true,"type":"reference"},{"text":" protocol.","type":"text"}]}],"caption":[]},{"type":"step","media":null,"code":"TutorialRoutes-1-2-Building.swift","runtimePreview":null,"content":[{"inlineContent":[{"text":"Add a case for the ","type":"text"},{"type":"codeVoice","code":"people"},{"type":"text","text":" endpoint, accepting an integer value."}],"type":"paragraph"}],"caption":[{"inlineContent":[{"text":"We do this because the URL ","type":"text"},{"isActive":true,"identifier":"https:\/\/swapi.dev\/people\/1","type":"reference"},{"type":"text","text":" has an integer at the end, which is the ID of the person. We therefore model our route as a case that accepts an integer."}],"type":"paragraph"}]},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Now, let’s add conformance to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","type":"reference"},{"text":" protocol by adding ","type":"text"},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/asURL","isActive":true,"type":"reference"},{"type":"text","text":" as a computed URL property."}]}],"code":"TutorialRoutes-1-3-Protocol.swift","caption":[],"media":null,"runtimePreview":null},{"type":"step","media":null,"content":[{"inlineContent":[{"type":"text","text":"Add a string variable for the hostname, setting it to https:\/\/swapi.dev\/"}],"type":"paragraph"}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This will help build URLs, as it’ll be common to every URL this route collection generates."}]}],"runtimePreview":null,"code":"TutorialRoutes-1-4-Host.swift"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Add a variable to hold a URL string.","type":"text"}]}],"type":"step","caption":[{"type":"paragraph","inlineContent":[{"text":"This is convenient, as it means we only have to do the conversion to the ","type":"text"},{"code":"URL","type":"codeVoice"},{"text":" type in one place.","type":"text"}]}],"code":"TutorialRoutes-1-5-URLString.swift","media":null,"runtimePreview":null},{"caption":[],"content":[{"inlineContent":[{"text":"Add a ","type":"text"},{"code":"switch","type":"codeVoice"},{"text":" statement, which we’ll use to cover each possible enum case.","type":"text"}],"type":"paragraph"}],"media":null,"code":"TutorialRoutes-1-6-Switch.swift","runtimePreview":null,"type":"step"},{"runtimePreview":null,"content":[{"inlineContent":[{"text":"Add a case for ","type":"text"},{"type":"codeVoice","code":"people"},{"type":"text","text":", capturing the associated "},{"code":"Int","type":"codeVoice"},{"type":"text","text":" as “personID”."}],"type":"paragraph"}],"caption":[{"type":"paragraph","inlineContent":[{"text":"We use “personID” here because in this case, the integer represents the person ID. If it represented something else, we would give this variable a different name, more appropriate to what it represents in the API.","type":"text"}]}],"type":"step","code":"TutorialRoutes-1-7-Case.swift","media":null},{"type":"step","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This, of course, results in “https:\/\/swapi.dev\/people\/_” (where _ represents the Int provided)."}]}],"code":"TutorialRoutes-1-8-Body.swift","media":null,"content":[{"inlineContent":[{"type":"text","text":"Build the URL string by combining "},{"code":"host","type":"codeVoice"},{"type":"text","text":" with "},{"type":"codeVoice","code":"\"\/api\/people\/\""},{"type":"text","text":" and "},{"code":"personID","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"runtimePreview":null},{"type":"step","caption":[],"media":null,"code":"TutorialRoutes-1-9-Return.swift","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Finally, let’s return the URL, satisfying the protocol.","type":"text"}]}]}]}],"kind":"tasks"},{"anchor":"Check-Your-Understanding","assessments":[{"title":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Suppose you had to model the URL https:\/\/swapi.dev\/api\/planets\/1 . Suppose also that the endpoint worked without a planet ID, like https:\/\/swapi.dev\/api\/planets\/ . How would you model this?"}]}],"content":[],"type":"multiple-choice","choices":[{"content":[{"inlineContent":[{"text":"case planets()","type":"text"}],"type":"paragraph"}],"isCorrect":false,"justification":[{"inlineContent":[{"type":"text","text":"Remember, this endpoint can accept parameters."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"case planets(Int)","type":"text"}],"type":"paragraph"}],"isCorrect":false,"justification":[{"inlineContent":[{"text":"Remember, this endpoint doesn’t require parameters.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"case planets(Int?)"}]}],"justification":[{"inlineContent":[{"text":"This endpoint can optionally accept an integer parameter, so this is the correct way to model it!","type":"text"}],"type":"paragraph"}],"isCorrect":true}]},{"choices":[{"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The endpoint doesn’t accept any parameters, so none should be accepted by the enum, either."}]}],"isCorrect":true,"content":[{"type":"paragraph","inlineContent":[{"text":"case api","type":"text"}]}]},{"isCorrect":false,"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Remember, this endpoint doesn’t accept any parameters."}]}],"content":[{"inlineContent":[{"type":"text","text":"case api(Int)"}],"type":"paragraph"}]},{"justification":[{"inlineContent":[{"text":"Remember, this endpoint doesn’t accept any parameters, even optionally.","type":"text"}],"type":"paragraph"}],"content":[{"type":"paragraph","inlineContent":[{"text":"case api(Int?)","type":"text"}]}],"isCorrect":false}],"title":[{"inlineContent":[{"type":"text","text":"Suppose you had to model the URL https:\/\/swapi.dev\/api\/ , an API endpoint that doesn’t accept any parameters. How would you model this?"}],"type":"paragraph"}],"type":"multiple-choice","content":[]}],"kind":"assessments"}],"metadata":{"role":"project","title":"Setting Up Your Routes","category":"Ether","categoryPathComponent":"Request-Tutorial-ToC"},"references":{"doc://Ether/documentation/Ether/Ether/Route":{"abstract":[{"type":"text","text":"A typealias for "},{"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","type":"reference","isActive":true},{"type":"text","text":", namespaced under "},{"isActive":true,"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","type":"reference"},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Route"}],"title":"Ether.Route","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Route"}],"type":"topic","identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether\/Route","kind":"symbol","url":"\/documentation\/ether\/ether\/route"},"https://swapi.dev/people/1":{"identifier":"https:\/\/swapi.dev\/people\/1","type":"link","titleInlineContent":[{"text":"https:\/\/swapi.dev\/people\/1","type":"text"}],"url":"https:\/\/swapi.dev\/people\/1","title":"https:\/\/swapi.dev\/people\/1"},"doc://Ether/documentation/Ether/Ether":{"url":"\/documentation\/ether\/ether","navigatorTitle":[{"text":"Ether","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The core of Ether. All the core functions and types are namespaced under this."}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/Ether","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Ether"}],"title":"Ether"},"TutorialRoutes-1-6-Switch.swift":{"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","            ","        }","    }","}"],"syntax":"swift","type":"file","identifier":"TutorialRoutes-1-6-Switch.swift","fileName":"SWRoutes.swift","highlights":[{"line":11},{"line":12},{"line":13},{"line":14}],"fileType":"swift"},"TutorialRoutes-1-3-Protocol.swift":{"syntax":"swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        ","    }","}"],"type":"file","identifier":"TutorialRoutes-1-3-Protocol.swift","fileName":"SWRoutes.swift","highlights":[{"line":6},{"line":7},{"line":8},{"line":9}],"fileType":"swift"},"doc://Ether/documentation/Ether/EtherRoute":{"title":"EtherRoute","abstract":[{"text":"A custom protocol to which host apps can conform.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/ether\/etherroute","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EtherRoute","kind":"identifier"}],"navigatorTitle":[{"text":"EtherRoute","kind":"identifier"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute","role":"symbol"},"TutorialRoutes-1-8-Body.swift":{"content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            urlString = host + \"\/api\/people\/\\(personID)\"","        }","    }","}"],"syntax":"swift","type":"file","identifier":"TutorialRoutes-1-8-Body.swift","fileName":"SWRoutes.swift","highlights":[{"line":14}],"fileType":"swift"},"doc://Ether/tutorials/Request-Tutorial-ToC":{"title":"Welcome to Ether!","url":"\/tutorials\/request-tutorial-toc","role":"overview","type":"topic","kind":"overview","abstract":[{"type":"text","text":"Welcome to Ether, the framework that makes working with network calls—and the data they return—not just bearable, but easy."},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"text":"Dare I say fun, even?","type":"text"}]},{"text":" Let’s explore together and see!","type":"text"}],"identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC"},"TutorialNewFile.swift":{"identifier":"TutorialNewFile.swift","fileName":"SWRoutes.swift","syntax":"swift","fileType":"swift","type":"file","content":["import Foundation",""],"highlights":[]},"https://www.ietf.org/rfc/rfc2396.txt":{"type":"link","url":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt","title":"RFC 2396","identifier":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt","titleInlineContent":[{"text":"RFC 2396","type":"text"}]},"doc://Ether/documentation/Ether":{"kind":"symbol","abstract":[{"type":"text","text":"Welcome to easy, clean, Swifty networking!"}],"title":"Ether","identifier":"doc:\/\/Ether\/documentation\/Ether","url":"\/documentation\/ether","role":"collection","type":"topic"},"doc://Ether/tutorials/Request-Tutorial-ToC/Setting-Up-Routes":{"identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Setting-Up-Routes","type":"topic","kind":"article","role":"article","url":"\/tutorials\/request-tutorial-toc\/setting-up-routes","title":"Setting Up Routes","abstract":[]},"TutorialRoutes-1-7-Case.swift":{"identifier":"TutorialRoutes-1-7-Case.swift","fileName":"SWRoutes.swift","syntax":"swift","fileType":"swift","type":"file","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            ","        }","    }","}"],"highlights":[{"line":13}]},"TutorialRoutes-1-5-URLString.swift":{"identifier":"TutorialRoutes-1-5-URLString.swift","fileName":"SWRoutes.swift","syntax":"swift","fileType":"swift","type":"file","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","    }","}"],"highlights":[{"line":9},{"line":10}]},"web.png":{"alt":"A spiderweb","type":"image","identifier":"web.png","variants":[{"url":"\/images\/web.png","traits":["1x","light"]}]},"TutorialRoutes-1-2-Building.swift":{"syntax":"swift","fileName":"SWRoutes.swift","fileType":"swift","type":"file","identifier":"TutorialRoutes-1-2-Building.swift","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","}"],"highlights":[{"line":5}]},"doc://Ether/tutorials/Ether/TutorialRoutes#Check-Your-Understanding":{"type":"link","url":"\/tutorials\/ether\/tutorialroutes#Check-Your-Understanding","title":"Check Your Understanding","identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Check-Your-Understanding","titleInlineContent":[{"text":"Check Your Understanding","type":"text"}]},"doc://Ether/tutorials/Ether/TutorialRoutes":{"estimatedTime":"10min","role":"project","identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes","abstract":[{"text":"In this tutorial, you’ll learn how to set up your ","type":"text"},{"type":"codeVoice","code":"Routes"},{"text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access.","type":"text"}],"title":"Setting Up Your Routes","kind":"project","type":"topic","url":"\/tutorials\/ether\/tutorialroutes"},"TutorialRoutes-1-4-Host.swift":{"identifier":"TutorialRoutes-1-4-Host.swift","fileName":"SWRoutes.swift","syntax":"swift","fileType":"swift","type":"file","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","    }","}"],"highlights":[{"line":8}]},"TutorialRoutes-1-9-Return.swift":{"identifier":"TutorialRoutes-1-9-Return.swift","fileName":"SWRoutes.swift","syntax":"swift","fileType":"swift","type":"file","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    case people(Int)","    ","    var asURL: URL {","        let host = \"https:\/\/swapi.dev\/\"","        ","        let urlString: String","        ","        switch self {","        case let .people(personID):","            urlString = host + \"\/api\/people\/\\(personID)\"","        }","        ","        return URL(string: urlString)!","    }","}"],"highlights":[{"line":16},{"line":17}]},"doc://Ether/tutorials/Ether/TutorialRoutes#Creating-your-Routes-enum":{"url":"\/tutorials\/ether\/tutorialroutes#Creating-your-Routes-enum","role":"pseudoSymbol","type":"section","abstract":[{"text":"In this tutorial, you’ll learn how to set up your ","type":"text"},{"type":"codeVoice","code":"Routes"},{"type":"text","text":" file, which provides a clean and organized way to model your API’s endpoints in Swift, allowing for easy, reliable access."}],"kind":"section","identifier":"doc:\/\/Ether\/tutorials\/Ether\/TutorialRoutes#Creating-your-Routes-enum","title":"Creating your Routes enum"},"TutorialRoutes-1-1-Import.swift":{"syntax":"swift","fileName":"SWRoutes.swift","fileType":"swift","type":"file","content":["import Foundation","import Ether","","enum SWRoutes: Ether.Route {","    ","}"],"identifier":"TutorialRoutes-1-1-Import.swift","highlights":[{"line":2},{"line":4},{"line":5},{"line":6}]},"https://swapi.dev/":{"identifier":"https:\/\/swapi.dev\/","title":"Star Wars API","titleInlineContent":[{"text":"Star Wars API","type":"text"}],"url":"https:\/\/swapi.dev\/","type":"link"},"doc://Ether/tutorials/Request-Tutorial-ToC/Introduction":{"url":"\/tutorials\/request-tutorial-toc\/introduction","role":"article","type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/Ether\/tutorials\/Request-Tutorial-ToC\/Introduction","title":"Introduction"},"doc://Ether/documentation/Ether/EtherRoute/asURL":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"asURL","kind":"identifier"},{"text":": ","kind":"text"},{"text":"URL","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV"}],"identifier":"doc:\/\/Ether\/documentation\/Ether\/EtherRoute\/asURL","required":true,"role":"symbol","url":"\/documentation\/ether\/etherroute\/asurl","type":"topic","abstract":[{"type":"text","text":"Returns a URL that conforms to "},{"isActive":true,"type":"reference","identifier":"https:\/\/www.ietf.org\/rfc\/rfc2396.txt"},{"text":" or throws an ","type":"text"},{"type":"codeVoice","code":"Error"},{"text":".","type":"text"}],"title":"asURL","kind":"symbol"}}}